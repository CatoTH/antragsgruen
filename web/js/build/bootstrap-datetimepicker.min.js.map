{"version":3,"sources":["bootstrap-datetimepicker.js"],"names":["factory","define","amd","exports","module","require","jQuery","moment","$","Error","dateTimePicker","element","options","date","viewDate","input","use24Hours","actualFormat","parseFormats","currentViewMode","eData","dataOptions","picker","unset","component","widget","minViewModeNumber","datePickerModes","clsName","navFnc","navStep","viewModes","verticalModes","horizontalModes","toolbarPlacements","keyMap","up","down","left","right","tab","escape","enter","pageUp","pageDown","shift","control","space","t","delete","keyState","hasTimeZone","undefined","tz","timeZone","getMoment","d","returnMoment","isDate","isMoment","useStrict","isEnabled","granularity","length","TypeError","indexOf","toLowerCase","hasTime","hasDate","getTemplate","row","topRow","middleRow","bottomRow","hoursView","minutesView","secondsView","ret","headTemplate","contTemplate","template","addClass","dateView","append","attr","icons","previous","calendarWeeks","next","clone","timeView","href","tabindex","title","tooltips","incrementHour","pickHour","decrementHour","html","incrementMinute","pickMinute","decrementMinute","incrementSecond","pickSecond","decrementSecond","togglePeriod","push","content","toolbar","collapse","showTodayButton","today","sideBySide","selectTime","time","showClear","clear","showClose","close","inline","removeClass","toolbarPlacement","place","parent","position","offset","vertical","widgetPositioning","horizontal","widgetParent","is","after","children","first","top","height","window","scrollTop","outerHeight","width","outerWidth","css","parents","filter","this","bottom","notifyEvent","e","type","isSame","oldDate","trigger","viewUpdate","change","showMode","dir","Math","max","min","find","hide","show","isValid","targetMoment","disabledDates","testDate","format","enabledDates","isInEnabledDates","minDate","isBefore","maxDate","isAfter","daysOfWeekDisabled","day","disabledHours","isInDisabledHours","enabledHours","isInEnabledHours","disabledTimeIntervals","found","each","isBetween","fillDate","currentDate","i","daysView","daysViewHeader","clsNames","eq","prevMonth","selectMonth","nextMonth","text","dayViewHeaderFormat","subtract","add","startOf","weekday","week","classNames","join","monthsView","monthsViewHeader","months","empty","prevYear","selectYear","nextYear","year","month","index","yearsView","yearsViewHeader","startYear","endYear","prevDecade","selectDecade","nextDecade","updateYears","endDecadeYear","decadesView","decadesViewHeader","startDecade","y","endDecade","startedAt","minDateDecade","maxDateDecade","prevCentury","nextCentury","updateDecades","fillTime","toggle","newDate","timeComponents","hours","table","currentHour","hour","fillHours","currentMinute","step","stepping","minute","fillMinutes","currentSecond","second","fillSeconds","update","setValue","val","data","locale","minutes","round","seconds","keepInvalid","transitioning","collapseData","hasClass","toggleClass","off","remove","parseInputDate","inputDate","Date","actions","pickerSwitch","target","closest","parseInt","selectDay","keepOpen","incrementHours","incrementMinutes","incrementSeconds","decrementHours","decrementMinutes","decrementSeconds","togglePicker","$this","$parent","expanded","closed","showPicker","showHours","showMinutes","showSeconds","selectHour","call","selectMinute","selectSecond","todaysDate","doAction","currentTarget","apply","arguments","currentMoment","prop","ignoreReadonly","trim","useCurrent","m","endOf","fillDow","spans","monthsShort","fillMonths","on","focusOnShow","focus","keydown","index2","keyBindKeys","allModifiersPressed","handler","pressedKeys","pressedModifiers","currentKey","which","hasOwnProperty","keyBinds","split","stopPropagation","preventDefault","keyup","parsedDate","stopImmediatePropagation","indexGivenDates","givenDatesArray","givenDatesIndexed","dDate","Object","keys","indexGivenHours","givenHoursArray","givenHoursIndexed","initFormatting","replace","formatInput","localeData","longDateFormat","formatInput2","extraFormats","slice","destroy","blur","allowInputToggle","removeData","disable","enable","newOptions","extend","key","value","newFormat","newZone","formats","Array","dates","splice","reduce","previousValue","currentValue","isNaN","sort","tries","defaultDate","useCurrentOptions","viewMode","toString","debug","datepickerInput","dateOptions","attributeName","charAt","toUpperCase","fn","datetimepicker","returnValue","args","prototype","isInstance","thisMethods","_options","defaults","instance","inArray","click"],"mappings":"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","file":"bootstrap-datetimepicker.min.js","sourcesContent":["/*! version : 4.17.47\n =========================================================\n bootstrap-datetimejs\n https://github.com/Eonasdan/bootstrap-datetimepicker\n Copyright (c) 2015 Jonathan Peterson\n =========================================================\n */\n/*\n The MIT License (MIT)\n\n Copyright (c) 2015 Jonathan Peterson\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n/*global define:false */\n/*global exports:false */\n/*global require:false */\n/*global jQuery:false */\n/*global moment:false */\n(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // AMD is used - Register as an anonymous module.\n        define(['jquery', 'moment'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('jquery'), require('moment'));\n    } else {\n        // Neither AMD nor CommonJS used. Use global variables.\n        if (typeof jQuery === 'undefined') {\n            throw 'bootstrap-datetimepicker requires jQuery to be loaded first';\n        }\n        if (typeof moment === 'undefined') {\n            throw 'bootstrap-datetimepicker requires Moment.js to be loaded first';\n        }\n        factory(jQuery, moment);\n    }\n}(function ($, moment) {\n    'use strict';\n    if (!moment) {\n        throw new Error('bootstrap-datetimepicker requires Moment.js to be loaded first');\n    }\n\n    var dateTimePicker = function (element, options) {\n        var picker = {},\n            date,\n            viewDate,\n            unset = true,\n            input,\n            component = false,\n            widget = false,\n            use24Hours,\n            minViewModeNumber = 0,\n            actualFormat,\n            parseFormats,\n            currentViewMode,\n            datePickerModes = [\n                {\n                    clsName: 'days',\n                    navFnc: 'M',\n                    navStep: 1\n                },\n                {\n                    clsName: 'months',\n                    navFnc: 'y',\n                    navStep: 1\n                },\n                {\n                    clsName: 'years',\n                    navFnc: 'y',\n                    navStep: 10\n                },\n                {\n                    clsName: 'decades',\n                    navFnc: 'y',\n                    navStep: 100\n                }\n            ],\n            viewModes = ['days', 'months', 'years', 'decades'],\n            verticalModes = ['top', 'bottom', 'auto'],\n            horizontalModes = ['left', 'right', 'auto'],\n            toolbarPlacements = ['default', 'top', 'bottom'],\n            keyMap = {\n                'up': 38,\n                38: 'up',\n                'down': 40,\n                40: 'down',\n                'left': 37,\n                37: 'left',\n                'right': 39,\n                39: 'right',\n                'tab': 9,\n                9: 'tab',\n                'escape': 27,\n                27: 'escape',\n                'enter': 13,\n                13: 'enter',\n                'pageUp': 33,\n                33: 'pageUp',\n                'pageDown': 34,\n                34: 'pageDown',\n                'shift': 16,\n                16: 'shift',\n                'control': 17,\n                17: 'control',\n                'space': 32,\n                32: 'space',\n                't': 84,\n                84: 't',\n                'delete': 46,\n                46: 'delete'\n            },\n            keyState = {},\n\n            /********************************************************************************\n             *\n             * Private functions\n             *\n             ********************************************************************************/\n\n            hasTimeZone = function () {\n                return moment.tz !== undefined && options.timeZone !== undefined && options.timeZone !== null && options.timeZone !== '';\n            },\n\n            getMoment = function (d) {\n                var returnMoment;\n\n                if (d === undefined || d === null) {\n                    returnMoment = moment(); //TODO should this use format? and locale?\n                } else if (moment.isDate(d) || moment.isMoment(d)) {\n                    // If the date that is passed in is already a Date() or moment() object,\n                    // pass it directly to moment.\n                    returnMoment = moment(d);\n                } else if (hasTimeZone()) { // There is a string to parse and a default time zone\n                    // parse with the tz function which takes a default time zone if it is not in the format string\n                    returnMoment = moment.tz(d, parseFormats, options.useStrict, options.timeZone);\n                } else {\n                    returnMoment = moment(d, parseFormats, options.useStrict);\n                }\n\n                if (hasTimeZone()) {\n                    returnMoment.tz(options.timeZone);\n                }\n\n                return returnMoment;\n            },\n\n            isEnabled = function (granularity) {\n                if (typeof granularity !== 'string' || granularity.length > 1) {\n                    throw new TypeError('isEnabled expects a single character string parameter');\n                }\n                switch (granularity) {\n                    case 'y':\n                        return actualFormat.indexOf('Y') !== -1;\n                    case 'M':\n                        return actualFormat.indexOf('M') !== -1;\n                    case 'd':\n                        return actualFormat.toLowerCase().indexOf('d') !== -1;\n                    case 'h':\n                    case 'H':\n                        return actualFormat.toLowerCase().indexOf('h') !== -1;\n                    case 'm':\n                        return actualFormat.indexOf('m') !== -1;\n                    case 's':\n                        return actualFormat.indexOf('s') !== -1;\n                    default:\n                        return false;\n                }\n            },\n\n            hasTime = function () {\n                return (isEnabled('h') || isEnabled('m') || isEnabled('s'));\n            },\n\n            hasDate = function () {\n                return (isEnabled('y') || isEnabled('M') || isEnabled('d'));\n            },\n\n            getDatePickerTemplate = function () {\n                var headTemplate = $('<thead>')\n                        .append($('<tr>')\n                            .append($('<th>').addClass('prev').attr('data-action', 'previous')\n                                .append($('<span>').addClass(options.icons.previous))\n                                )\n                            .append($('<th>').addClass('picker-switch').attr('data-action', 'pickerSwitch').attr('colspan', (options.calendarWeeks ? '6' : '5')))\n                            .append($('<th>').addClass('next').attr('data-action', 'next')\n                                .append($('<span>').addClass(options.icons.next))\n                                )\n                            ),\n                    contTemplate = $('<tbody>')\n                        .append($('<tr>')\n                            .append($('<td>').attr('colspan', (options.calendarWeeks ? '8' : '7')))\n                            );\n\n                return [\n                    $('<div>').addClass('datepicker-days')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate)\n                            .append($('<tbody>'))\n                            ),\n                    $('<div>').addClass('datepicker-months')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            ),\n                    $('<div>').addClass('datepicker-years')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            ),\n                    $('<div>').addClass('datepicker-decades')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            )\n                ];\n            },\n\n            getTimePickerMainTemplate = function () {\n                var topRow = $('<tr>'),\n                    middleRow = $('<tr>'),\n                    bottomRow = $('<tr>');\n\n                if (isEnabled('h')) {\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementHour }).addClass('btn').attr('data-action', 'incrementHours').append($('<span>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-hour').attr({ 'data-time-component': 'hours', 'title': options.tooltips.pickHour }).attr('data-action', 'showHours')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementHour }).addClass('btn').attr('data-action', 'decrementHours').append($('<span>').addClass(options.icons.down))));\n                }\n                if (isEnabled('m')) {\n                    if (isEnabled('h')) {\n                        topRow.append($('<td>').addClass('separator'));\n                        middleRow.append($('<td>').addClass('separator').html(':'));\n                        bottomRow.append($('<td>').addClass('separator'));\n                    }\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementMinute }).addClass('btn').attr('data-action', 'incrementMinutes')\n                            .append($('<span>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-minute').attr({ 'data-time-component': 'minutes', 'title': options.tooltips.pickMinute }).attr('data-action', 'showMinutes')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementMinute }).addClass('btn').attr('data-action', 'decrementMinutes')\n                            .append($('<span>').addClass(options.icons.down))));\n                }\n                if (isEnabled('s')) {\n                    if (isEnabled('m')) {\n                        topRow.append($('<td>').addClass('separator'));\n                        middleRow.append($('<td>').addClass('separator').html(':'));\n                        bottomRow.append($('<td>').addClass('separator'));\n                    }\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementSecond }).addClass('btn').attr('data-action', 'incrementSeconds')\n                            .append($('<span>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-second').attr({ 'data-time-component': 'seconds', 'title': options.tooltips.pickSecond }).attr('data-action', 'showSeconds')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementSecond }).addClass('btn').attr('data-action', 'decrementSeconds')\n                            .append($('<span>').addClass(options.icons.down))));\n                }\n\n                if (!use24Hours) {\n                    topRow.append($('<td>').addClass('separator'));\n                    middleRow.append($('<td>')\n                        .append($('<button>').addClass('btn btn-primary').attr({ 'data-action': 'togglePeriod', tabindex: '-1', 'title': options.tooltips.togglePeriod })));\n                    bottomRow.append($('<td>').addClass('separator'));\n                }\n\n                return $('<div>').addClass('timepicker-picker')\n                    .append($('<table>').addClass('table-condensed')\n                        .append([topRow, middleRow, bottomRow]));\n            },\n\n            getTimePickerTemplate = function () {\n                var hoursView = $('<div>').addClass('timepicker-hours')\n                        .append($('<table>').addClass('table-condensed')),\n                    minutesView = $('<div>').addClass('timepicker-minutes')\n                        .append($('<table>').addClass('table-condensed')),\n                    secondsView = $('<div>').addClass('timepicker-seconds')\n                        .append($('<table>').addClass('table-condensed')),\n                    ret = [getTimePickerMainTemplate()];\n\n                if (isEnabled('h')) {\n                    ret.push(hoursView);\n                }\n                if (isEnabled('m')) {\n                    ret.push(minutesView);\n                }\n                if (isEnabled('s')) {\n                    ret.push(secondsView);\n                }\n\n                return ret;\n            },\n\n            getToolbar = function () {\n                var row = [];\n                if (options.showTodayButton) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'today', 'title': options.tooltips.today }).append($('<span>').addClass(options.icons.today))));\n                }\n                if (!options.sideBySide && hasDate() && hasTime()) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'togglePicker', 'title': options.tooltips.selectTime }).append($('<span>').addClass(options.icons.time))));\n                }\n                if (options.showClear) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'clear', 'title': options.tooltips.clear }).append($('<span>').addClass(options.icons.clear))));\n                }\n                if (options.showClose) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'close', 'title': options.tooltips.close }).append($('<span>').addClass(options.icons.close))));\n                }\n                return $('<table>').addClass('table-condensed').append($('<tbody>').append($('<tr>').append(row)));\n            },\n\n            getTemplate = function () {\n                var template = $('<div>').addClass('bootstrap-datetimepicker-widget dropdown-menu'),\n                    dateView = $('<div>').addClass('datepicker').append(getDatePickerTemplate()),\n                    timeView = $('<div>').addClass('timepicker').append(getTimePickerTemplate()),\n                    content = $('<ul>').addClass('list-unstyled'),\n                    toolbar = $('<li>').addClass('picker-switch' + (options.collapse ? ' accordion-toggle' : '')).append(getToolbar());\n\n                if (options.inline) {\n                    template.removeClass('dropdown-menu');\n                }\n\n                if (use24Hours) {\n                    template.addClass('usetwentyfour');\n                }\n\n                if (isEnabled('s') && !use24Hours) {\n                    template.addClass('wider');\n                }\n\n                if (options.sideBySide && hasDate() && hasTime()) {\n                    template.addClass('timepicker-sbs');\n                    if (options.toolbarPlacement === 'top') {\n                        template.append(toolbar);\n                    }\n                    template.append(\n                        $('<div>').addClass('row')\n                            .append(dateView.addClass('col-md-6'))\n                            .append(timeView.addClass('col-md-6'))\n                    );\n                    if (options.toolbarPlacement === 'bottom') {\n                        template.append(toolbar);\n                    }\n                    return template;\n                }\n\n                if (options.toolbarPlacement === 'top') {\n                    content.append(toolbar);\n                }\n                if (hasDate()) {\n                    content.append($('<li>').addClass((options.collapse && hasTime() ? 'collapse in' : '')).append(dateView));\n                }\n                if (options.toolbarPlacement === 'default') {\n                    content.append(toolbar);\n                }\n                if (hasTime()) {\n                    content.append($('<li>').addClass((options.collapse && hasDate() ? 'collapse' : '')).append(timeView));\n                }\n                if (options.toolbarPlacement === 'bottom') {\n                    content.append(toolbar);\n                }\n                return template.append(content);\n            },\n\n            dataToOptions = function () {\n                var eData,\n                    dataOptions = {};\n\n                if (element.is('input') || options.inline) {\n                    eData = element.data();\n                } else {\n                    eData = element.find('input').data();\n                }\n\n                if (eData.dateOptions && eData.dateOptions instanceof Object) {\n                    dataOptions = $.extend(true, dataOptions, eData.dateOptions);\n                }\n\n                $.each(options, function (key) {\n                    var attributeName = 'date' + key.charAt(0).toUpperCase() + key.slice(1);\n                    if (eData[attributeName] !== undefined) {\n                        dataOptions[key] = eData[attributeName];\n                    }\n                });\n                return dataOptions;\n            },\n\n            place = function () {\n                var position = (component || element).position(),\n                    offset = (component || element).offset(),\n                    vertical = options.widgetPositioning.vertical,\n                    horizontal = options.widgetPositioning.horizontal,\n                    parent;\n\n                if (options.widgetParent) {\n                    parent = options.widgetParent.append(widget);\n                } else if (element.is('input')) {\n                    parent = element.after(widget).parent();\n                } else if (options.inline) {\n                    parent = element.append(widget);\n                    return;\n                } else {\n                    parent = element;\n                    element.children().first().after(widget);\n                }\n\n                // Top and bottom logic\n                if (vertical === 'auto') {\n                    if (offset.top + widget.height() * 1.5 >= $(window).height() + $(window).scrollTop() &&\n                        widget.height() + element.outerHeight() < offset.top) {\n                        vertical = 'top';\n                    } else {\n                        vertical = 'bottom';\n                    }\n                }\n\n                // Left and right logic\n                if (horizontal === 'auto') {\n                    if (parent.width() < offset.left + widget.outerWidth() / 2 &&\n                        offset.left + widget.outerWidth() > $(window).width()) {\n                        horizontal = 'right';\n                    } else {\n                        horizontal = 'left';\n                    }\n                }\n\n                if (vertical === 'top') {\n                    widget.addClass('top').removeClass('bottom');\n                } else {\n                    widget.addClass('bottom').removeClass('top');\n                }\n\n                if (horizontal === 'right') {\n                    widget.addClass('pull-right');\n                } else {\n                    widget.removeClass('pull-right');\n                }\n\n                // find the first parent element that has a non-static css positioning\n                if (parent.css('position') === 'static') {\n                    parent = parent.parents().filter(function () {\n                        return $(this).css('position') !== 'static';\n                    }).first();\n                }\n\n                if (parent.length === 0) {\n                    throw new Error('datetimepicker component should be placed within a non-static positioned container');\n                }\n\n                widget.css({\n                    top: vertical === 'top' ? 'auto' : position.top + element.outerHeight(),\n                    bottom: vertical === 'top' ? parent.outerHeight() - (parent === element ? 0 : position.top) : 'auto',\n                    left: horizontal === 'left' ? (parent === element ? 0 : position.left) : 'auto',\n                    right: horizontal === 'left' ? 'auto' : parent.outerWidth() - element.outerWidth() - (parent === element ? 0 : position.left)\n                });\n            },\n\n            notifyEvent = function (e) {\n                if (e.type === 'dp.change' && ((e.date && e.date.isSame(e.oldDate)) || (!e.date && !e.oldDate))) {\n                    return;\n                }\n                element.trigger(e);\n            },\n\n            viewUpdate = function (e) {\n                if (e === 'y') {\n                    e = 'YYYY';\n                }\n                notifyEvent({\n                    type: 'dp.update',\n                    change: e,\n                    viewDate: viewDate.clone()\n                });\n            },\n\n            showMode = function (dir) {\n                if (!widget) {\n                    return;\n                }\n                if (dir) {\n                    currentViewMode = Math.max(minViewModeNumber, Math.min(3, currentViewMode + dir));\n                }\n                widget.find('.datepicker > div').hide().filter('.datepicker-' + datePickerModes[currentViewMode].clsName).show();\n            },\n\n            fillDow = function () {\n                var row = $('<tr>'),\n                    currentDate = viewDate.clone().startOf('w').startOf('d');\n\n                if (options.calendarWeeks === true) {\n                    row.append($('<th>').addClass('cw').text('#'));\n                }\n\n                while (currentDate.isBefore(viewDate.clone().endOf('w'))) {\n                    row.append($('<th>').addClass('dow').text(currentDate.format('dd')));\n                    currentDate.add(1, 'd');\n                }\n                widget.find('.datepicker-days thead').append(row);\n            },\n\n            isInDisabledDates = function (testDate) {\n                return options.disabledDates[testDate.format('YYYY-MM-DD')] === true;\n            },\n\n            isInEnabledDates = function (testDate) {\n                return options.enabledDates[testDate.format('YYYY-MM-DD')] === true;\n            },\n\n            isInDisabledHours = function (testDate) {\n                return options.disabledHours[testDate.format('H')] === true;\n            },\n\n            isInEnabledHours = function (testDate) {\n                return options.enabledHours[testDate.format('H')] === true;\n            },\n\n            isValid = function (targetMoment, granularity) {\n                if (!targetMoment.isValid()) {\n                    return false;\n                }\n                if (options.disabledDates && granularity === 'd' && isInDisabledDates(targetMoment)) {\n                    return false;\n                }\n                if (options.enabledDates && granularity === 'd' && !isInEnabledDates(targetMoment)) {\n                    return false;\n                }\n                if (options.minDate && targetMoment.isBefore(options.minDate, granularity)) {\n                    return false;\n                }\n                if (options.maxDate && targetMoment.isAfter(options.maxDate, granularity)) {\n                    return false;\n                }\n                if (options.daysOfWeekDisabled && granularity === 'd' && options.daysOfWeekDisabled.indexOf(targetMoment.day()) !== -1) {\n                    return false;\n                }\n                if (options.disabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && isInDisabledHours(targetMoment)) {\n                    return false;\n                }\n                if (options.enabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && !isInEnabledHours(targetMoment)) {\n                    return false;\n                }\n                if (options.disabledTimeIntervals && (granularity === 'h' || granularity === 'm' || granularity === 's')) {\n                    var found = false;\n                    $.each(options.disabledTimeIntervals, function () {\n                        if (targetMoment.isBetween(this[0], this[1])) {\n                            found = true;\n                            return false;\n                        }\n                    });\n                    if (found) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n\n            fillMonths = function () {\n                var spans = [],\n                    monthsShort = viewDate.clone().startOf('y').startOf('d');\n                while (monthsShort.isSame(viewDate, 'y')) {\n                    spans.push($('<span>').attr('data-action', 'selectMonth').addClass('month').text(monthsShort.format('MMM')));\n                    monthsShort.add(1, 'M');\n                }\n                widget.find('.datepicker-months td').empty().append(spans);\n            },\n\n            updateMonths = function () {\n                var monthsView = widget.find('.datepicker-months'),\n                    monthsViewHeader = monthsView.find('th'),\n                    months = monthsView.find('tbody').find('span');\n\n                monthsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevYear);\n                monthsViewHeader.eq(1).attr('title', options.tooltips.selectYear);\n                monthsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextYear);\n\n                monthsView.find('.disabled').removeClass('disabled');\n\n                if (!isValid(viewDate.clone().subtract(1, 'y'), 'y')) {\n                    monthsViewHeader.eq(0).addClass('disabled');\n                }\n\n                monthsViewHeader.eq(1).text(viewDate.year());\n\n                if (!isValid(viewDate.clone().add(1, 'y'), 'y')) {\n                    monthsViewHeader.eq(2).addClass('disabled');\n                }\n\n                months.removeClass('active');\n                if (date.isSame(viewDate, 'y') && !unset) {\n                    months.eq(date.month()).addClass('active');\n                }\n\n                months.each(function (index) {\n                    if (!isValid(viewDate.clone().month(index), 'M')) {\n                        $(this).addClass('disabled');\n                    }\n                });\n            },\n\n            updateYears = function () {\n                var yearsView = widget.find('.datepicker-years'),\n                    yearsViewHeader = yearsView.find('th'),\n                    startYear = viewDate.clone().subtract(5, 'y'),\n                    endYear = viewDate.clone().add(6, 'y'),\n                    html = '';\n\n                yearsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevDecade);\n                yearsViewHeader.eq(1).attr('title', options.tooltips.selectDecade);\n                yearsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextDecade);\n\n                yearsView.find('.disabled').removeClass('disabled');\n\n                if (options.minDate && options.minDate.isAfter(startYear, 'y')) {\n                    yearsViewHeader.eq(0).addClass('disabled');\n                }\n\n                yearsViewHeader.eq(1).text(startYear.year() + '-' + endYear.year());\n\n                if (options.maxDate && options.maxDate.isBefore(endYear, 'y')) {\n                    yearsViewHeader.eq(2).addClass('disabled');\n                }\n\n                while (!startYear.isAfter(endYear, 'y')) {\n                    html += '<span data-action=\"selectYear\" class=\"year' + (startYear.isSame(date, 'y') && !unset ? ' active' : '') + (!isValid(startYear, 'y') ? ' disabled' : '') + '\">' + startYear.year() + '</span>';\n                    startYear.add(1, 'y');\n                }\n\n                yearsView.find('td').html(html);\n            },\n\n            updateDecades = function () {\n                var decadesView = widget.find('.datepicker-decades'),\n                    decadesViewHeader = decadesView.find('th'),\n                    startDecade = moment({ y: viewDate.year() - (viewDate.year() % 100) - 1 }),\n                    endDecade = startDecade.clone().add(100, 'y'),\n                    startedAt = startDecade.clone(),\n                    minDateDecade = false,\n                    maxDateDecade = false,\n                    endDecadeYear,\n                    html = '';\n\n                decadesViewHeader.eq(0).find('span').attr('title', options.tooltips.prevCentury);\n                decadesViewHeader.eq(2).find('span').attr('title', options.tooltips.nextCentury);\n\n                decadesView.find('.disabled').removeClass('disabled');\n\n                if (startDecade.isSame(moment({ y: 1900 })) || (options.minDate && options.minDate.isAfter(startDecade, 'y'))) {\n                    decadesViewHeader.eq(0).addClass('disabled');\n                }\n\n                decadesViewHeader.eq(1).text(startDecade.year() + '-' + endDecade.year());\n\n                if (startDecade.isSame(moment({ y: 2000 })) || (options.maxDate && options.maxDate.isBefore(endDecade, 'y'))) {\n                    decadesViewHeader.eq(2).addClass('disabled');\n                }\n\n                while (!startDecade.isAfter(endDecade, 'y')) {\n                    endDecadeYear = startDecade.year() + 12;\n                    minDateDecade = options.minDate && options.minDate.isAfter(startDecade, 'y') && options.minDate.year() <= endDecadeYear;\n                    maxDateDecade = options.maxDate && options.maxDate.isAfter(startDecade, 'y') && options.maxDate.year() <= endDecadeYear;\n                    html += '<span data-action=\"selectDecade\" class=\"decade' + (date.isAfter(startDecade) && date.year() <= endDecadeYear ? ' active' : '') +\n                        (!isValid(startDecade, 'y') && !minDateDecade && !maxDateDecade ? ' disabled' : '') + '\" data-selection=\"' + (startDecade.year() + 6) + '\">' + (startDecade.year() + 1) + ' - ' + (startDecade.year() + 12) + '</span>';\n                    startDecade.add(12, 'y');\n                }\n                html += '<span></span><span></span><span></span>'; //push the dangling block over, at least this way it's even\n\n                decadesView.find('td').html(html);\n                decadesViewHeader.eq(1).text((startedAt.year() + 1) + '-' + (startDecade.year()));\n            },\n\n            fillDate = function () {\n                var daysView = widget.find('.datepicker-days'),\n                    daysViewHeader = daysView.find('th'),\n                    currentDate,\n                    html = [],\n                    row,\n                    clsNames = [],\n                    i;\n\n                if (!hasDate()) {\n                    return;\n                }\n\n                daysViewHeader.eq(0).find('span').attr('title', options.tooltips.prevMonth);\n                daysViewHeader.eq(1).attr('title', options.tooltips.selectMonth);\n                daysViewHeader.eq(2).find('span').attr('title', options.tooltips.nextMonth);\n\n                daysView.find('.disabled').removeClass('disabled');\n                daysViewHeader.eq(1).text(viewDate.format(options.dayViewHeaderFormat));\n\n                if (!isValid(viewDate.clone().subtract(1, 'M'), 'M')) {\n                    daysViewHeader.eq(0).addClass('disabled');\n                }\n                if (!isValid(viewDate.clone().add(1, 'M'), 'M')) {\n                    daysViewHeader.eq(2).addClass('disabled');\n                }\n\n                currentDate = viewDate.clone().startOf('M').startOf('w').startOf('d');\n\n                for (i = 0; i < 42; i++) { //always display 42 days (should show 6 weeks)\n                    if (currentDate.weekday() === 0) {\n                        row = $('<tr>');\n                        if (options.calendarWeeks) {\n                            row.append('<td class=\"cw\">' + currentDate.week() + '</td>');\n                        }\n                        html.push(row);\n                    }\n                    clsNames = ['day'];\n                    if (currentDate.isBefore(viewDate, 'M')) {\n                        clsNames.push('old');\n                    }\n                    if (currentDate.isAfter(viewDate, 'M')) {\n                        clsNames.push('new');\n                    }\n                    if (currentDate.isSame(date, 'd') && !unset) {\n                        clsNames.push('active');\n                    }\n                    if (!isValid(currentDate, 'd')) {\n                        clsNames.push('disabled');\n                    }\n                    if (currentDate.isSame(getMoment(), 'd')) {\n                        clsNames.push('today');\n                    }\n                    if (currentDate.day() === 0 || currentDate.day() === 6) {\n                        clsNames.push('weekend');\n                    }\n                    notifyEvent({\n                        type: 'dp.classify',\n                        date: currentDate,\n                        classNames: clsNames\n                    });\n                    row.append('<td data-action=\"selectDay\" data-day=\"' + currentDate.format('L') + '\" class=\"' + clsNames.join(' ') + '\">' + currentDate.date() + '</td>');\n                    currentDate.add(1, 'd');\n                }\n\n                daysView.find('tbody').empty().append(html);\n\n                updateMonths();\n\n                updateYears();\n\n                updateDecades();\n            },\n\n            fillHours = function () {\n                var table = widget.find('.timepicker-hours table'),\n                    currentHour = viewDate.clone().startOf('d'),\n                    html = [],\n                    row = $('<tr>');\n\n                if (viewDate.hour() > 11 && !use24Hours) {\n                    currentHour.hour(12);\n                }\n                while (currentHour.isSame(viewDate, 'd') && (use24Hours || (viewDate.hour() < 12 && currentHour.hour() < 12) || viewDate.hour() > 11)) {\n                    if (currentHour.hour() % 4 === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectHour\" class=\"hour' + (!isValid(currentHour, 'h') ? ' disabled' : '') + '\">' + currentHour.format(use24Hours ? 'HH' : 'hh') + '</td>');\n                    currentHour.add(1, 'h');\n                }\n                table.empty().append(html);\n            },\n\n            fillMinutes = function () {\n                var table = widget.find('.timepicker-minutes table'),\n                    currentMinute = viewDate.clone().startOf('h'),\n                    html = [],\n                    row = $('<tr>'),\n                    step = options.stepping === 1 ? 5 : options.stepping;\n\n                while (viewDate.isSame(currentMinute, 'h')) {\n                    if (currentMinute.minute() % (step * 4) === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectMinute\" class=\"minute' + (!isValid(currentMinute, 'm') ? ' disabled' : '') + '\">' + currentMinute.format('mm') + '</td>');\n                    currentMinute.add(step, 'm');\n                }\n                table.empty().append(html);\n            },\n\n            fillSeconds = function () {\n                var table = widget.find('.timepicker-seconds table'),\n                    currentSecond = viewDate.clone().startOf('m'),\n                    html = [],\n                    row = $('<tr>');\n\n                while (viewDate.isSame(currentSecond, 'm')) {\n                    if (currentSecond.second() % 20 === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectSecond\" class=\"second' + (!isValid(currentSecond, 's') ? ' disabled' : '') + '\">' + currentSecond.format('ss') + '</td>');\n                    currentSecond.add(5, 's');\n                }\n\n                table.empty().append(html);\n            },\n\n            fillTime = function () {\n                var toggle, newDate, timeComponents = widget.find('.timepicker span[data-time-component]');\n\n                if (!use24Hours) {\n                    toggle = widget.find('.timepicker [data-action=togglePeriod]');\n                    newDate = date.clone().add((date.hours() >= 12) ? -12 : 12, 'h');\n\n                    toggle.text(date.format('A'));\n\n                    if (isValid(newDate, 'h')) {\n                        toggle.removeClass('disabled');\n                    } else {\n                        toggle.addClass('disabled');\n                    }\n                }\n                timeComponents.filter('[data-time-component=hours]').text(date.format(use24Hours ? 'HH' : 'hh'));\n                timeComponents.filter('[data-time-component=minutes]').text(date.format('mm'));\n                timeComponents.filter('[data-time-component=seconds]').text(date.format('ss'));\n\n                fillHours();\n                fillMinutes();\n                fillSeconds();\n            },\n\n            update = function () {\n                if (!widget) {\n                    return;\n                }\n                fillDate();\n                fillTime();\n            },\n\n            setValue = function (targetMoment) {\n                var oldDate = unset ? null : date;\n\n                // case of calling setValue(null or false)\n                if (!targetMoment) {\n                    unset = true;\n                    input.val('');\n                    element.data('date', '');\n                    notifyEvent({\n                        type: 'dp.change',\n                        date: false,\n                        oldDate: oldDate\n                    });\n                    update();\n                    return;\n                }\n\n                targetMoment = targetMoment.clone().locale(options.locale);\n\n                if (hasTimeZone()) {\n                    targetMoment.tz(options.timeZone);\n                }\n\n                if (options.stepping !== 1) {\n                    targetMoment.minutes((Math.round(targetMoment.minutes() / options.stepping) * options.stepping)).seconds(0);\n\n                    while (options.minDate && targetMoment.isBefore(options.minDate)) {\n                        targetMoment.add(options.stepping, 'minutes');\n                    }\n                }\n\n                if (isValid(targetMoment)) {\n                    date = targetMoment;\n                    viewDate = date.clone();\n                    input.val(date.format(actualFormat));\n                    element.data('date', date.format(actualFormat));\n                    unset = false;\n                    update();\n                    notifyEvent({\n                        type: 'dp.change',\n                        date: date.clone(),\n                        oldDate: oldDate\n                    });\n                } else {\n                    if (!options.keepInvalid) {\n                        input.val(unset ? '' : date.format(actualFormat));\n                    } else {\n                        notifyEvent({\n                            type: 'dp.change',\n                            date: targetMoment,\n                            oldDate: oldDate\n                        });\n                    }\n                    notifyEvent({\n                        type: 'dp.error',\n                        date: targetMoment,\n                        oldDate: oldDate\n                    });\n                }\n            },\n\n            /**\n             * Hides the widget. Possibly will emit dp.hide\n             */\n            hide = function () {\n                var transitioning = false;\n\n                keyState = {}; // Added for Antragsgrün: enables using the down-key again after closing the widget using the escape key\n\n                if (!widget) {\n                    return picker;\n                }\n                // Ignore event if in the middle of a picker transition\n                widget.find('.collapse').each(function () {\n                    var collapseData = $(this).data('collapse');\n                    if (collapseData && collapseData.transitioning) {\n                        transitioning = true;\n                        return false;\n                    }\n                    return true;\n                });\n                if (transitioning) {\n                    return picker;\n                }\n                if (component && component.hasClass('btn')) {\n                    component.toggleClass('active');\n                }\n                widget.hide();\n\n                $(window).off('resize', place);\n                widget.off('click', '[data-action]');\n                widget.off('mousedown', false);\n\n                widget.remove();\n                widget = false;\n\n                notifyEvent({\n                    type: 'dp.hide',\n                    date: date.clone()\n                });\n\n                // input.blur(); // Removed by Antragsgrün: focus should go to the input field\n\n                viewDate = date.clone();\n\n                return picker;\n            },\n\n            clear = function () {\n                setValue(null);\n            },\n\n            parseInputDate = function (inputDate) {\n                if (options.parseInputDate === undefined) {\n                    if (!moment.isMoment(inputDate) || inputDate instanceof Date) {\n                        inputDate = getMoment(inputDate);\n                    }\n                } else {\n                    inputDate = options.parseInputDate(inputDate);\n                }\n                //inputDate.locale(options.locale);\n                return inputDate;\n            },\n\n            /********************************************************************************\n             *\n             * Widget UI interaction functions\n             *\n             ********************************************************************************/\n            actions = {\n                next: function () {\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\n                    viewDate.add(datePickerModes[currentViewMode].navStep, navFnc);\n                    fillDate();\n                    viewUpdate(navFnc);\n                },\n\n                previous: function () {\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\n                    viewDate.subtract(datePickerModes[currentViewMode].navStep, navFnc);\n                    fillDate();\n                    viewUpdate(navFnc);\n                },\n\n                pickerSwitch: function () {\n                    showMode(1);\n                },\n\n                selectMonth: function (e) {\n                    var month = $(e.target).closest('tbody').find('span').index($(e.target));\n                    viewDate.month(month);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()).month(viewDate.month()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('M');\n                },\n\n                selectYear: function (e) {\n                    var year = parseInt($(e.target).text(), 10) || 0;\n                    viewDate.year(year);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('YYYY');\n                },\n\n                selectDecade: function (e) {\n                    var year = parseInt($(e.target).data('selection'), 10) || 0;\n                    viewDate.year(year);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('YYYY');\n                },\n\n                selectDay: function (e) {\n                    var day = viewDate.clone();\n                    if ($(e.target).is('.old')) {\n                        day.subtract(1, 'M');\n                    }\n                    if ($(e.target).is('.new')) {\n                        day.add(1, 'M');\n                    }\n                    setValue(day.date(parseInt($(e.target).text(), 10)));\n                    if (!hasTime() && !options.keepOpen && !options.inline) {\n                        hide();\n                    }\n                },\n\n                incrementHours: function () {\n                    var newDate = date.clone().add(1, 'h');\n                    if (isValid(newDate, 'h')) {\n                        setValue(newDate);\n                    }\n                },\n\n                incrementMinutes: function () {\n                    var newDate = date.clone().add(options.stepping, 'm');\n                    if (isValid(newDate, 'm')) {\n                        setValue(newDate);\n                    }\n                },\n\n                incrementSeconds: function () {\n                    var newDate = date.clone().add(1, 's');\n                    if (isValid(newDate, 's')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementHours: function () {\n                    var newDate = date.clone().subtract(1, 'h');\n                    if (isValid(newDate, 'h')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementMinutes: function () {\n                    var newDate = date.clone().subtract(options.stepping, 'm');\n                    if (isValid(newDate, 'm')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementSeconds: function () {\n                    var newDate = date.clone().subtract(1, 's');\n                    if (isValid(newDate, 's')) {\n                        setValue(newDate);\n                    }\n                },\n\n                togglePeriod: function () {\n                    setValue(date.clone().add((date.hours() >= 12) ? -12 : 12, 'h'));\n                },\n\n                togglePicker: function (e) {\n                    var $this = $(e.target),\n                        $parent = $this.closest('ul'),\n                        expanded = $parent.find('.in'),\n                        closed = $parent.find('.collapse:not(.in)'),\n                        collapseData;\n\n                    if (expanded && expanded.length) {\n                        collapseData = expanded.data('collapse');\n                        if (collapseData && collapseData.transitioning) {\n                            return;\n                        }\n                        if (expanded.collapse) { // if collapse plugin is available through bootstrap.js then use it\n                            expanded.collapse('hide');\n                            closed.collapse('show');\n                        } else { // otherwise just toggle in class on the two views\n                            expanded.removeClass('in');\n                            closed.addClass('in');\n                        }\n                        if ($this.is('span')) {\n                            $this.toggleClass(options.icons.time + ' ' + options.icons.date);\n                        } else {\n                            $this.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\n                        }\n\n                        // NOTE: uncomment if toggled state will be restored in show()\n                        //if (component) {\n                        //    component.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\n                        //}\n                    }\n                },\n\n                showPicker: function () {\n                    widget.find('.timepicker > div:not(.timepicker-picker)').hide();\n                    widget.find('.timepicker .timepicker-picker').show();\n                },\n\n                showHours: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-hours').show();\n                },\n\n                showMinutes: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-minutes').show();\n                },\n\n                showSeconds: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-seconds').show();\n                },\n\n                selectHour: function (e) {\n                    var hour = parseInt($(e.target).text(), 10);\n\n                    if (!use24Hours) {\n                        if (date.hours() >= 12) {\n                            if (hour !== 12) {\n                                hour += 12;\n                            }\n                        } else {\n                            if (hour === 12) {\n                                hour = 0;\n                            }\n                        }\n                    }\n                    setValue(date.clone().hours(hour));\n                    actions.showPicker.call(picker);\n                },\n\n                selectMinute: function (e) {\n                    setValue(date.clone().minutes(parseInt($(e.target).text(), 10)));\n                    actions.showPicker.call(picker);\n                },\n\n                selectSecond: function (e) {\n                    setValue(date.clone().seconds(parseInt($(e.target).text(), 10)));\n                    actions.showPicker.call(picker);\n                },\n\n                clear: clear,\n\n                today: function () {\n                    var todaysDate = getMoment();\n                    if (isValid(todaysDate, 'd')) {\n                        setValue(todaysDate);\n                    }\n                },\n\n                close: hide\n            },\n\n            doAction = function (e) {\n                if ($(e.currentTarget).is('.disabled')) {\n                    return false;\n                }\n                actions[$(e.currentTarget).data('action')].apply(picker, arguments);\n                return false;\n            },\n\n            /**\n             * Shows the widget. Possibly will emit dp.show and dp.change\n             */\n            show = function () {\n                var currentMoment,\n                    useCurrentGranularity = {\n                        'year': function (m) {\n                            return m.month(0).date(1).hours(0).seconds(0).minutes(0);\n                        },\n                        'month': function (m) {\n                            return m.date(1).hours(0).seconds(0).minutes(0);\n                        },\n                        'day': function (m) {\n                            return m.hours(0).seconds(0).minutes(0);\n                        },\n                        'hour': function (m) {\n                            return m.seconds(0).minutes(0);\n                        },\n                        'minute': function (m) {\n                            return m.seconds(0);\n                        }\n                    };\n\n                if (input.prop('disabled') || (!options.ignoreReadonly && input.prop('readonly')) || widget) {\n                    return picker;\n                }\n                if (input.val() !== undefined && input.val().trim().length !== 0) {\n                    setValue(parseInputDate(input.val().trim()));\n                } else if (unset && options.useCurrent && (options.inline || (input.is('input') && input.val().trim().length === 0))) {\n                    currentMoment = getMoment();\n                    if (typeof options.useCurrent === 'string') {\n                        currentMoment = useCurrentGranularity[options.useCurrent](currentMoment);\n                    }\n                    setValue(currentMoment);\n                }\n                widget = getTemplate();\n\n                fillDow();\n                fillMonths();\n\n                widget.find('.timepicker-hours').hide();\n                widget.find('.timepicker-minutes').hide();\n                widget.find('.timepicker-seconds').hide();\n\n                update();\n                showMode();\n\n                $(window).on('resize', place);\n                widget.on('click', '[data-action]', doAction); // this handles clicks on the widget\n                widget.on('mousedown', false);\n\n                if (component && component.hasClass('btn')) {\n                    component.toggleClass('active');\n                }\n                place();\n                widget.show();\n                if (options.focusOnShow && !input.is(':focus')) {\n                    input.focus();\n                }\n\n                notifyEvent({\n                    type: 'dp.show'\n                });\n                return picker;\n            },\n\n            /**\n             * Shows or hides the widget\n             */\n            toggle = function () {\n                return (widget ? hide() : show());\n            },\n\n            keydown = function (e) {\n                var handler = null,\n                    index,\n                    index2,\n                    pressedKeys = [],\n                    pressedModifiers = {},\n                    currentKey = e.which,\n                    keyBindKeys,\n                    allModifiersPressed,\n                    pressed = 'p';\n\n                keyState[currentKey] = pressed;\n\n                for (index in keyState) {\n                    if (keyState.hasOwnProperty(index) && keyState[index] === pressed) {\n                        pressedKeys.push(index);\n                        if (parseInt(index, 10) !== currentKey) {\n                            pressedModifiers[index] = true;\n                        }\n                    }\n                }\n\n                for (index in options.keyBinds) {\n                    if (options.keyBinds.hasOwnProperty(index) && typeof (options.keyBinds[index]) === 'function') {\n                        keyBindKeys = index.split(' ');\n                        if (keyBindKeys.length === pressedKeys.length && keyMap[currentKey] === keyBindKeys[keyBindKeys.length - 1]) {\n                            allModifiersPressed = true;\n                            for (index2 = keyBindKeys.length - 2; index2 >= 0; index2--) {\n                                if (!(keyMap[keyBindKeys[index2]] in pressedModifiers)) {\n                                    allModifiersPressed = false;\n                                    break;\n                                }\n                            }\n                            if (allModifiersPressed) {\n                                handler = options.keyBinds[index];\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (handler) {\n                    handler.call(picker, widget);\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            },\n\n            keyup = function (e) {\n                keyState[e.which] = 'r';\n                e.stopPropagation();\n                e.preventDefault();\n            },\n\n            change = function (e) {\n                var val = $(e.target).val().trim(),\n                    parsedDate = val ? parseInputDate(val) : null;\n                setValue(parsedDate);\n                e.stopImmediatePropagation();\n                return false;\n            },\n\n            attachDatePickerElementEvents = function () {\n                input.on({\n                    'change': change,\n                    'blur': options.debug ? '' : hide,\n                    'keydown': keydown,\n                    'keyup': keyup,\n                    'focus': options.allowInputToggle ? show : ''\n                });\n\n                if (element.is('input')) {\n                    input.on({\n                        'focus': show\n                    });\n                } else if (component) {\n                    component.on('click', toggle);\n                    component.on('mousedown', false);\n                }\n            },\n\n            detachDatePickerElementEvents = function () {\n                input.off({\n                    'change': change,\n                    'blur': blur,\n                    'keydown': keydown,\n                    'keyup': keyup,\n                    'focus': options.allowInputToggle ? hide : ''\n                });\n\n                if (element.is('input')) {\n                    input.off({\n                        'focus': show\n                    });\n                } else if (component) {\n                    component.off('click', toggle);\n                    component.off('mousedown', false);\n                }\n            },\n\n            indexGivenDates = function (givenDatesArray) {\n                // Store given enabledDates and disabledDates as keys.\n                // This way we can check their existence in O(1) time instead of looping through whole array.\n                // (for example: options.enabledDates['2014-02-27'] === true)\n                var givenDatesIndexed = {};\n                $.each(givenDatesArray, function () {\n                    var dDate = parseInputDate(this);\n                    if (dDate.isValid()) {\n                        givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;\n                    }\n                });\n                return (Object.keys(givenDatesIndexed).length) ? givenDatesIndexed : false;\n            },\n\n            indexGivenHours = function (givenHoursArray) {\n                // Store given enabledHours and disabledHours as keys.\n                // This way we can check their existence in O(1) time instead of looping through whole array.\n                // (for example: options.enabledHours['2014-02-27'] === true)\n                var givenHoursIndexed = {};\n                $.each(givenHoursArray, function () {\n                    givenHoursIndexed[this] = true;\n                });\n                return (Object.keys(givenHoursIndexed).length) ? givenHoursIndexed : false;\n            },\n\n            initFormatting = function () {\n                var format = options.format || 'L LT';\n\n                actualFormat = format.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput) {\n                    var newinput = date.localeData().longDateFormat(formatInput) || formatInput;\n                    return newinput.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput2) { //temp fix for #740\n                        return date.localeData().longDateFormat(formatInput2) || formatInput2;\n                    });\n                });\n\n\n                parseFormats = options.extraFormats ? options.extraFormats.slice() : [];\n                if (parseFormats.indexOf(format) < 0 && parseFormats.indexOf(actualFormat) < 0) {\n                    parseFormats.push(actualFormat);\n                }\n\n                use24Hours = (actualFormat.toLowerCase().indexOf('a') < 1 && actualFormat.replace(/\\[.*?\\]/g, '').indexOf('h') < 1);\n\n                if (isEnabled('y')) {\n                    minViewModeNumber = 2;\n                }\n                if (isEnabled('M')) {\n                    minViewModeNumber = 1;\n                }\n                if (isEnabled('d')) {\n                    minViewModeNumber = 0;\n                }\n\n                currentViewMode = Math.max(minViewModeNumber, currentViewMode);\n\n                if (!unset) {\n                    setValue(date);\n                }\n            };\n\n        /********************************************************************************\n         *\n         * Public API functions\n         * =====================\n         *\n         * Important: Do not expose direct references to private objects or the options\n         * object to the outer world. Always return a clone when returning values or make\n         * a clone when setting a private variable.\n         *\n         ********************************************************************************/\n        picker.destroy = function () {\n            ///<summary>Destroys the widget and removes all attached event listeners</summary>\n            hide();\n            detachDatePickerElementEvents();\n            element.removeData('DateTimePicker');\n            element.removeData('date');\n        };\n\n        picker.toggle = toggle;\n\n        picker.show = show;\n\n        picker.hide = hide;\n\n        picker.disable = function () {\n            ///<summary>Disables the input element, the component is attached to, by adding a disabled=\"true\" attribute to it.\n            ///If the widget was visible before that call it is hidden. Possibly emits dp.hide</summary>\n            hide();\n            if (component && component.hasClass('btn')) {\n                component.addClass('disabled');\n            }\n            input.prop('disabled', true);\n            return picker;\n        };\n\n        picker.enable = function () {\n            ///<summary>Enables the input element, the component is attached to, by removing disabled attribute from it.</summary>\n            if (component && component.hasClass('btn')) {\n                component.removeClass('disabled');\n            }\n            input.prop('disabled', false);\n            return picker;\n        };\n\n        picker.ignoreReadonly = function (ignoreReadonly) {\n            if (arguments.length === 0) {\n                return options.ignoreReadonly;\n            }\n            if (typeof ignoreReadonly !== 'boolean') {\n                throw new TypeError('ignoreReadonly () expects a boolean parameter');\n            }\n            options.ignoreReadonly = ignoreReadonly;\n            return picker;\n        };\n\n        picker.options = function (newOptions) {\n            if (arguments.length === 0) {\n                return $.extend(true, {}, options);\n            }\n\n            if (!(newOptions instanceof Object)) {\n                throw new TypeError('options() options parameter should be an object');\n            }\n            $.extend(true, options, newOptions);\n            $.each(options, function (key, value) {\n                if (picker[key] !== undefined) {\n                    picker[key](value);\n                } else {\n                    throw new TypeError('option ' + key + ' is not recognized!');\n                }\n            });\n            return picker;\n        };\n\n        picker.date = function (newDate) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.date\">\n            ///<summary>Returns the component's model current date, a moment object or null if not set.</summary>\n            ///<returns type=\"Moment\">date.clone()</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Sets the components model current moment to it. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.</summary>\n            ///<param name=\"newDate\" locid=\"$.fn.datetimepicker.date_p:newDate\">Takes string, Date, moment, null parameter.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                if (unset) {\n                    return null;\n                }\n                return date.clone();\n            }\n\n            if (newDate !== null && typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n                throw new TypeError('date() parameter must be one of [null, string, moment or Date]');\n            }\n\n            setValue(newDate === null ? null : parseInputDate(newDate));\n            return picker;\n        };\n\n        picker.format = function (newFormat) {\n            ///<summary>test su</summary>\n            ///<param name=\"newFormat\">info about para</param>\n            ///<returns type=\"string|boolean\">returns foo</returns>\n            if (arguments.length === 0) {\n                return options.format;\n            }\n\n            if ((typeof newFormat !== 'string') && ((typeof newFormat !== 'boolean') || (newFormat !== false))) {\n                throw new TypeError('format() expects a string or boolean:false parameter ' + newFormat);\n            }\n\n            options.format = newFormat;\n            if (actualFormat) {\n                initFormatting(); // reinit formatting\n            }\n            return picker;\n        };\n\n        picker.timeZone = function (newZone) {\n            if (arguments.length === 0) {\n                return options.timeZone;\n            }\n\n            if (typeof newZone !== 'string') {\n                throw new TypeError('newZone() expects a string parameter');\n            }\n\n            options.timeZone = newZone;\n\n            return picker;\n        };\n\n        picker.dayViewHeaderFormat = function (newFormat) {\n            if (arguments.length === 0) {\n                return options.dayViewHeaderFormat;\n            }\n\n            if (typeof newFormat !== 'string') {\n                throw new TypeError('dayViewHeaderFormat() expects a string parameter');\n            }\n\n            options.dayViewHeaderFormat = newFormat;\n            return picker;\n        };\n\n        picker.extraFormats = function (formats) {\n            if (arguments.length === 0) {\n                return options.extraFormats;\n            }\n\n            if (formats !== false && !(formats instanceof Array)) {\n                throw new TypeError('extraFormats() expects an array or false parameter');\n            }\n\n            options.extraFormats = formats;\n            if (parseFormats) {\n                initFormatting(); // reinit formatting\n            }\n            return picker;\n        };\n\n        picker.disabledDates = function (dates) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledDates\">\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\n            ///<returns type=\"array\">options.disabledDates</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledDates ? $.extend({}, options.disabledDates) : options.disabledDates);\n            }\n\n            if (!dates) {\n                options.disabledDates = false;\n                update();\n                return picker;\n            }\n            if (!(dates instanceof Array)) {\n                throw new TypeError('disabledDates() expects an array parameter');\n            }\n            options.disabledDates = indexGivenDates(dates);\n            options.enabledDates = false;\n            update();\n            return picker;\n        };\n\n        picker.enabledDates = function (dates) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledDates\">\n            ///<summary>Returns an array with the currently set enabled dates on the component.</summary>\n            ///<returns type=\"array\">options.enabledDates</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.enabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.enabledDates ? $.extend({}, options.enabledDates) : options.enabledDates);\n            }\n\n            if (!dates) {\n                options.enabledDates = false;\n                update();\n                return picker;\n            }\n            if (!(dates instanceof Array)) {\n                throw new TypeError('enabledDates() expects an array parameter');\n            }\n            options.enabledDates = indexGivenDates(dates);\n            options.disabledDates = false;\n            update();\n            return picker;\n        };\n\n        picker.daysOfWeekDisabled = function (daysOfWeekDisabled) {\n            if (arguments.length === 0) {\n                return options.daysOfWeekDisabled.splice(0);\n            }\n\n            if ((typeof daysOfWeekDisabled === 'boolean') && !daysOfWeekDisabled) {\n                options.daysOfWeekDisabled = false;\n                update();\n                return picker;\n            }\n\n            if (!(daysOfWeekDisabled instanceof Array)) {\n                throw new TypeError('daysOfWeekDisabled() expects an array parameter');\n            }\n            options.daysOfWeekDisabled = daysOfWeekDisabled.reduce(function (previousValue, currentValue) {\n                currentValue = parseInt(currentValue, 10);\n                if (currentValue > 6 || currentValue < 0 || isNaN(currentValue)) {\n                    return previousValue;\n                }\n                if (previousValue.indexOf(currentValue) === -1) {\n                    previousValue.push(currentValue);\n                }\n                return previousValue;\n            }, []).sort();\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'd')) {\n                    date.add(1, 'd');\n                    if (tries === 31) {\n                        throw 'Tried 31 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n\n        picker.maxDate = function (maxDate) {\n            if (arguments.length === 0) {\n                return options.maxDate ? options.maxDate.clone() : options.maxDate;\n            }\n\n            if ((typeof maxDate === 'boolean') && maxDate === false) {\n                options.maxDate = false;\n                update();\n                return picker;\n            }\n\n            if (typeof maxDate === 'string') {\n                if (maxDate === 'now' || maxDate === 'moment') {\n                    maxDate = getMoment();\n                }\n            }\n\n            var parsedDate = parseInputDate(maxDate);\n\n            if (!parsedDate.isValid()) {\n                throw new TypeError('maxDate() Could not parse date parameter: ' + maxDate);\n            }\n            if (options.minDate && parsedDate.isBefore(options.minDate)) {\n                throw new TypeError('maxDate() date parameter is before options.minDate: ' + parsedDate.format(actualFormat));\n            }\n            options.maxDate = parsedDate;\n            if (options.useCurrent && !options.keepInvalid && date.isAfter(maxDate)) {\n                setValue(options.maxDate);\n            }\n            if (viewDate.isAfter(parsedDate)) {\n                viewDate = parsedDate.clone().subtract(options.stepping, 'm');\n            }\n            update();\n            return picker;\n        };\n\n        picker.minDate = function (minDate) {\n            if (arguments.length === 0) {\n                return options.minDate ? options.minDate.clone() : options.minDate;\n            }\n\n            if ((typeof minDate === 'boolean') && minDate === false) {\n                options.minDate = false;\n                update();\n                return picker;\n            }\n\n            if (typeof minDate === 'string') {\n                if (minDate === 'now' || minDate === 'moment') {\n                    minDate = getMoment();\n                }\n            }\n\n            var parsedDate = parseInputDate(minDate);\n\n            if (!parsedDate.isValid()) {\n                throw new TypeError('minDate() Could not parse date parameter: ' + minDate);\n            }\n            if (options.maxDate && parsedDate.isAfter(options.maxDate)) {\n                throw new TypeError('minDate() date parameter is after options.maxDate: ' + parsedDate.format(actualFormat));\n            }\n            options.minDate = parsedDate;\n            if (options.useCurrent && !options.keepInvalid && date.isBefore(minDate)) {\n                setValue(options.minDate);\n            }\n            if (viewDate.isBefore(parsedDate)) {\n                viewDate = parsedDate.clone().add(options.stepping, 'm');\n            }\n            update();\n            return picker;\n        };\n\n        picker.defaultDate = function (defaultDate) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.defaultDate\">\n            ///<summary>Returns a moment with the options.defaultDate option configuration or false if not set</summary>\n            ///<returns type=\"Moment\">date.clone()</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Will set the picker's inital date. If a boolean:false value is passed the options.defaultDate parameter is cleared.</summary>\n            ///<param name=\"defaultDate\" locid=\"$.fn.datetimepicker.defaultDate_p:defaultDate\">Takes a string, Date, moment, boolean:false</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return options.defaultDate ? options.defaultDate.clone() : options.defaultDate;\n            }\n            if (!defaultDate) {\n                options.defaultDate = false;\n                return picker;\n            }\n\n            if (typeof defaultDate === 'string') {\n                if (defaultDate === 'now' || defaultDate === 'moment') {\n                    defaultDate = getMoment();\n                } else {\n                    defaultDate = getMoment(defaultDate);\n                }\n            }\n\n            var parsedDate = parseInputDate(defaultDate);\n            if (!parsedDate.isValid()) {\n                throw new TypeError('defaultDate() Could not parse date parameter: ' + defaultDate);\n            }\n            if (!isValid(parsedDate)) {\n                throw new TypeError('defaultDate() date passed is invalid according to component setup validations');\n            }\n\n            options.defaultDate = parsedDate;\n\n            if ((options.defaultDate && options.inline) || input.val().trim() === '') {\n                setValue(options.defaultDate);\n            }\n            return picker;\n        };\n\n        picker.locale = function (locale) {\n            if (arguments.length === 0) {\n                return options.locale;\n            }\n\n            if (!moment.localeData(locale)) {\n                throw new TypeError('locale() locale ' + locale + ' is not loaded from moment locales!');\n            }\n\n            options.locale = locale;\n            date.locale(options.locale);\n            viewDate.locale(options.locale);\n\n            if (actualFormat) {\n                initFormatting(); // reinit formatting\n            }\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.stepping = function (stepping) {\n            if (arguments.length === 0) {\n                return options.stepping;\n            }\n\n            stepping = parseInt(stepping, 10);\n            if (isNaN(stepping) || stepping < 1) {\n                stepping = 1;\n            }\n            options.stepping = stepping;\n            return picker;\n        };\n\n        picker.useCurrent = function (useCurrent) {\n            var useCurrentOptions = ['year', 'month', 'day', 'hour', 'minute'];\n            if (arguments.length === 0) {\n                return options.useCurrent;\n            }\n\n            if ((typeof useCurrent !== 'boolean') && (typeof useCurrent !== 'string')) {\n                throw new TypeError('useCurrent() expects a boolean or string parameter');\n            }\n            if (typeof useCurrent === 'string' && useCurrentOptions.indexOf(useCurrent.toLowerCase()) === -1) {\n                throw new TypeError('useCurrent() expects a string parameter of ' + useCurrentOptions.join(', '));\n            }\n            options.useCurrent = useCurrent;\n            return picker;\n        };\n\n        picker.collapse = function (collapse) {\n            if (arguments.length === 0) {\n                return options.collapse;\n            }\n\n            if (typeof collapse !== 'boolean') {\n                throw new TypeError('collapse() expects a boolean parameter');\n            }\n            if (options.collapse === collapse) {\n                return picker;\n            }\n            options.collapse = collapse;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.icons = function (icons) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.icons);\n            }\n\n            if (!(icons instanceof Object)) {\n                throw new TypeError('icons() expects parameter to be an Object');\n            }\n            $.extend(options.icons, icons);\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.tooltips = function (tooltips) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.tooltips);\n            }\n\n            if (!(tooltips instanceof Object)) {\n                throw new TypeError('tooltips() expects parameter to be an Object');\n            }\n            $.extend(options.tooltips, tooltips);\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.useStrict = function (useStrict) {\n            if (arguments.length === 0) {\n                return options.useStrict;\n            }\n\n            if (typeof useStrict !== 'boolean') {\n                throw new TypeError('useStrict() expects a boolean parameter');\n            }\n            options.useStrict = useStrict;\n            return picker;\n        };\n\n        picker.sideBySide = function (sideBySide) {\n            if (arguments.length === 0) {\n                return options.sideBySide;\n            }\n\n            if (typeof sideBySide !== 'boolean') {\n                throw new TypeError('sideBySide() expects a boolean parameter');\n            }\n            options.sideBySide = sideBySide;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.viewMode = function (viewMode) {\n            if (arguments.length === 0) {\n                return options.viewMode;\n            }\n\n            if (typeof viewMode !== 'string') {\n                throw new TypeError('viewMode() expects a string parameter');\n            }\n\n            if (viewModes.indexOf(viewMode) === -1) {\n                throw new TypeError('viewMode() parameter must be one of (' + viewModes.join(', ') + ') value');\n            }\n\n            options.viewMode = viewMode;\n            currentViewMode = Math.max(viewModes.indexOf(viewMode), minViewModeNumber);\n\n            showMode();\n            return picker;\n        };\n\n        picker.toolbarPlacement = function (toolbarPlacement) {\n            if (arguments.length === 0) {\n                return options.toolbarPlacement;\n            }\n\n            if (typeof toolbarPlacement !== 'string') {\n                throw new TypeError('toolbarPlacement() expects a string parameter');\n            }\n            if (toolbarPlacements.indexOf(toolbarPlacement) === -1) {\n                throw new TypeError('toolbarPlacement() parameter must be one of (' + toolbarPlacements.join(', ') + ') value');\n            }\n            options.toolbarPlacement = toolbarPlacement;\n\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.widgetPositioning = function (widgetPositioning) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.widgetPositioning);\n            }\n\n            if (({}).toString.call(widgetPositioning) !== '[object Object]') {\n                throw new TypeError('widgetPositioning() expects an object variable');\n            }\n            if (widgetPositioning.horizontal) {\n                if (typeof widgetPositioning.horizontal !== 'string') {\n                    throw new TypeError('widgetPositioning() horizontal variable must be a string');\n                }\n                widgetPositioning.horizontal = widgetPositioning.horizontal.toLowerCase();\n                if (horizontalModes.indexOf(widgetPositioning.horizontal) === -1) {\n                    throw new TypeError('widgetPositioning() expects horizontal parameter to be one of (' + horizontalModes.join(', ') + ')');\n                }\n                options.widgetPositioning.horizontal = widgetPositioning.horizontal;\n            }\n            if (widgetPositioning.vertical) {\n                if (typeof widgetPositioning.vertical !== 'string') {\n                    throw new TypeError('widgetPositioning() vertical variable must be a string');\n                }\n                widgetPositioning.vertical = widgetPositioning.vertical.toLowerCase();\n                if (verticalModes.indexOf(widgetPositioning.vertical) === -1) {\n                    throw new TypeError('widgetPositioning() expects vertical parameter to be one of (' + verticalModes.join(', ') + ')');\n                }\n                options.widgetPositioning.vertical = widgetPositioning.vertical;\n            }\n            update();\n            return picker;\n        };\n\n        picker.calendarWeeks = function (calendarWeeks) {\n            if (arguments.length === 0) {\n                return options.calendarWeeks;\n            }\n\n            if (typeof calendarWeeks !== 'boolean') {\n                throw new TypeError('calendarWeeks() expects parameter to be a boolean value');\n            }\n\n            options.calendarWeeks = calendarWeeks;\n            update();\n            return picker;\n        };\n\n        picker.showTodayButton = function (showTodayButton) {\n            if (arguments.length === 0) {\n                return options.showTodayButton;\n            }\n\n            if (typeof showTodayButton !== 'boolean') {\n                throw new TypeError('showTodayButton() expects a boolean parameter');\n            }\n\n            options.showTodayButton = showTodayButton;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.showClear = function (showClear) {\n            if (arguments.length === 0) {\n                return options.showClear;\n            }\n\n            if (typeof showClear !== 'boolean') {\n                throw new TypeError('showClear() expects a boolean parameter');\n            }\n\n            options.showClear = showClear;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.widgetParent = function (widgetParent) {\n            if (arguments.length === 0) {\n                return options.widgetParent;\n            }\n\n            if (typeof widgetParent === 'string') {\n                widgetParent = $(widgetParent);\n            }\n\n            if (widgetParent !== null && (typeof widgetParent !== 'string' && !(widgetParent instanceof $))) {\n                throw new TypeError('widgetParent() expects a string or a jQuery object parameter');\n            }\n\n            options.widgetParent = widgetParent;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.keepOpen = function (keepOpen) {\n            if (arguments.length === 0) {\n                return options.keepOpen;\n            }\n\n            if (typeof keepOpen !== 'boolean') {\n                throw new TypeError('keepOpen() expects a boolean parameter');\n            }\n\n            options.keepOpen = keepOpen;\n            return picker;\n        };\n\n        picker.focusOnShow = function (focusOnShow) {\n            if (arguments.length === 0) {\n                return options.focusOnShow;\n            }\n\n            if (typeof focusOnShow !== 'boolean') {\n                throw new TypeError('focusOnShow() expects a boolean parameter');\n            }\n\n            options.focusOnShow = focusOnShow;\n            return picker;\n        };\n\n        picker.inline = function (inline) {\n            if (arguments.length === 0) {\n                return options.inline;\n            }\n\n            if (typeof inline !== 'boolean') {\n                throw new TypeError('inline() expects a boolean parameter');\n            }\n\n            options.inline = inline;\n            return picker;\n        };\n\n        picker.clear = function () {\n            clear();\n            return picker;\n        };\n\n        picker.keyBinds = function (keyBinds) {\n            if (arguments.length === 0) {\n                return options.keyBinds;\n            }\n\n            options.keyBinds = keyBinds;\n            return picker;\n        };\n\n        picker.getMoment = function (d) {\n            return getMoment(d);\n        };\n\n        picker.debug = function (debug) {\n            if (typeof debug !== 'boolean') {\n                throw new TypeError('debug() expects a boolean parameter');\n            }\n\n            options.debug = debug;\n            return picker;\n        };\n\n        picker.allowInputToggle = function (allowInputToggle) {\n            if (arguments.length === 0) {\n                return options.allowInputToggle;\n            }\n\n            if (typeof allowInputToggle !== 'boolean') {\n                throw new TypeError('allowInputToggle() expects a boolean parameter');\n            }\n\n            options.allowInputToggle = allowInputToggle;\n            return picker;\n        };\n\n        picker.showClose = function (showClose) {\n            if (arguments.length === 0) {\n                return options.showClose;\n            }\n\n            if (typeof showClose !== 'boolean') {\n                throw new TypeError('showClose() expects a boolean parameter');\n            }\n\n            options.showClose = showClose;\n            return picker;\n        };\n\n        picker.keepInvalid = function (keepInvalid) {\n            if (arguments.length === 0) {\n                return options.keepInvalid;\n            }\n\n            if (typeof keepInvalid !== 'boolean') {\n                throw new TypeError('keepInvalid() expects a boolean parameter');\n            }\n            options.keepInvalid = keepInvalid;\n            return picker;\n        };\n\n        picker.datepickerInput = function (datepickerInput) {\n            if (arguments.length === 0) {\n                return options.datepickerInput;\n            }\n\n            if (typeof datepickerInput !== 'string') {\n                throw new TypeError('datepickerInput() expects a string parameter');\n            }\n\n            options.datepickerInput = datepickerInput;\n            return picker;\n        };\n\n        picker.parseInputDate = function (parseInputDate) {\n            if (arguments.length === 0) {\n                return options.parseInputDate;\n            }\n\n            if (typeof parseInputDate !== 'function') {\n                throw new TypeError('parseInputDate() sholud be as function');\n            }\n\n            options.parseInputDate = parseInputDate;\n\n            return picker;\n        };\n\n        picker.disabledTimeIntervals = function (disabledTimeIntervals) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledTimeIntervals\">\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\n            ///<returns type=\"array\">options.disabledTimeIntervals</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledTimeIntervals_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledTimeIntervals ? $.extend({}, options.disabledTimeIntervals) : options.disabledTimeIntervals);\n            }\n\n            if (!disabledTimeIntervals) {\n                options.disabledTimeIntervals = false;\n                update();\n                return picker;\n            }\n            if (!(disabledTimeIntervals instanceof Array)) {\n                throw new TypeError('disabledTimeIntervals() expects an array parameter');\n            }\n            options.disabledTimeIntervals = disabledTimeIntervals;\n            update();\n            return picker;\n        };\n\n        picker.disabledHours = function (hours) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledHours\">\n            ///<summary>Returns an array with the currently set disabled hours on the component.</summary>\n            ///<returns type=\"array\">options.disabledHours</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledHours if such exist.</summary>\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.disabledHours_p:hours\">Takes an [ int ] of values and disallows the user to select only from those hours.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledHours ? $.extend({}, options.disabledHours) : options.disabledHours);\n            }\n\n            if (!hours) {\n                options.disabledHours = false;\n                update();\n                return picker;\n            }\n            if (!(hours instanceof Array)) {\n                throw new TypeError('disabledHours() expects an array parameter');\n            }\n            options.disabledHours = indexGivenHours(hours);\n            options.enabledHours = false;\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'h')) {\n                    date.add(1, 'h');\n                    if (tries === 24) {\n                        throw 'Tried 24 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n\n        picker.enabledHours = function (hours) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledHours\">\n            ///<summary>Returns an array with the currently set enabled hours on the component.</summary>\n            ///<returns type=\"array\">options.enabledHours</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledHours if such exist.</summary>\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.enabledHours_p:hours\">Takes an [ int ] of values and allows the user to select only from those hours.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.enabledHours ? $.extend({}, options.enabledHours) : options.enabledHours);\n            }\n\n            if (!hours) {\n                options.enabledHours = false;\n                update();\n                return picker;\n            }\n            if (!(hours instanceof Array)) {\n                throw new TypeError('enabledHours() expects an array parameter');\n            }\n            options.enabledHours = indexGivenHours(hours);\n            options.disabledHours = false;\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'h')) {\n                    date.add(1, 'h');\n                    if (tries === 24) {\n                        throw 'Tried 24 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n        /**\n         * Returns the component's model current viewDate, a moment object or null if not set. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.\n         * @param {Takes string, viewDate, moment, null parameter.} newDate\n         * @returns {viewDate.clone()}\n         */\n        picker.viewDate = function (newDate) {\n            if (arguments.length === 0) {\n                return viewDate.clone();\n            }\n\n            if (!newDate) {\n                viewDate = date.clone();\n                return picker;\n            }\n\n            if (typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n                throw new TypeError('viewDate() parameter must be one of [string, moment or Date]');\n            }\n\n            viewDate = parseInputDate(newDate);\n            viewUpdate();\n            return picker;\n        };\n\n        // initializing element and component attributes\n        if (element.is('input')) {\n            input = element;\n        } else {\n            input = element.find(options.datepickerInput);\n            if (input.length === 0) {\n                input = element.find('input');\n            } else if (!input.is('input')) {\n                throw new Error('CSS class \"' + options.datepickerInput + '\" cannot be applied to non input element');\n            }\n        }\n\n        if (element.hasClass('input-group')) {\n            // in case there is more then one 'input-group-addon' Issue #48\n            if (element.find('.datepickerbutton').length === 0) {\n                component = element.find('.input-group-addon');\n            } else {\n                component = element.find('.datepickerbutton');\n            }\n        }\n\n        if (!options.inline && !input.is('input')) {\n            throw new Error('Could not initialize DateTimePicker without an input element');\n        }\n\n        // Set defaults for date here now instead of in var declaration\n        date = getMoment();\n        viewDate = date.clone();\n\n        $.extend(true, options, dataToOptions());\n\n        picker.options(options);\n\n        initFormatting();\n\n        attachDatePickerElementEvents();\n\n        if (input.prop('disabled')) {\n            picker.disable();\n        }\n        if (input.is('input') && input.val().trim().length !== 0) {\n            setValue(parseInputDate(input.val().trim()));\n        }\n        else if (options.defaultDate && input.attr('placeholder') === undefined) {\n            setValue(options.defaultDate);\n        }\n        if (options.inline) {\n            show();\n        }\n        return picker;\n    };\n\n    /********************************************************************************\n     *\n     * jQuery plugin constructor and defaults object\n     *\n     ********************************************************************************/\n\n    /**\n    * See (http://jquery.com/).\n    * @name jQuery\n    * @class\n    * See the jQuery Library  (http://jquery.com/) for full details.  This just\n    * documents the function and classes that are added to jQuery by this plug-in.\n    */\n    /**\n     * See (http://jquery.com/)\n     * @name fn\n     * @class\n     * See the jQuery Library  (http://jquery.com/) for full details.  This just\n     * documents the function and classes that are added to jQuery by this plug-in.\n     * @memberOf jQuery\n     */\n    /**\n     * Show comments\n     * @class datetimepicker\n     * @memberOf jQuery.fn\n     */\n    $.fn.datetimepicker = function (options) {\n        options = options || {};\n\n        var args = Array.prototype.slice.call(arguments, 1),\n            isInstance = true,\n            thisMethods = ['destroy', 'hide', 'show', 'toggle'],\n            returnValue;\n\n        if (typeof options === 'object') {\n            return this.each(function () {\n                var $this = $(this),\n                    _options;\n                if (!$this.data('DateTimePicker')) {\n                    // create a private copy of the defaults object\n                    _options = $.extend(true, {}, $.fn.datetimepicker.defaults, options);\n                    $this.data('DateTimePicker', dateTimePicker($this, _options));\n                }\n            });\n        } else if (typeof options === 'string') {\n            this.each(function () {\n                var $this = $(this),\n                    instance = $this.data('DateTimePicker');\n                if (!instance) {\n                    throw new Error('bootstrap-datetimepicker(\"' + options + '\") method was called on an element that is not using DateTimePicker');\n                }\n\n                returnValue = instance[options].apply(instance, args);\n                isInstance = returnValue === instance;\n            });\n\n            if (isInstance || $.inArray(options, thisMethods) > -1) {\n                return this;\n            }\n\n            return returnValue;\n        }\n\n        throw new TypeError('Invalid arguments for DateTimePicker: ' + options);\n    };\n\n    $.fn.datetimepicker.defaults = {\n        timeZone: '',\n        format: false,\n        dayViewHeaderFormat: 'MMMM YYYY',\n        extraFormats: false,\n        stepping: 1,\n        minDate: false,\n        maxDate: false,\n        useCurrent: true,\n        collapse: true,\n        locale: moment.locale(),\n        defaultDate: false,\n        disabledDates: false,\n        enabledDates: false,\n        icons: {\n            time: 'glyphicon glyphicon-time',\n            date: 'glyphicon glyphicon-calendar',\n            up: 'glyphicon glyphicon-chevron-up',\n            down: 'glyphicon glyphicon-chevron-down',\n            previous: 'glyphicon glyphicon-chevron-left',\n            next: 'glyphicon glyphicon-chevron-right',\n            today: 'glyphicon glyphicon-screenshot',\n            clear: 'glyphicon glyphicon-trash',\n            close: 'glyphicon glyphicon-remove'\n        },\n        tooltips: {\n            today: 'Go to today',\n            clear: 'Clear selection',\n            close: 'Close the picker',\n            selectMonth: 'Select Month',\n            prevMonth: 'Previous Month',\n            nextMonth: 'Next Month',\n            selectYear: 'Select Year',\n            prevYear: 'Previous Year',\n            nextYear: 'Next Year',\n            selectDecade: 'Select Decade',\n            prevDecade: 'Previous Decade',\n            nextDecade: 'Next Decade',\n            prevCentury: 'Previous Century',\n            nextCentury: 'Next Century',\n            pickHour: 'Pick Hour',\n            incrementHour: 'Increment Hour',\n            decrementHour: 'Decrement Hour',\n            pickMinute: 'Pick Minute',\n            incrementMinute: 'Increment Minute',\n            decrementMinute: 'Decrement Minute',\n            pickSecond: 'Pick Second',\n            incrementSecond: 'Increment Second',\n            decrementSecond: 'Decrement Second',\n            togglePeriod: 'Toggle Period',\n            selectTime: 'Select Time'\n        },\n        useStrict: false,\n        sideBySide: false,\n        daysOfWeekDisabled: false,\n        calendarWeeks: false,\n        viewMode: 'days',\n        toolbarPlacement: 'default',\n        showTodayButton: false,\n        showClear: false,\n        showClose: false,\n        widgetPositioning: {\n            horizontal: 'auto',\n            vertical: 'auto'\n        },\n        widgetParent: null,\n        ignoreReadonly: false,\n        keepOpen: false,\n        focusOnShow: true,\n        inline: false,\n        keepInvalid: false,\n        datepickerInput: '.datepickerinput',\n        keyBinds: {\n            up: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(7, 'd'));\n                } else {\n                    this.date(d.clone().add(this.stepping(), 'm'));\n                }\n            },\n            down: function (widget) {\n                if (!widget) {\n                    this.show();\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(7, 'd'));\n                } else {\n                    this.date(d.clone().subtract(this.stepping(), 'm'));\n                }\n            },\n            'control up': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'y'));\n                } else {\n                    this.date(d.clone().add(1, 'h'));\n                }\n            },\n            'control down': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'y'));\n                } else {\n                    this.date(d.clone().subtract(1, 'h'));\n                }\n            },\n            left: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'd'));\n                }\n            },\n            right: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'd'));\n                }\n            },\n            pageUp: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'M'));\n                }\n            },\n            pageDown: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'M'));\n                }\n            },\n            enter: function () {\n                this.hide();\n            },\n            escape: function () {\n                this.hide();\n            },\n            //tab: function (widget) { //this break the flow of the form. disabling for now\n            //    var toggle = widget.find('.picker-switch a[data-action=\"togglePicker\"]');\n            //    if(toggle.length > 0) toggle.click();\n            //},\n            'control space': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                if (widget.find('.timepicker').is(':visible')) {\n                    widget.find('.btn[data-action=\"togglePeriod\"]').click();\n                }\n            },\n            t: function () {\n                this.date(this.getMoment());\n            },\n            'delete': function () {\n                this.clear();\n            }\n        },\n        debug: false,\n        allowInputToggle: false,\n        disabledTimeIntervals: false,\n        disabledHours: false,\n        enabledHours: false,\n        viewDate: false\n    };\n\n    return $.fn.datetimepicker;\n}));\n"]}