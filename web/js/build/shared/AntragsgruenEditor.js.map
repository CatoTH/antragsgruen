{"version":3,"sources":["shared/AntragsgruenEditor.js","shared/AntragsgruenEditor.ts"],"names":["define","require","exports","Object","defineProperty","value","AntragsgruenEditor","constructor","id","this","$el","$","initialized","data","console","error","attr","ckeditorConfig","createConfig","CKEDITOR","ENTER_BR","ENTER_P","focusManager","_","blurDelay","editor","inline","initMaxLen","static","html","tmp","document","createElement","innerHTML","textContent","innerText","text","normalizedText","replace","ckeditor_strip","length","maxLenOnChange","currLen","ckeditor_charcount","getData","$currCounter","maxLen","$warning","removeClass","maxLenSoft","$submit","prop","addClass","$fieldset","parents","first","find","on","bind","title","noStrike","trackChanged","allowDiffFormattings","autocolorize","enterMode","coreStyles_strike","element","attributes","class","overrides","coreStyles_underline","toolbarGroups","name","groups","removePlugins","extraPlugins","scayt_sLang","shiftEnterMode","strikeEl","strikeClass","autocolorizeClass","allowedContent","tooltips","getEditor","instances","destroy"],"mappings":"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","file":"AntragsgruenEditor.js","sourcesContent":[null,"import domObject = CKEDITOR.dom.domObject;\nimport editor = CKEDITOR.editor;\n\nexport class AntragsgruenEditor {\n    private editor: editor;\n    private $el: JQuery;\n\n    private static ckeditor_strip(html: string): string {\n        let tmp = document.createElement(\"div\");\n        tmp.innerHTML = html;\n\n        if (tmp.textContent == '' && typeof tmp.innerText == 'undefined') {\n            return '';\n        }\n\n        return tmp.textContent || tmp.innerText;\n    }\n\n    private static ckeditor_charcount(text: string): number {\n        let normalizedText = text.replace(/(\\r\\n|\\n|\\r)/gm, \"\").replace(/^\\s+|\\s+$/g, \"\").replace(\"&nbsp;\", \"\");\n        normalizedText = AntragsgruenEditor.ckeditor_strip(normalizedText).replace(/^([\\s\\t\\r\\n]*)$/, \"\");\n\n        return normalizedText.length;\n    }\n\n    private $currCounter: JQuery;\n    private $warning: JQuery;\n    private $submit: JQuery;\n    private maxLen: number;\n    private maxLenSoft: boolean;\n\n    private maxLenOnChange() {\n        let currLen = AntragsgruenEditor.ckeditor_charcount(this.editor.getData());\n        this.$currCounter.text(currLen);\n        if (currLen > this.maxLen) {\n            this.$warning.removeClass('hidden');\n            if (!this.maxLenSoft) {\n                this.$submit.prop(\"disabled\", true);\n            }\n        } else {\n            this.$warning.addClass('hidden');\n            if (!this.maxLenSoft) {\n                this.$submit.prop(\"disabled\", false);\n            }\n        }\n    }\n\n    private initMaxLen() {\n        let $fieldset = this.$el.parents(\".wysiwyg-textarea\").first();\n        if (!$fieldset.data(\"max-len\")) {\n            return;\n        }\n\n        this.maxLen = $fieldset.data(\"max-len\");\n        this.maxLenSoft = false;\n        this.$warning = $fieldset.find('.maxLenTooLong');\n        this.$submit = this.$el.parents(\"form\").first().find(\"button[type=submit]\");\n        this.$currCounter = $fieldset.find(\".maxLenHint .counter\");\n\n        if (this.maxLen < 0) {\n            this.maxLenSoft = true;\n            this.maxLen = -1 * this.maxLen;\n        }\n\n        this.editor.on('change', this.maxLenOnChange.bind(this));\n        this.maxLenOnChange();\n    }\n\n    private static createConfig(title: string, noStrike: boolean, trackChanged: boolean, allowDiffFormattings: boolean, autocolorize: boolean, enterMode: any): any {\n        let ckeditorConfig = {\n            coreStyles_strike: {\n                element: 'span',\n                attributes: {'class': 'strike'},\n                overrides: 'strike'\n            },\n            coreStyles_underline: {\n                element: 'span',\n                attributes: {'class': 'underline'}\n            },\n            toolbarGroups: [\n                {name: 'tools'},\n                {name: 'document', groups: ['mode', 'document', 'doctools']},\n                //{name: 'clipboard', groups: ['clipboard', 'undo']},\n                //{name: 'editing', groups: ['find', 'selection', 'spellchecker']},\n                //{name: 'forms'},\n                {name: 'basicstyles', groups: ['basicstyles', 'cleanup']},\n                {name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi']},\n                {name: 'links'},\n                {name: 'insert'},\n                {name: 'styles'},\n                {name: 'colors'},\n                {name: 'autocolorize'},\n                {name: 'others'}\n            ],\n            removePlugins: 'stylescombo,save,showblocks,specialchar,about,preview,pastetext,magicline,liststyle',\n            extraPlugins: 'tabletools,listitemstyle',\n            scayt_sLang: 'de_DE',\n            title: title,\n            enterMode: enterMode,\n            shiftEnterMode: (enterMode === CKEDITOR.ENTER_BR ? CKEDITOR.ENTER_P : CKEDITOR.ENTER_BR),\n        };\n\n        let strikeEl = (noStrike ? '' : ' s'),\n            strikeClass = (noStrike ? '' : ',strike'),\n            autocolorizeClass = (autocolorize ? ',adminTyped1,adminTyped2' : ''),\n            allowedContent = '';\n\n        if (trackChanged || allowDiffFormattings) {\n            allowedContent = 'strong' + strikeEl + ' em u sub sup;' +\n                'h1 h2 h3 h4(ice-ins,ice-del,ice-cts,appendHint,appendedCollision,moved);' +\n                'ol[start,data-*](ice-ins,ice-del,ice-cts,appendHint,appendedCollision,moved,decimalDot,decimalCircle,lowerAlpha,upperAlpha);' +\n                'li[value,data-*](ice-ins,ice-del,ice-cts,appendHint,appendedCollision,moved);' +\n                'ul[data-*](ice-ins,ice-del,ice-cts,appendHint,appendedCollision,moved);' +\n                //'table tr td th tbody thead caption [border] {margin,padding,width,height,border,border-spacing,border-collapse,align,cellspacing,cellpadding};' +\n                'div [data-*](collidingParagraph,hasCollisions,moved);' +\n                'p blockquote [data-*](ice-ins,ice-del,ice-cts,appendHint,appendedCollision,collidingParagraphHead,moved){border,margin,padding};' +\n                'span[data-*](ice-ins,ice-del,ice-cts,appendHint,appendedCollision,underline' + strikeClass + ',subscript,superscript' + autocolorizeClass + ');' +\n                'a[href,data-*](ice-ins,ice-del,ice-cts,appendHint,appendedCollision);' +\n                'br ins del[data-*](ice-ins,ice-del,ice-cts,appendHint,appendedCollision);';\n        } else {\n            allowedContent = 'strong' + strikeEl + ' em u sub sup;' +\n                'ul;' +\n                'ol[start](decimalDot,decimalCircle,lowerAlpha,upperAlpha);' +\n                'li[value];' +\n                'h2 h3 h4;' +\n                //'table tr td th tbody thead caption [border] {margin,padding,width,height,border,border-spacing,border-collapse,align,cellspacing,cellpadding};' +\n                'p blockquote {border,margin,padding};' +\n                'span(underline' + strikeClass + ',subscript,superscript' + autocolorizeClass + ');' +\n                'a[href];';\n        }\n\n        if (trackChanged) {\n            ckeditorConfig.extraPlugins += ',lite';\n            ckeditorConfig['lite'] = {tooltips: false};\n\n            // Undo and Track changes are incompatible\n            // https://github.com/CatoTH/antragsgruen/issues/224\n            // http://dev.ckeditor.com/ticket/14854\n            ckeditorConfig['removePlugins'] += ',undo';\n        } else {\n            ckeditorConfig['removePlugins'] += ',lite';\n        }\n        if (autocolorize) {\n            ckeditorConfig['extraPlugins'] += ',autocolorize';\n        }\n        ckeditorConfig['allowedContent'] = allowedContent;\n        // ckeditorConfig.pasteFilter = allowedContent; // Seems to break copy/pasting some <strong> formatting in 4.5.11\n\n        return ckeditorConfig\n    }\n\n    public getEditor(): editor {\n        return this.editor;\n    }\n\n    public static destroyInstanceById(id: string) {\n        let editor = CKEDITOR.instances[id];\n        editor.destroy();\n        let $el: JQuery = $(\"#\" + id);\n        $el.data(\"ckeditor_initialized\", \"0\");\n        $el.attr(\"contenteditable\", \"false\");\n    }\n\n    constructor(id) {\n        this.$el = $(\"#\" + id);\n\n        let initialized = this.$el.data(\"ckeditor_initialized\");\n        if (typeof (initialized) != \"undefined\" && initialized == \"1\") {\n            console.error(\"Already initialized: \" + id);\n            return;\n        }\n\n        this.$el.data(\"ckeditor_initialized\", \"1\");\n        this.$el.attr(\"contenteditable\", \"true\");\n\n        let ckeditorConfig = AntragsgruenEditor.createConfig(\n            this.$el.attr(\"title\"),\n            (this.$el.data(\"no-strike\") == '1'),\n            (this.$el.data('track-changed') == '1'),\n            (this.$el.data('allow-diff-formattings') == '1'),\n            (this.$el.data('autocolorize') == '1'),\n            (this.$el.data('enter-mode') == 'br' ? CKEDITOR.ENTER_BR : CKEDITOR.ENTER_P)\n        );\n\n        // This prevents strange behavior in chrome: after switching from the WYSIWYG editor field to a regular input,\n        // the focus of the new input field was lost after 200ms\n        let focusManager: any = CKEDITOR.focusManager;\n        focusManager._.blurDelay = 0;\n\n        this.editor = CKEDITOR.inline(id, ckeditorConfig);\n\n        this.initMaxLen();\n    }\n}\n"]}