{"version":3,"sources":["shared/PolicySetter.ts"],"names":["POLICY_USER_GROUPS","PolicySetter","constructor","$widget","this","$select","find","loadUrl","data","initGroupSelector","initPolicySelector","$policySelect","on","parseInt","val","removeClass","addClass","trigger","selectizeOption","Object","assign","loadThrottle","valueField","labelField","searchField","load","query","cb","$","get","then","res","render","option_create","escape","__t","input","selectize"],"mappings":"AAAA,MAAMA,mBAAqB,EAE3B,MAAMC,aAIF,WAAAC,CAAoBC,GAAAC,KAAAD,QAAAA,EAChBC,KAAKC,QAAUD,KAAKD,QAAQG,KAAK,oBACjCF,KAAKG,QAAUH,KAAKC,QAAQG,KAAK,YAEjCJ,KAAKK,oBACLL,KAAKM,oBACT,CAEQ,kBAAAA,GAEJ,MAAMC,EAAgBP,KAAKD,QAAQG,KAAK,iBACxCK,EAAcC,GAAG,UAAU,KAjBR,IAkBXC,SAASF,EAAcG,MAAiB,IACxCV,KAAKC,QAAQU,YAAY,UAEzBX,KAAKC,QAAQW,SAAS,SAC1B,IACDC,QAAQ,SACf,CAEQ,iBAAAR,GAEJ,IAAIS,EAAkB,CAAA,EACtB,GAAId,KAAKG,QAAS,CACd,MAAMA,EAAUH,KAAKG,QACrBW,EAAkBC,OAAOC,OAAOF,EAAiB,CAC7CG,aAAc,KACdC,WAAY,KACZC,WAAY,QACZC,YAAa,QACbC,KAAM,SAAUC,EAAOC,GACnB,OAAKD,EACEE,EAAEC,IAAItB,EAAS,CAACmB,UAAQI,MAAKC,IAChCJ,EAAGI,EAAI,IAFQJ,GAIvB,EACAK,OAAQ,CACJC,cAAe,CAACzB,EAAM0B,IACX,uBAAyBC,IAAI,MAAO,WAAa,aAAeD,EAAO1B,EAAK4B,OAAS,oBAI5G,CACChC,KAAKC,QAAQC,KAAK,UAAkB+B,UAAUnB,EACnD","file":"PolicySetter.js","sourcesContent":["const POLICY_USER_GROUPS = 6;\n\nclass PolicySetter {\n    private $select: JQuery;\n    private readonly loadUrl: string|null;\n\n    constructor(private $widget: JQuery) {\n        this.$select = this.$widget.find('.userGroupSelect')\n        this.loadUrl = this.$select.data('load-url');\n\n        this.initGroupSelector();\n        this.initPolicySelector();\n    }\n\n    private initPolicySelector(): void\n    {\n        const $policySelect = this.$widget.find(\".policySelect\");\n        $policySelect.on(\"change\", () => {\n            if (parseInt($policySelect.val() as string, 10) === POLICY_USER_GROUPS) {\n                this.$select.removeClass(\"hidden\");\n            } else {\n                this.$select.addClass(\"hidden\");\n            }\n        }).trigger(\"change\");\n    }\n\n    private initGroupSelector(): void\n    {\n        let selectizeOption = {};\n        if (this.loadUrl) {\n            const loadUrl = this.loadUrl;\n            selectizeOption = Object.assign(selectizeOption, {\n                loadThrottle: null,\n                valueField: 'id',\n                labelField: 'label',\n                searchField: 'label',\n                load: function (query, cb) {\n                    if (!query) return cb();\n                    return $.get(loadUrl, {query}).then(res => {\n                        cb(res);\n                    });\n                },\n                render: {\n                    option_create: (data, escape) => {\n                        return '<div class=\"create\">' + __t('std', 'add_tag') + ': <strong>' + escape(data.input) + '</strong></div>';\n                    }\n                }\n            });\n        }\n        (this.$select.find(\"select\") as any).selectize(selectizeOption);\n    }\n}\n"]}