{"version":3,"sources":["backend/ChangeProposedProcedure.js","backend/ChangeProposedProcedure.ts"],"names":["define","require","exports","Object","defineProperty","value","ChangeProposedProcedure","constructor","$widget","this","savingComment","initElements","initOpener","initStatusSetter","initCommentForm","initVotingBlock","initExplanation","initTags","on","ev","preventDefault","setVotingBlockSettings","_a","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","$tagsSelect","$openerBtn","$","context","data","saveUrl","attr","csrf","val","version","removeClass","addClass","localStorage","setItem","getItem","selectize","create","plugins","render","option_create","escape","__t","input","reinitAfterReload","statusChanged","commentsScrollBottom","trigger","setGlobalProposedStr","html","performCallWithReload","ajax","url","type","JSON","stringify","processData","contentType","dataType","headers","success","ret","window","location","href","$content","children","remove","append","setTimeout","alert","catch","err","parse","responseText","e","notifyProposer","text","fromName","replyTo","setPropserHasAccepted","confirm","bootbox","result","setProposerHasAccepted","saveStatus","newValStr","newVal","undefined","parseInt","setStatus","visible","prop","votingBlockId","votingItemBlockName","tags","items","length","filter","each","i","el","$select","toString","currentTarget","init","parents","bind","scrollintoview","top_offset","selectedName","initialization","target","$commentList","scrollTop","scrollHeight","doSaveComment","$commentWidget","writeComment","delHtml","comment","delLink","$comment","dateFormatted","username","id","delComment","post","_csrf","originalEvent","first"],"mappings":"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","file":"ChangeProposedProcedure.js","sourcesContent":[null,"const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY_AMEND = 22;\nconst STATUS_CUSTOM_STRING = 23;\nconst STATUS_PROPOSED_MOVE_TO_OTHER_MOTION = 28;\n\nexport class ChangeProposedProcedure {\n    private $openerBtn: JQuery;\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private $tagsSelect: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private version: number|null;\n    private csrf: string;\n    private savingComment: boolean = false;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initOpener();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.initExplanation();\n        this.initTags();\n        $widget.on(\"submit\", ev => ev.preventDefault());\n        this.setVotingBlockSettings();\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('select[name=votingBlockId]');\n        this.$tagsSelect = this.$widget.find('.proposalTagsSelect');\n        this.$openerBtn = $('.proposedChangesOpener button');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val() as string;\n        this.version = this.$widget.data('proposal-id') ?? null;\n    }\n\n    private initOpener() {\n        this.$openerBtn.on('click', () => {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '1');\n        });\n        this.$widget.on('click', '.closeBtn', () => {\n            this.$widget.addClass('hidden');\n            this.$openerBtn.removeClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '0');\n        });\n\n        if (localStorage.getItem('proposed_procedure_enabled') === '1') {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n        } else {\n            this.$widget.addClass('hidden');\n        }\n    }\n\n    private initTags() {\n        const $tagsSelect: any = this.$tagsSelect;\n\n        $tagsSelect.selectize({\n            create: true,\n            plugins: [\"remove_button\"],\n            render: {\n                option_create: (data, escape) => {\n                    return '<div class=\"create\">' + __t('std', 'add_tag') + ': <strong>' + escape(data.input) + '</strong></div>';\n                }\n            }\n        });\n\n        $tagsSelect.on(\"change\", () => {\n            this.$widget.addClass('isChanged');\n        });\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.initExplanation();\n        this.initTags();\n        this.$widget.find('.newBlock').addClass('hidden');\n        this.$widget.find('.notifyProposerSection').addClass('hidden');\n        this.$widget.find('#votingBlockId').trigger('change');\n    }\n\n    private setGlobalProposedStr(html: string) {\n        $(\".motionData .proposedStatusRow .str\").html(html);\n    }\n\n    private performCallWithReload(data: object) {\n        data['context'] = this.context;\n        data['version'] = this.version;\n\n        $.ajax({\n            url: this.saveUrl,\n            type: \"POST\",\n            data: JSON.stringify(data),\n            processData: false,\n            contentType: \"application/json; charset=utf-8\",\n            dataType: \"json\",\n            headers: {\"X-CSRF-Token\": this.csrf},\n            success: ret => {\n                if (ret['redirectToUrl']) {\n                    window.location.href = ret['redirectToUrl'];\n                } else if (ret['success']) {\n                    let $content = $(ret['html']);\n                    this.$widget.children().remove();\n                    this.$widget.append($content.children());\n                    this.reinitAfterReload();\n                    this.$widget.addClass('showSaved').removeClass('isChanged');\n                    if (ret['proposalStr']) {\n                        this.setGlobalProposedStr(ret['proposalStr']);\n                    }\n                    window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n                } else if (ret['message']) {\n                    alert(ret['message']);\n                } else {\n                    alert('An error occurred');\n                }\n            }\n        }).catch(function (err) {\n            try {\n                const ret = JSON.parse(err.responseText);\n                if (ret['message']) {\n                    alert(ret['message']);\n                } else {\n                    alert(err.responseText);\n                }\n            } catch (e) {\n                alert(err.responseText);\n            }\n        });\n    }\n\n    private notifyProposer() {\n        const text = this.$widget.find('textarea[name=proposalNotificationText]').val(),\n            fromName = this.$widget.find('input[name=proposalNotificationFrom]').val(),\n            replyTo = this.$widget.find('input[name=proposalNotificationReply]').val();\n        this.performCallWithReload({\n            'notifyProposer': true,\n            'text': text,\n            'fromName': fromName,\n            'replyTo': replyTo,\n        });\n    }\n\n    private setPropserHasAccepted() {\n        const confirm = this.$widget.find('.setConfirmation').data('msg');\n        bootbox.confirm(confirm, (result) => {\n            if (result) {\n                this.performCallWithReload({\n                    'setProposerHasAccepted': '1',\n                });\n            }\n        });\n    }\n\n    private saveStatus() {\n        const selectize = this.$tagsSelect[0] as any\n        let newValStr = this.$widget.find('.statusForm input[type=radio]:checked').val() as string|undefined;\n        let newVal = (newValStr === undefined ? null : parseInt(newValStr, 10));\n        let data = {\n            setStatus: newVal,\n            visible: this.$visibilityInput.prop('checked'),\n            votingBlockId: this.$votingBlockId.val(),\n            votingItemBlockName: this.$widget.find(\".votingItemBlockNameRow input\").val(),\n            tags: selectize.selectize.items,\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY_AMEND) {\n            if (this.$widget.find('select[name=obsoletedByAmendment]').length > 0) {\n                data['proposalComment'] = this.$widget.find('select[name=obsoletedByAmendment]').val();\n            } else {\n                data['proposalComment'] = this.$widget.find('select[name=obsoletedByMotion]').val();\n            }\n        }\n        if (newVal == STATUS_PROPOSED_MOVE_TO_OTHER_MOTION) {\n            if (this.$widget.find('select[name=movedToOtherMotion]').length > 0) {\n                data['proposalComment'] = this.$widget.find('select[name=movedToOtherMotion]').val();\n            }\n        }\n        if (newVal == STATUS_CUSTOM_STRING) {\n            data['proposalComment'] = this.$widget.find('input[name=statusCustomStr]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n        data['votingItemBlockId'] = {};\n        this.$widget.find('.votingItemBlockInput').each(function(i, el) {\n            const $select = $(el);\n            data['votingItemBlockId'][$select.data('voting-block') + \"\"] = $select.val();\n        });\n\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            data['proposalExplanation'] = this.$widget.find('textarea[name=proposalExplanation]').val();\n        }\n\n        this.performCallWithReload(data);\n    }\n\n    private statusChanged() {\n        let newVal = parseInt(this.$widget.find('.statusForm input[type=radio]:checked').val() as string, 10);\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal.toString(10)).removeClass('hidden');\n        if (newVal === 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change keyup', 'input, textarea', (ev) => {\n            if ($(ev.currentTarget).parents('.proposalCommentForm').length > 0) { // The comment textfield\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('change', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.on('change', '#movedToOtherMotion', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n\n        this.$widget.on('click', '.notifyProposer', () => {\n            this.$widget.find('.notifyProposerSection').removeClass('hidden');\n            this.$widget.find('.notifyProposerSection').scrollintoview({top_offset: -50});\n        });\n        this.$widget.on('click', '.setConfirmation', this.setPropserHasAccepted.bind(this));\n        this.$widget.on('click', '.sendAgain', () => {\n            this.$widget.find('.notifyProposerSection').removeClass('hidden');\n            this.$widget.find('.notifyProposerSection').scrollintoview({top_offset: -50});\n        });\n        this.$widget.on('click', 'button[name=notificationSubmit]', this.notifyProposer.bind(this));\n    }\n\n    private setVotingBlockSettings() {\n        this.$widget.find(\".votingItemBlockRow select\").on('change', (ev) => {\n            const $select = $(ev.currentTarget);\n            if ($select.val()) {\n                const selectedName = $select.find(\"option[value=\" + $select.val() + \"]\").data(\"group-name\");\n                this.$widget.find(\".votingItemBlockNameRow input\").val(selectedName);\n                this.$widget.find(\".votingItemBlockNameRow\").removeClass('hidden');\n            } else {\n                // Not grouped\n                this.$widget.find(\".votingItemBlockNameRow\").addClass('hidden');\n            }\n        });\n\n        if (this.$votingBlockId.val() === 'NEW') {\n            this.$widget.find('.newBlock').removeClass('hidden');\n            this.$widget.find('.votingItemBlockRow').addClass('hidden');\n            this.$widget.find(\".votingItemBlockNameRow\").addClass('hidden');\n        } else {\n            this.$widget.find('.newBlock').addClass('hidden');\n            this.$widget.find('.votingItemBlockRow').addClass('hidden');\n            this.$widget.find('.votingItemBlockRow' + this.$votingBlockId.val()).removeClass('hidden');\n            this.$widget.find(\".votingItemBlockRow\" + this.$votingBlockId.val() + \" select\").trigger('change', [{initialization: true}]); // to trigger group name listener\n        }\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('change', '#votingBlockId', () => {\n            this.$widget.addClass('isChanged');\n            this.setVotingBlockSettings();\n        });\n        this.$widget.on('change', '.votingItemBlockRow select', (e, data) => {\n            if (data && data.initialization) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.newBlock').addClass('hidden');\n    }\n\n    private initExplanation() {\n        this.$widget.find('input[name=setPublicExplanation]').on('change', (ev) => {\n            if ($(ev.target).prop('checked')) {\n                this.$widget.find('section.publicExplanation').removeClass('hidden');\n            } else {\n                this.$widget.find('section.publicExplanation').addClass('hidden');\n            }\n        });\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            this.$widget.find('section.publicExplanation').removeClass('hidden');\n        } else {\n            this.$widget.find('section.publicExplanation').addClass('hidden');\n        }\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private doSaveComment() {\n        let $commentWidget = this.$widget.find('.proposalCommentForm'),\n            $commentList = $commentWidget.find('.commentList'),\n            text = $commentWidget.find('textarea').val();\n\n        if (text == '' || this.savingComment) {\n            return;\n        }\n\n        this.savingComment = true;\n\n        $.ajax({\n            url: this.saveUrl,\n            type: \"POST\",\n            data: JSON.stringify({\n                writeComment: text,\n                version: this.version,\n            }),\n            processData: false,\n            contentType: \"application/json; charset=utf-8\",\n            dataType: \"json\",\n            headers: {\"X-CSRF-Token\": this.csrf},\n            success: ev => {\n                if (ev.success) {\n                    let delHtml = '';\n                    if (ev.comment.delLink) {\n                        delHtml = '<button type=\"button\" data-url=\"' + ev.comment.delLink + '\" class=\"btn-link delComment\">';\n                        delHtml += '<span class=\"glyphicon glyphicon-trash\"></span></button>';\n                    }\n                    let $comment = $('<li class=\"comment\"><div class=\"header\"><div class=\"date\"></div>' + delHtml + '<div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                    $comment.find('.date').text(ev.comment.dateFormatted);\n                    $comment.find('.name').text(ev.comment.username);\n                    $comment.find('.comment').text(ev.comment.text);\n                    $comment.data('id', ev.comment.id);\n                    $commentList.append($comment);\n                    $commentWidget.find('textarea').val('');\n                    $commentList[0].scrollTop = $commentList[0].scrollHeight;\n                } else {\n                    alert('Could not save: ' + JSON.stringify(ev));\n                }\n                this.savingComment = false;\n            }\n        }).catch(() => {\n            alert('Could not save');\n            this.savingComment = false;\n        });\n    }\n\n    private delComment($comment: JQuery) {\n        $.post($comment.find(\".delComment\").data(\"url\"), {\n            \"_csrf\": this.csrf,\n            \"id\": $comment.data(\"id\"),\n        }, (ret) => {\n            if (ret['success']) {\n                $comment.remove();\n            } else {\n                alert(\"Error: \" + ret['error']);\n            }\n        });\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            this.doSaveComment();\n        });\n        this.commentsScrollBottom();\n\n        this.$widget.on('keypress', '.proposalCommentForm textarea', (ev) => {\n            if (ev.originalEvent['metaKey'] && ev.originalEvent['keyCode'] === 13) {\n                this.doSaveComment();\n            }\n        });\n\n        this.$widget.on('click', '.delComment', (ev) => {\n            this.delComment($(ev.currentTarget).parents(\".comment\").first());\n        });\n    }\n}\n"]}