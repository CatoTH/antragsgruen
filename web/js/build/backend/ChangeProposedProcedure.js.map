{"version":3,"sources":["backend/ChangeProposedProcedure.js","backend/ChangeProposedProcedure.ts"],"names":["define","require","exports","Object","defineProperty","value","ChangeProposedProcedure","constructor","$widget","this","savingComment","initElements","initOpener","initStatusSetter","initCommentForm","initVotingBlock","initExplanation","initTags","on","ev","preventDefault","setVotingBlockSettings","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","$tagsSelect","$openerBtn","$","context","data","saveUrl","attr","csrf","val","removeClass","addClass","localStorage","setItem","getItem","selectize","create","plugins","render","option_create","escape","__t","input","reinitAfterReload","statusChanged","commentsScrollBottom","trigger","setGlobalProposedStr","html","performCallWithReload","post","ret","console","log","window","location","href","$content","children","remove","append","setTimeout","alert","fail","notifyProposer","text","fromName","replyTo","setPropserHasAccepted","confirm","bootbox","result","setProposerHasAccepted","sendAgain","saveStatus","newVal","setStatus","visible","prop","votingBlockId","votingItemBlockName","tags","items","length","filter","each","i","el","$select","parseInt","toString","currentTarget","init","parents","bind","selectedName","target","$commentList","scrollTop","scrollHeight","doSaveComment","$commentWidget","writeComment","_csrf","success","delHtml","comment","delLink","$comment","dateFormatted","username","id","JSON","stringify","delComment","originalEvent","first"],"mappings":"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","file":"ChangeProposedProcedure.js","sourcesContent":[null,"const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY_AMEND = 22;\nconst STATUS_CUSTOM_STRING = 23;\nconst STATUS_PROPOSED_MOVE_TO_OTHER_MOTION = 28;\n\nexport class ChangeProposedProcedure {\n    private $openerBtn: JQuery;\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private $tagsSelect: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private csrf: string;\n    private savingComment: boolean = false;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initOpener();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.initExplanation();\n        this.initTags();\n        $widget.on(\"submit\", ev => ev.preventDefault());\n        this.setVotingBlockSettings();\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('select[name=votingBlockId]');\n        this.$tagsSelect = this.$widget.find('.proposalTagsSelect');\n        this.$openerBtn = $('.proposedChangesOpener button');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val() as string;\n    }\n\n    private initOpener() {\n        this.$openerBtn.on('click', () => {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '1');\n        });\n        this.$widget.on('click', '.closeBtn', () => {\n            this.$widget.addClass('hidden');\n            this.$openerBtn.removeClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '0');\n        });\n\n        if (localStorage.getItem('proposed_procedure_enabled') === '1') {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n        } else {\n            this.$widget.addClass('hidden');\n        }\n    }\n\n    private initTags() {\n        const $tagsSelect: any = this.$tagsSelect;\n\n        $tagsSelect.selectize({\n            create: true,\n            plugins: [\"remove_button\"],\n            render: {\n                option_create: (data, escape) => {\n                    return '<div class=\"create\">' + __t('std', 'add_tag') + ': <strong>' + escape(data.input) + '</strong></div>';\n                }\n            }\n        });\n\n        $tagsSelect.on(\"change\", () => {\n            this.$widget.addClass('isChanged');\n        });\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.initExplanation();\n        this.initTags();\n        this.$widget.find('.newBlock').addClass('hidden');\n        this.$widget.find('.notifyProposerSection').addClass('hidden');\n        this.$widget.find('#votingBlockId').trigger('change');\n    }\n\n    private setGlobalProposedStr(html: string) {\n        $(\".motionData .proposedStatusRow .str\").html(html);\n    }\n\n    private performCallWithReload(data: object) {\n        data['_csrf'] = this.csrf;\n        data['context'] = this.context;\n\n        $.post(this.saveUrl, data, (ret) => {\n            console.log(ret);\n            if (ret['redirectToUrl']) {\n                window.location.href = ret['redirectToUrl'];\n            } else if (ret['success']) {\n                let $content = $(ret['html']);\n                this.$widget.children().remove();\n                this.$widget.append($content.children());\n                this.reinitAfterReload();\n                this.$widget.addClass('showSaved').removeClass('isChanged');\n                if (ret['proposalStr']) {\n                    this.setGlobalProposedStr(ret['proposalStr']);\n                }\n                window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n            } else if (ret['error']) {\n                alert(ret['error']);\n            } else {\n                alert('An error occurred');\n            }\n        }).fail(() => {\n            alert('Could not save');\n        });\n    }\n\n    private notifyProposer() {\n        const text = this.$widget.find('textarea[name=proposalNotificationText]').val(),\n            fromName = this.$widget.find('input[name=proposalNotificationFrom]').val(),\n            replyTo = this.$widget.find('input[name=proposalNotificationReply]').val();\n        this.performCallWithReload({\n            'notifyProposer': '1',\n            'text': text,\n            'fromName': fromName,\n            'replyTo': replyTo,\n        });\n    }\n\n    private setPropserHasAccepted() {\n        const confirm = this.$widget.find('.setConfirmation').data('msg');\n        bootbox.confirm(confirm, (result) => {\n            if (result) {\n                this.performCallWithReload({\n                    'setProposerHasAccepted': '1',\n                });\n            }\n        });\n    }\n\n    private sendAgain() {\n        const confirm = this.$widget.find('.sendAgain').data('msg');\n        bootbox.confirm(confirm, (result) => {\n            if (result) {\n                this.performCallWithReload({\n                    'sendAgain': '1',\n                });\n            }\n        });\n    }\n\n    private saveStatus() {\n        const selectize = this.$tagsSelect[0] as any\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n            votingItemBlockName: this.$widget.find(\".votingItemBlockNameRow input\").val(),\n            tags: selectize.selectize.items,\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY_AMEND) {\n            if (this.$widget.find('select[name=obsoletedByAmendment]').length > 0) {\n                data['proposalComment'] = this.$widget.find('select[name=obsoletedByAmendment]').val();\n            } else {\n                data['proposalComment'] = this.$widget.find('select[name=obsoletedByMotion]').val();\n            }\n        }\n        if (newVal == STATUS_PROPOSED_MOVE_TO_OTHER_MOTION) {\n            if (this.$widget.find('select[name=movedToOtherMotion]').length > 0) {\n                data['proposalComment'] = this.$widget.find('select[name=movedToOtherMotion]').val();\n            }\n        }\n        if (newVal == STATUS_CUSTOM_STRING) {\n            data['proposalComment'] = this.$widget.find('input[name=statusCustomStr]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n        data['votingItemBlockId'] = {};\n        this.$widget.find('.votingItemBlockInput').each(function(i, el) {\n            const $select = $(el);\n            data['votingItemBlockId'][$select.data('voting-block') + \"\"] = $select.val();\n        });\n\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            data['proposalExplanation'] = this.$widget.find('textarea[name=proposalExplanation]').val();\n        }\n\n        this.performCallWithReload(data);\n    }\n\n    private statusChanged() {\n        let newVal = parseInt(this.$widget.find('.statusForm input[type=radio]:checked').val() as string, 10);\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal.toString(10)).removeClass('hidden');\n        if (newVal === 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change keyup', 'input, textarea', (ev) => {\n            if ($(ev.currentTarget).parents('.proposalCommentForm').length > 0) { // The comment textfield\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('change', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.on('change', '#movedToOtherMotion', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n\n        this.$widget.on('click', '.notifyProposer', () => {\n            this.$widget.find('.notifyProposerSection').removeClass('hidden');\n        });\n        this.$widget.on('click', '.setConfirmation', this.setPropserHasAccepted.bind(this));\n        this.$widget.on('click', '.sendAgain', this.sendAgain.bind(this));\n        this.$widget.on('click', 'button[name=notificationSubmit]', this.notifyProposer.bind(this));\n    }\n\n    private setVotingBlockSettings() {\n        this.$widget.find(\".votingItemBlockRow select\").on('change', (ev) => {\n            const $select = $(ev.currentTarget);\n            if ($select.val()) {\n                const selectedName = $select.find(\"option[value=\" + $select.val() + \"]\").data(\"group-name\");\n                this.$widget.find(\".votingItemBlockNameRow input\").val(selectedName);\n                this.$widget.find(\".votingItemBlockNameRow\").removeClass('hidden');\n            } else {\n                // Not grouped\n                this.$widget.find(\".votingItemBlockNameRow\").addClass('hidden');\n            }\n        });\n\n        if (this.$votingBlockId.val() === 'NEW') {\n            this.$widget.find('.newBlock').removeClass('hidden');\n            this.$widget.find('.votingItemBlockRow').addClass('hidden');\n            this.$widget.find(\".votingItemBlockNameRow\").addClass('hidden');\n        } else {\n            this.$widget.find('.newBlock').addClass('hidden');\n            this.$widget.find('.votingItemBlockRow').addClass('hidden');\n            this.$widget.find('.votingItemBlockRow' + this.$votingBlockId.val()).removeClass('hidden');\n            this.$widget.find(\".votingItemBlockRow\" + this.$votingBlockId.val() + \" select\").trigger('change'); // to trigger group name listener\n        }\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('change', '#votingBlockId', () => {\n            this.$widget.addClass('isChanged');\n            this.setVotingBlockSettings();\n        });\n        this.$widget.on('change', '.votingItemBlockRow select', () => {\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.newBlock').addClass('hidden');\n    }\n\n    private initExplanation() {\n        this.$widget.find('input[name=setPublicExplanation]').on('change', (ev) => {\n            if ($(ev.target).prop('checked')) {\n                this.$widget.find('section.publicExplanation').removeClass('hidden');\n            } else {\n                this.$widget.find('section.publicExplanation').addClass('hidden');\n            }\n        });\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            this.$widget.find('section.publicExplanation').removeClass('hidden');\n        } else {\n            this.$widget.find('section.publicExplanation').addClass('hidden');\n        }\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private doSaveComment() {\n        let $commentWidget = this.$widget.find('.proposalCommentForm'),\n            $commentList = $commentWidget.find('.commentList'),\n            text = $commentWidget.find('textarea').val();\n\n        if (text == '' || this.savingComment) {\n            return;\n        }\n\n        this.savingComment = true;\n        $.post(this.saveUrl, {\n            writeComment: text,\n            _csrf: this.csrf\n        }, (ev) => {\n            if (ev.success) {\n                let delHtml = '';\n                if (ev.comment.delLink) {\n                    delHtml = '<button type=\"button\" data-url=\"' + ev.comment.delLink + '\" class=\"btn-link delComment\">';\n                    delHtml += '<span class=\"glyphicon glyphicon-trash\"></span></button>';\n                }\n                let $comment = $('<li class=\"comment\"><div class=\"header\"><div class=\"date\"></div>' + delHtml + '<div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                $comment.find('.date').text(ev.comment.dateFormatted);\n                $comment.find('.name').text(ev.comment.username);\n                $comment.find('.comment').text(ev.comment.text);\n                $comment.data('id', ev.comment.id);\n                $commentList.append($comment);\n                $commentWidget.find('textarea').val('');\n                $commentList[0].scrollTop = $commentList[0].scrollHeight;\n            } else {\n                alert('Could not save: ' + JSON.stringify(ev));\n            }\n            this.savingComment = false;\n        }).fail(() => {\n            alert('Could not save');\n            this.savingComment = false;\n        });\n    }\n\n    private delComment($comment: JQuery) {\n        $.post($comment.find(\".delComment\").data(\"url\"), {\n            \"_csrf\": this.csrf,\n            \"id\": $comment.data(\"id\"),\n        }, (ret) => {\n            if (ret['success']) {\n                $comment.remove();\n            } else {\n                alert(\"Error: \" + ret['error']);\n            }\n        });\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            this.doSaveComment();\n        });\n        this.commentsScrollBottom();\n\n        this.$widget.on('keypress', '.proposalCommentForm textarea', (ev) => {\n            if (ev.originalEvent['metaKey'] && ev.originalEvent['keyCode'] === 13) {\n                this.doSaveComment();\n            }\n        });\n\n        this.$widget.on('click', '.delComment', (ev) => {\n            this.delComment($(ev.currentTarget).parents(\".comment\").first());\n        });\n    }\n}\n"]}