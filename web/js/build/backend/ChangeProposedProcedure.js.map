{"version":3,"sources":["backend/ChangeProposedProcedure.ts"],"names":["ChangeProposedProcedure","$widget","this","savingComment","initElements","initOpener","initStatusSetter","initCommentForm","initVotingBlock","initExplanation","submit","ev","preventDefault","prototype","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","$openerBtn","$","context","data","saveUrl","attr","csrf","val","_this","click","removeClass","addClass","localStorage","setItem","on","getItem","reinitAfterReload","statusChanged","commentsScrollBottom","selectlist","setGlobalProposedStr","html","performCallWithReload","post","ret","$content","children","remove","append","window","setTimeout","alert","fail","notifyProposer","saveStatus","newVal","setStatus","visible","prop","votingBlockId","filter","currentTarget","init","trigger","parents","length","bind","change","target","$commentList","scrollTop","scrollHeight","doSaveComment","$commentWidget","text","writeComment","_csrf","success","delHtml","comment","delLink","$comment","dateFormatted","username","id","JSON","stringify","delComment","catch","originalEvent","first","exports"],"mappings":"yGAAA,IAKAA,EAAA,WAWI,SAAAA,EAAoBC,GAAAC,KAAAD,QAAAA,EAFZC,KAAAC,eAAyB,EAG7BD,KAAKE,eACLF,KAAKG,aACLH,KAAKI,mBACLJ,KAAKK,kBACLL,KAAKM,kBACLN,KAAKO,kBACLR,EAAQS,OAAO,SAAAC,GAAM,OAAAA,EAAGC,mBAwPhC,OArPYZ,EAAAa,UAAAT,aAAR,WACIF,KAAKY,eAAiBZ,KAAKD,QAAQc,KAAK,kBACxCb,KAAKc,iBAAmBd,KAAKD,QAAQc,KAAK,+BAC1Cb,KAAKe,mBAAqBf,KAAKD,QAAQc,KAAK,4BAC5Cb,KAAKgB,eAAiBhB,KAAKD,QAAQc,KAAK,6BACxCb,KAAKiB,WAAaC,EAAE,iCACpBlB,KAAKmB,QAAUnB,KAAKD,QAAQqB,KAAK,WACjCpB,KAAKqB,QAAUrB,KAAKD,QAAQuB,KAAK,UACjCtB,KAAKuB,KAAOvB,KAAKD,QAAQc,KAAK,qBAAqBW,OAG/C1B,EAAAa,UAAAR,WAAR,WAAA,IAAAsB,EAAAzB,KACIA,KAAKiB,WAAWS,MAAM,WAClBD,EAAK1B,QAAQ4B,YAAY,UACzBF,EAAKR,WAAWW,SAAS,UACzBC,aAAaC,QAAQ,6BAA8B,OAEvD9B,KAAKD,QAAQgC,GAAG,QAAS,YAAa,WAClCN,EAAK1B,QAAQ6B,SAAS,UACtBH,EAAKR,WAAWU,YAAY,UAC5BE,aAAaC,QAAQ,6BAA8B,OAGI,MAAvDD,aAAaG,QAAQ,+BACrBhC,KAAKD,QAAQ4B,YAAY,UACzB3B,KAAKiB,WAAWW,SAAS,WAEzB5B,KAAKD,QAAQ6B,SAAS,WAItB9B,EAAAa,UAAAsB,kBAAR,WACIjC,KAAKE,eACLF,KAAKkC,gBACLlC,KAAKmC,uBACLnC,KAAKO,kBACLP,KAAKD,QAAQc,KAAK,aAAae,SAAS,UACxC5B,KAAKD,QAAQc,KAAK,eAAeuB,cAG7BtC,EAAAa,UAAA0B,qBAAR,SAA6BC,GACzBpB,EAAE,uCAAuCoB,KAAKA,IAG1CxC,EAAAa,UAAA4B,sBAAR,SAA8BnB,GAA9B,IAAAK,EAAAzB,KACIoB,EAAY,MAAIpB,KAAKuB,KAErBL,EAAEsB,KAAKxC,KAAKqB,QAASD,EAAM,SAACqB,GACxB,GAAIA,EAAa,QAAG,CAChB,IAAIC,EAAWxB,EAAEuB,EAAU,MAC3BhB,EAAK1B,QAAQ4C,WAAWC,SACxBnB,EAAK1B,QAAQ8C,OAAOH,EAASC,YAC7BlB,EAAKQ,oBACLR,EAAK1B,QAAQ6B,SAAS,aAAaD,YAAY,aAC3Cc,EAAiB,aACjBhB,EAAKY,qBAAqBI,EAAiB,aAE/CK,OAAOC,WAAW,WAAM,OAAAtB,EAAK1B,QAAQ4B,YAAY,cAAc,UACxDc,EAAW,MAClBO,MAAMP,EAAW,OAEjBO,MAAM,sBAEXC,KAAK,WACJD,MAAM,qBAINlD,EAAAa,UAAAuC,eAAR,WACIlD,KAAKuC,sBAAsB,CACvBW,eAAkB,OAIlBpD,EAAAa,UAAAwC,WAAR,WACI,IAAIC,EAASpD,KAAKD,QAAQc,KAAK,yCAAyCW,MACpEJ,EAAO,CACPiC,UAAWD,EACXE,QAAUtD,KAAKc,iBAAiByC,KAAK,WAAa,EAAI,EACtDC,cAAexD,KAAKgB,eAAeQ,OAzGvB,IA4GZ4B,IACAhC,EAAsB,gBAAIpB,KAAKD,QAAQc,KAAK,0BAA0BW,OA3GtD,IA6GhB4B,IACAhC,EAAsB,gBAAIpB,KAAKD,QAAQc,KAAK,oCAAoCW,OA7G/D,IA+GjB4B,IACAhC,EAAsB,gBAAIpB,KAAKD,QAAQc,KAAK,+BAA+BW,OAlHnE,IAoHR4B,IACAhC,EAAmB,aAAIpB,KAAKe,mBAAmB0C,OAAO,YAAYjC,OAE5C,OAAtBJ,EAAKoC,gBACLpC,EAAuB,iBAAIpB,KAAKD,QAAQc,KAAK,6BAA6BW,OAG1ExB,KAAKD,QAAQc,KAAK,oCAAoC0C,KAAK,aAC3DnC,EAA0B,oBAAIpB,KAAKD,QAAQc,KAAK,sCAAsCW,OAG1FxB,KAAKuC,sBAAsBnB,IAGvBtB,EAAAa,UAAAuB,cAAR,WACI,IAAIkB,EAASpD,KAAKD,QAAQc,KAAK,yCAAyCW,MACxExB,KAAKY,eAAegB,SAAS,UAC7B5B,KAAKY,eAAe6C,OAAO,WAAaL,GAAQzB,YAAY,UAC9C,GAAVyB,EACApD,KAAKD,QAAQ6B,SAAS,YAEtB5B,KAAKD,QAAQ4B,YAAY,aAIzB7B,EAAAa,UAAAP,iBAAR,WAAA,IAAAqB,EAAAzB,KACIA,KAAKD,QAAQgC,GAAG,SAAU,gCAAiC,SAACtB,EAAIW,GACvDF,EAAET,EAAGiD,eAAeH,KAAK,aAG9B9B,EAAKS,gBACDd,IAAsB,IAAdA,EAAKuC,MAGjBlC,EAAK1B,QAAQ6B,SAAS,gBAE1B5B,KAAKD,QAAQc,KAAK,iCAAiC+C,QAAQ,SAAU,CAACD,MAAQ,IAE9E3D,KAAKD,QAAQgC,GAAG,eAAgB,kBAAmB,SAACtB,GACiB,EAA7DS,EAAET,EAAGiD,eAAeG,QAAQ,wBAAwBC,QAGxDrC,EAAK1B,QAAQ6B,SAAS,eAG1B5B,KAAKD,QAAQgC,GAAG,wBAAyB,wBAAyB,WAC9DN,EAAK1B,QAAQ6B,SAAS,eAG1B5B,KAAKD,QAAQgC,GAAG,QAAS,iBAAkB/B,KAAKmD,WAAWY,KAAK/D,OAChEA,KAAKD,QAAQgC,GAAG,QAAS,kBAAmB/B,KAAKkD,eAAea,KAAK/D,QAGjEF,EAAAa,UAAAL,gBAAR,WAAA,IAAAmB,EAAAzB,KACIA,KAAKD,QAAQgC,GAAG,wBAAyB,iBAAkB,WACvDN,EAAK1B,QAAQ6B,SAAS,aACW,OAA7BH,EAAKT,eAAeQ,MACpBC,EAAK1B,QAAQc,KAAK,aAAac,YAAY,UAE3CF,EAAK1B,QAAQc,KAAK,aAAae,SAAS,YAGhD5B,KAAKD,QAAQc,KAAK,aAAae,SAAS,WAGpC9B,EAAAa,UAAAJ,gBAAR,WAAA,IAAAkB,EAAAzB,KACIA,KAAKD,QAAQc,KAAK,oCAAoCmD,OAAO,SAACvD,GACtDS,EAAET,EAAGwD,QAAQV,KAAK,WAClB9B,EAAK1B,QAAQc,KAAK,6BAA6Bc,YAAY,UAE3DF,EAAK1B,QAAQc,KAAK,6BAA6Be,SAAS,YAG5D5B,KAAKD,QAAQc,KAAK,oCAAoC0C,KAAK,WAC3DvD,KAAKD,QAAQc,KAAK,6BAA6Bc,YAAY,UAE3D3B,KAAKD,QAAQc,KAAK,6BAA6Be,SAAS,WAIxD9B,EAAAa,UAAAwB,qBAAR,WACI,IAAI+B,EAAelE,KAAKD,QAAQc,KAAK,qCACrCqD,EAAa,GAAGC,UAAYD,EAAa,GAAGE,cAGxCtE,EAAAa,UAAA0D,cAAR,WAAA,IAAA5C,EAAAzB,KACQsE,EAAiBtE,KAAKD,QAAQc,KAAK,wBACnCqD,EAAeI,EAAezD,KAAK,gBACnC0D,EAAOD,EAAezD,KAAK,YAAYW,MAE/B,IAAR+C,GAAcvE,KAAKC,gBAIvBD,KAAKC,eAAgB,EACrBiB,EAAEsB,KAAKxC,KAAKqB,QAAS,CACjBmD,aAAcD,EACdE,MAAOzE,KAAKuB,MACb,SAACd,GACA,GAAIA,EAAGiE,QAAS,CACZ,IAAIC,EAAU,GACVlE,EAAGmE,QAAQC,UACXF,EAAU,mCAAqClE,EAAGmE,QAAQC,QAAU,iCACpEF,GAAW,4DAEf,IAAIG,EAAW5D,EAAE,mEAAqEyD,EAAU,kEAChGG,EAASjE,KAAK,SAAS0D,KAAK9D,EAAGmE,QAAQG,eACvCD,EAASjE,KAAK,SAAS0D,KAAK9D,EAAGmE,QAAQI,UACvCF,EAASjE,KAAK,YAAY0D,KAAK9D,EAAGmE,QAAQL,MAC1CO,EAAS1D,KAAK,KAAMX,EAAGmE,QAAQK,IAC/Bf,EAAarB,OAAOiC,GACpBR,EAAezD,KAAK,YAAYW,IAAI,IACpC0C,EAAa,GAAGC,UAAYD,EAAa,GAAGE,kBAE5CpB,MAAM,mBAAqBkC,KAAKC,UAAU1E,IAE9CgB,EAAKxB,eAAgB,IACtBgD,KAAK,WACJD,MAAM,kBACNvB,EAAKxB,eAAgB,MAIrBH,EAAAa,UAAAyE,WAAR,SAAmBN,GACf5D,EAAEsB,KAAKsC,EAASjE,KAAK,eAAeO,KAAK,OAAQ,CAC7CqD,MAASzE,KAAKuB,KACd0D,GAAMH,EAAS1D,KAAK,OACrB,SAACqB,GACIA,EAAa,QACbqC,EAASlC,SAETI,MAAM,UAAYP,EAAW,SAElC4C,MAAM,WACLrC,MAAM,wBAINlD,EAAAa,UAAAN,gBAAR,WAAA,IAAAoB,EAAAzB,KACIA,KAAKD,QAAQgC,GAAG,QAAS,8BAA+B,WACpDN,EAAK4C,kBAETrE,KAAKmC,uBAELnC,KAAKD,QAAQgC,GAAG,WAAY,gCAAiC,SAACtB,GACtDA,EAAG6E,cAAuB,SAAqC,KAAhC7E,EAAG6E,cAAuB,SACzD7D,EAAK4C,kBAIbrE,KAAKD,QAAQgC,GAAG,QAAS,cAAe,SAACtB,GACrCgB,EAAK2D,WAAWlE,EAAET,EAAGiD,eAAeG,QAAQ,YAAY0B,YAGpEzF,EA1QA,GAAa0F,EAAA1F,wBAAAA","file":"ChangeProposedProcedure.js","sourcesContent":["const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY = 22;\nconst STATUS_CUSTOM_STRING = 23;\n\nexport class ChangeProposedProcedure {\n    private $openerBtn: JQuery;\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private csrf: string;\n    private savingComment: boolean = false;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initOpener();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.initExplanation();\n        $widget.submit(ev => ev.preventDefault());\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('input[name=votingBlockId]');\n        this.$openerBtn = $('.proposedChangesOpener button');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val();\n    }\n\n    private initOpener() {\n        this.$openerBtn.click(() => {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '1');\n        });\n        this.$widget.on('click', '.closeBtn', () => {\n            this.$widget.addClass('hidden');\n            this.$openerBtn.removeClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '0');\n        });\n\n        if (localStorage.getItem('proposed_procedure_enabled') === '1') {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n        } else {\n            this.$widget.addClass('hidden');\n        }\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.initExplanation();\n        this.$widget.find('.newBlock').addClass('hidden');\n        this.$widget.find('.selectlist').selectlist();\n    }\n\n    private setGlobalProposedStr(html: string) {\n        $(\".motionData .proposedStatusRow .str\").html(html);\n    }\n\n    private performCallWithReload(data: object) {\n        data['_csrf'] = this.csrf;\n\n        $.post(this.saveUrl, data, (ret) => {\n            if (ret['success']) {\n                let $content = $(ret['html']);\n                this.$widget.children().remove();\n                this.$widget.append($content.children());\n                this.reinitAfterReload();\n                this.$widget.addClass('showSaved').removeClass('isChanged');\n                if (ret['proposalStr']) {\n                    this.setGlobalProposedStr(ret['proposalStr']);\n                }\n                window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n            } else if (ret['error']) {\n                alert(ret['error']);\n            } else {\n                alert('An error ocurred');\n            }\n        }).fail(() => {\n            alert('Could not save');\n        });\n    }\n\n    private notifyProposer() {\n        this.performCallWithReload({\n            'notifyProposer': '1'\n        });\n    }\n\n    private saveStatus() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY) {\n            data['proposalComment'] = this.$widget.find('input[name=obsoletedByAmendment]').val();\n        }\n        if (newVal == STATUS_CUSTOM_STRING) {\n            data['proposalComment'] = this.$widget.find('input[name=statusCustomStr]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            data['proposalExplanation'] = this.$widget.find('textarea[name=proposalExplanation]').val();\n        }\n\n        this.performCallWithReload(data);\n    }\n\n    private statusChanged() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal).removeClass('hidden');\n        if (newVal == 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change keyup', 'input, textarea', (ev) => {\n            if ($(ev.currentTarget).parents('.proposalCommentForm').length > 0) { // The comment textfield\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('changed.fu.selectlist', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n        this.$widget.on('click', '.notifyProposer', this.notifyProposer.bind(this));\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('changed.fu.selectlist', '#votingBlockId', () => {\n            this.$widget.addClass('isChanged');\n            if (this.$votingBlockId.val() == 'NEW') {\n                this.$widget.find(\".newBlock\").removeClass('hidden');\n            } else {\n                this.$widget.find(\".newBlock\").addClass('hidden');\n            }\n        });\n        this.$widget.find('.newBlock').addClass('hidden');\n    }\n\n    private initExplanation() {\n        this.$widget.find('input[name=setPublicExplanation]').change((ev) => {\n            if ($(ev.target).prop('checked')) {\n                this.$widget.find('section.publicExplanation').removeClass('hidden');\n            } else {\n                this.$widget.find('section.publicExplanation').addClass('hidden');\n            }\n        });\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            this.$widget.find('section.publicExplanation').removeClass('hidden');\n        } else {\n            this.$widget.find('section.publicExplanation').addClass('hidden');\n        }\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private doSaveComment() {\n        let $commentWidget = this.$widget.find('.proposalCommentForm'),\n            $commentList = $commentWidget.find('.commentList'),\n            text = $commentWidget.find('textarea').val();\n\n        if (text == '' || this.savingComment) {\n            return;\n        }\n\n        this.savingComment = true;\n        $.post(this.saveUrl, {\n            writeComment: text,\n            _csrf: this.csrf\n        }, (ev) => {\n            if (ev.success) {\n                let delHtml = '';\n                if (ev.comment.delLink) {\n                    delHtml = '<button type=\"button\" data-url=\"' + ev.comment.delLink + '\" class=\"btn-link delComment\">';\n                    delHtml += '<span class=\"glyphicon glyphicon-trash\"></span></button>';\n                }\n                let $comment = $('<li class=\"comment\"><div class=\"header\"><div class=\"date\"></div>' + delHtml + '<div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                $comment.find('.date').text(ev.comment.dateFormatted);\n                $comment.find('.name').text(ev.comment.username);\n                $comment.find('.comment').text(ev.comment.text);\n                $comment.data('id', ev.comment.id);\n                $commentList.append($comment);\n                $commentWidget.find('textarea').val('');\n                $commentList[0].scrollTop = $commentList[0].scrollHeight;\n            } else {\n                alert('Could not save: ' + JSON.stringify(ev));\n            }\n            this.savingComment = false;\n        }).fail(() => {\n            alert('Could not save');\n            this.savingComment = false;\n        });\n    }\n\n    private delComment($comment: JQuery) {\n        $.post($comment.find(\".delComment\").data(\"url\"), {\n            \"_csrf\": this.csrf,\n            \"id\": $comment.data(\"id\"),\n        }, (ret) => {\n            if (ret['success']) {\n                $comment.remove();\n            } else {\n                alert(\"Error: \" + ret['error']);\n            }\n        }).catch(() => {\n            alert(\"An error occurred\");\n        });\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            this.doSaveComment();\n        });\n        this.commentsScrollBottom();\n\n        this.$widget.on('keypress', '.proposalCommentForm textarea', (ev) => {\n            if (ev.originalEvent['metaKey'] && ev.originalEvent['keyCode'] === 13) {\n                this.doSaveComment();\n            }\n        });\n\n        this.$widget.on('click', '.delComment', (ev) => {\n            this.delComment($(ev.currentTarget).parents(\".comment\").first());\n        });\n    }\n}\n"]}