{"version":3,"sources":["backend/MotionTypeCreate.js","backend/MotionTypeCreate.ts"],"names":["define","require","exports","Object","defineProperty","value","MotionTypeCreate","constructor","$form","this","$inputSingle","find","$inputPlural","$inputCta","$inputPrefix","on","ev","$","currentTarget","data","$presets","$selected","filter","parents","first","val"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,sBAAmB,ECH/BJ,EAAAI,iBAAA,MAOI,WAAAC,CAAoBC,GAAAC,KAAAD,MAAAA,EAChBC,KAAKC,aAAeF,EAAMG,KAAK,sBAC/BF,KAAKG,aAAeJ,EAAMG,KAAK,oBAC/BF,KAAKI,UAAYL,EAAMG,KAAK,oBAC5BF,KAAKK,aAAeN,EAAMG,KAAK,qBAE/BF,KAAKC,aAAaK,GAAG,kBAAmBC,IACpCC,EAAED,EAAGE,eAAeC,KAAK,UAAW,IAAI,IAE5CV,KAAKG,aAAaG,GAAG,kBAAmBC,IACpCC,EAAED,EAAGE,eAAeC,KAAK,UAAW,IAAI,IAE5CV,KAAKI,UAAUE,GAAG,kBAAmBC,IACjCC,EAAED,EAAGE,eAAeC,KAAK,UAAW,IAAI,IAE5CV,KAAKK,aAAaC,GAAG,kBAAmBC,IACpCC,EAAED,EAAGE,eAAeC,KAAK,UAAW,IAAI,IAG5CV,KAAKW,SAAWZ,EAAMG,KAAK,8BAC3BF,KAAKW,SAASL,GAAG,UAAU,KACvB,MAAMM,EAAYZ,KAAKW,SAASE,OAAO,YAAYC,QAAQ,eAAeC,QAChC,MAAtCf,KAAKC,aAAaS,KAAK,YAAsBE,EAAUF,KAAK,iBAC5DV,KAAKC,aAAae,IAAIJ,EAAUF,KAAK,iBAEC,MAAtCV,KAAKG,aAAaO,KAAK,YAAsBE,EAAUF,KAAK,iBAC5DV,KAAKG,aAAaa,IAAIJ,EAAUF,KAAK,iBAEF,MAAnCV,KAAKI,UAAUM,KAAK,YAAsBE,EAAUF,KAAK,cACzDV,KAAKI,UAAUY,IAAIJ,EAAUF,KAAK,cAEI,MAAtCV,KAAKK,aAAaK,KAAK,YACvBV,KAAKK,aAAaW,IAAIJ,EAAUF,KAAK,gBDFrC,GCKZ,EDAJ","file":"MotionTypeCreate.js","sourcesContent":[null,"export class MotionTypeCreate {\n    private $inputSingle: JQuery;\n    private $inputPlural: JQuery;\n    private $inputCta: JQuery;\n    private $inputPrefix: JQuery;\n    private $presets: JQuery;\n\n    constructor(private $form: JQuery) {\n        this.$inputSingle = $form.find('#typeTitleSingular');\n        this.$inputPlural = $form.find('#typeTitlePlural');\n        this.$inputCta = $form.find('#typeCreateTitle');\n        this.$inputPrefix = $form.find('#typeMotionPrefix');\n\n        this.$inputSingle.on('keyup keypress', (ev) => {\n            $(ev.currentTarget).data('changed', '1');\n        });\n        this.$inputPlural.on('keyup keypress', (ev) => {\n            $(ev.currentTarget).data('changed', '1');\n        });\n        this.$inputCta.on('keyup keypress', (ev) => {\n            $(ev.currentTarget).data('changed', '1');\n        });\n        this.$inputPrefix.on('keyup keypress', (ev) => {\n            $(ev.currentTarget).data('changed', '1');\n        });\n\n        this.$presets = $form.find(\"input[name=\\\"type[preset]\\\"]\");\n        this.$presets.on('change', () => {\n            const $selected = this.$presets.filter(\":checked\").parents(\".typePreset\").first();\n            if (this.$inputSingle.data('changed') !== '1' && $selected.data('label-single')) {\n                this.$inputSingle.val($selected.data('label-single'));\n            }\n            if (this.$inputPlural.data('changed') !== '1' && $selected.data('label-plural')) {\n                this.$inputPlural.val($selected.data('label-plural'));\n            }\n            if (this.$inputCta.data('changed') !== '1' && $selected.data('label-cta')) {\n                this.$inputCta.val($selected.data('label-cta'));\n            }\n            if (this.$inputPrefix.data('changed') !== '1') {\n                this.$inputPrefix.val($selected.data('label-prefix'));\n            }\n        });\n    }\n}\n"]}