define(["require","exports"],(function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserAdminCreate=void 0;t.UserAdminCreate=class{constructor(e){this.$el=e,this.lastGroupAssignmentWasAutomatical=!0,this.element=e[0],this.initAddMultiple(),this.initAddSingleInit(),this.initAddSingleShow()}initAddMultiple(){this.element.querySelectorAll(".addMultipleOpener .addUsersOpener").forEach((e=>{e.addEventListener("click",(e=>{const t=e.currentTarget.getAttribute("data-type");this.element.querySelectorAll(".addUsersByLogin").forEach((e=>{e.classList.add("hidden")})),this.element.querySelector(".addUsersByLogin."+t).classList.remove("hidden")}))})),this.element.querySelectorAll(".addUsersByLogin.multiuser").forEach((e=>{e.addEventListener("submit",this.checkMultipleSubmit.bind(this))}))}validateEmailText(e){return-1===e.indexOf("%ACCOUNT%")?(bootbox.alert(__t("admin","emailMissingCode")),!1):-1!==e.indexOf("%LINK%")||(bootbox.alert(__t("admin","emailMissingLink")),!1)}checkMultipleSubmit(e){const t=this.element.querySelector(".addUsersByLogin.samlWW"),i=this.element.querySelector(".addUsersByLogin.email"),s=!!this.element.querySelector("#emailText");if(i&&!i.classList.contains("hidden")){if(s){const t=this.element.querySelector("#emailText").value;if(!this.validateEmailText(t))return void e.preventDefault()}let t=this.element.querySelector("#emailAddresses").value.split("\n"),i=this.element.querySelector("#names").value.split("\n");1==t.length&&""==t[0]&&(e.preventDefault(),bootbox.alert(__t("admin","emailMissingTo"))),t.length!=i.length&&(bootbox.alert(__t("admin","emailNumberMismatch")),e.preventDefault())}t&&!t.classList.contains("hidden")&&""===this.element.querySelector("#samlWW").value&&(e.preventDefault(),bootbox.alert(__t("admin","emailMissingUsername")))}initAddSingleInit(){const e=this.element.querySelector(".addSingleInit"),t=this.element.querySelector(".adminTypeSelect"),i=this.element.querySelector(".inputEmail"),s=this.element.querySelector(".inputUsername"),n=this.element.querySelector(".welcomeEmail");t.addEventListener("change",(()=>{"email"===t.value?(i.classList.remove("hidden"),s.classList.add("hidden"),i.required=!0,s.required=!1,n&&n.classList.remove("hidden")):(n&&n.classList.add("hidden"),i.classList.add("hidden"),s.classList.remove("hidden"),i.required=!1,s.required=!0)})),e.addEventListener("submit",(n=>{n.preventDefault(),n.stopPropagation();const r={_csrf:document.querySelector("head meta[name=csrf-token]").getAttribute("content"),type:t.value,username:""};"email"===t.value?r.username=i.value:r.username=s.value,r.username&&$.post(e.action,r,(e=>{this.showAddSingleShowFromResponse(e,r.type,r.username)})).catch((function(e){alert(e.responseText)}))}))}showAddSingleShowFromResponse(e,t,i){const s=this.element.querySelector(".alreadyMember"),n=this.element.querySelector(".addUsersByLogin.singleuser");if(e.exists&&e.already_member)return s.classList.remove("hidden"),void n.classList.add("hidden");n.classList.remove("hidden"),s.classList.add("hidden"),this.element.querySelector("input[name=authType]").value=t,this.element.querySelector("input[name=authUsername]").value=i,this.element.querySelector("#addSelectOrganization")&&(e.exists&&e.organization?this.initOrganizationToUserGroup(e.organization):this.initOrganizationToUserGroup(null)),e.exists?(n.querySelectorAll(".showIfNew").forEach((e=>{e.classList.add("hidden")})),n.querySelector("#addUserPassword").removeAttribute("required")):(n.querySelectorAll(".showIfExists").forEach((e=>{e.classList.add("hidden")})),n.querySelector("#addSingleNameGiven").setAttribute("required",""),n.querySelector("#addSingleNameFamily").setAttribute("required",""),window.setTimeout((()=>{n.querySelector("input[name=nameGiven]").focus()}),1))}setAutoOrganizations(e){let t=[];this.organizationList.forEach((i=>{i.name===e&&(t=i.autoUserGroups)})),t.length>0?(this.element.querySelectorAll("input.userGroup").forEach((e=>{e.checked=t.indexOf(parseInt(e.value,10))>-1})),this.lastGroupAssignmentWasAutomatical=!0):this.lastGroupAssignmentWasAutomatical&&this.element.querySelectorAll("input.userGroup").forEach((e=>{e.checked=this.defaultOrganisations.indexOf(parseInt(e.value,10))>-1}))}initOrganizationToUserGroup(e){if(this.defaultOrganisations=[],this.element.querySelectorAll("input.userGroup").forEach((e=>{e.checked&&this.defaultOrganisations.push(parseInt(e.value,10)),e.addEventListener("change",(()=>this.lastGroupAssignmentWasAutomatical=!1))})),this.organizationList=JSON.parse(this.element.getAttribute("data-organisations")),e)this.setAutoOrganizations(e);else{const e=$("#addSelectOrganization");e.selectize({create:!0,render:{option_create:(e,t)=>'<div class="create"><strong>'+t(e.input)+"</strong></div>"}}),e.on("change",(()=>{this.setAutoOrganizations(e.val())}))}}initAddSingleShow(){const e=this.element.querySelector(".addUsersByLogin.singleuser"),t=e.querySelector("#addSingleGeneratePassword"),i=e.querySelector("#addSingleSendEmail"),s=e.querySelector("#addSingleEmailText"),n=e.querySelector("#addUserPassword"),r=()=>{t.checked?(n.classList.add("hidden"),n.removeAttribute("required")):(n.classList.remove("hidden"),n.setAttribute("required",""))};t.addEventListener("change",r),r();const a=()=>{i.checked?s.classList.remove("hidden"):s.classList.add("hidden")};i.addEventListener("change",a),a(),e.addEventListener("submit",(e=>{if(i){const t=s.value;if(!this.validateEmailText(t))return void e.preventDefault()}}))}}}));
//# sourceMappingURL=UserAdminCreate.js.map
