{"version":3,"sources":["backend/MoveMotion.js","backend/MoveMotion.ts"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","define","require","exports","Object","defineProperty","MoveMotion","constructor","$form","checkBackend","data","initCopyMove","initTarget","initConsultation","initButtonEnabled","find","on","val","addClass","removeClass","$target","selected","filter","rebuildMotionTypes","trigger","$","bind","consultationId","isPrefixAvailable","prefix","operation","consultation","get","checkType","newMotionPrefix","newConsultationId","res","success","rebuildButtonEnabled","isEnabled","length","parseInt","prop"],"mappings":"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","file":"MoveMotion.js","sourcesContent":[null,"export class MoveMotion {\n    private checkBackend: string;\n\n    constructor(private $form: JQuery) {\n        this.checkBackend = $form.data('check-backend');\n        this.initCopyMove();\n        this.initTarget();\n        this.initConsultation();\n        this.initButtonEnabled();\n    }\n\n    private initCopyMove() {\n        this.$form.find('input[name=operation]').on(\"change\", () => {\n            if (this.$form.find('input[name=operation]:checked').val() === 'copynoref') {\n                this.$form.find('.labelTargetMove').addClass('hidden');\n                this.$form.find('.labelTargetCopy').removeClass('hidden');\n                this.$form.find('.targetSame').removeClass('hidden');\n            } else {\n                this.$form.find('.labelTargetMove').removeClass('hidden');\n                this.$form.find('.labelTargetCopy').addClass('hidden');\n                this.$form.find('.targetSame').addClass('hidden');\n            }\n        });\n    }\n\n    private initTarget() {\n        const $target = this.$form.find(\"input[name=target]\");\n        $target.on(\"change\", () => {\n            const selected = $target.filter(\":checked\").val();\n            if (selected === \"agenda\") {\n                this.$form.find(\".moveToAgendaItem\").removeClass('hidden');\n            } else {\n                this.$form.find(\".moveToAgendaItem\").addClass('hidden');\n            }\n            if (selected === \"consultation\") {\n                this.$form.find(\".moveToConsultationItem\").removeClass('hidden');\n            } else {\n                this.$form.find(\".moveToConsultationItem\").addClass('hidden');\n            }\n\n            this.rebuildMotionTypes();\n        }).trigger(\"change\");\n    }\n\n    private initConsultation() {\n        $(\"#consultationId\").on(\"change\", this.rebuildMotionTypes.bind(this));\n    }\n\n    private rebuildMotionTypes() {\n        const consultationId = $(\"#consultationId\").val();\n        $(\".moveToMotionTypeId\").addClass(\"hidden\");\n        if (this.$form.find(\"input[name=target]:checked\").val() === \"consultation\") {\n            $(\".moveToMotionTypeId\" + consultationId).removeClass(\"hidden\");\n        }\n    }\n\n    private isPrefixAvailable(prefix: string, operation: string, consultation: number): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            return $.get(this.checkBackend, {\n                checkType: 'prefix',\n                operation,\n                newMotionPrefix: prefix,\n                newConsultationId: consultation\n            }).then(res => {\n                resolve(res.success);\n            });\n        });\n    }\n\n    private async rebuildButtonEnabled() {\n        let isEnabled = true;\n\n        let consultationId;\n        if (this.$form.find('input[name=target]:checked').val() === 'consultation' && this.$form.find('[name=consultation]').length > 0) {\n            consultationId = parseInt(this.$form.find('[name=consultation]').val() as string);\n        } else {\n            consultationId = null;\n        }\n\n        const prefixIsAvailable = await this.isPrefixAvailable(\n            this.$form.find('#motionTitlePrefix').val() as string,\n            this.$form.find('input[name=operation]:checked').val() as string,\n            consultationId\n        );\n        if (prefixIsAvailable) {\n            this.$form.find(\".prefixAlreadyTaken\").addClass(\"hidden\");\n        } else {\n            this.$form.find(\".prefixAlreadyTaken\").removeClass(\"hidden\");\n            isEnabled = false;\n        }\n\n        if (!this.$form.find('input[name=operation]:checked').val()) {\n            isEnabled = false;\n        }\n        if (!this.$form.find('input[name=target]:checked').val()) {\n            isEnabled = false;\n        }\n\n        this.$form.find(\"button[type=submit]\").prop(\"disabled\", !isEnabled);\n    }\n\n    private initButtonEnabled() {\n        this.$form.find('#motionTitlePrefix').on('change keyup', this.rebuildButtonEnabled.bind(this));\n        this.$form.find('input[name=operation]').on('change', this.rebuildButtonEnabled.bind(this));\n        this.$form.find('input[name=target]').on('change', this.rebuildButtonEnabled.bind(this));\n        $(\"#consultationId\").on(\"change\", this.rebuildButtonEnabled.bind(this));\n        this.rebuildButtonEnabled();\n    }\n}\n"]}