{"version":3,"sources":["backend/UserAdmin.js","backend/UserAdmin.ts"],"names":["define","require","exports","Object","defineProperty","value","UserAdmin","constructor","$element","this","element","createVueWidget","$","tooltip","vueEl","querySelector","userSaveUrl","getAttribute","initUsersJson","initGroupsJson","pollUrl","urlUserLog","urlUserGroupLog","permissionGlobalEdit","userWidgetComponent","widget","Vue","createApp","template","data","usersJson","users","groupsJson","groups","csrf","document","pollingId","computed","methods","_performOperation","additionalProps","postData","_csrf","assign","post","msg_success","bootbox","alert","msg_error","setUserGroups","catch","err","responseText","saveUser","userId","nameGiven","nameFamily","organization","op","removeUser","user","id","editUser","$refs","open","JSON","stringify","createUserGroup","groupName","removeUserGroup","group","groupId","reloadData","get","console","error","startPolling","window","setInterval","beforeUnmount","clearInterval","created","parse","config","compilerOptions","whitespace","mount"],"mappings":"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","file":"UserAdmin.js","sourcesContent":[null,"declare var Vue: any;\n\nexport class UserAdmin {\n    private widget;\n    private element: HTMLElement;\n\n    constructor($element: JQuery) {\n        this.element = $element[0];\n        this.createVueWidget();\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    private createVueWidget() {\n        const vueEl = this.element.querySelector(\".userAdmin\");\n        const userSaveUrl = this.element.getAttribute('data-url-user-save');\n        const initUsersJson = this.element.getAttribute('data-users');\n        const initGroupsJson = this.element.getAttribute('data-groups');\n        const pollUrl = this.element.getAttribute('data-url-poll');\n        const urlUserLog = this.element.getAttribute('data-url-user-log');\n        const urlUserGroupLog = this.element.getAttribute('data-url-user-group-log');\n        const permissionGlobalEdit = (this.element.getAttribute('data-permission-global-edit') === '1');\n\n        let userWidgetComponent;\n\n        this.widget = Vue.createApp({\n            template: `<div class=\"adminUsers\">\n                <user-edit-widget\n                    :groups=\"groups\"\n                    :permissionGlobalEdit=\"permissionGlobalEdit\"\n                    @save-user=\"saveUser\"\n                    ref=\"user-edit-widget\"\n                ></user-edit-widget>\n                <user-admin-widget :users=\"users\"\n                                   :groups=\"groups\"\n                                   :urlUserLog=\"urlUserLog\"\n                                   :urlUserGroupLog=\"urlUserGroupLog\"\n                                   @remove-user=\"removeUser\"\n                                   @create-user-group=\"createUserGroup\"\n                                   @remove-group=\"removeUserGroup\"\n                                   @edit-user=\"editUser\"\n                                   ref=\"user-admin-widget\"\n                ></user-admin-widget>\n            </div>`,\n            data() {\n                return {\n                    usersJson: null,\n                    users: null,\n                    groupsJson: null,\n                    groups: null,\n                    csrf: document.querySelector('head meta[name=csrf-token]').getAttribute('content'),\n                    pollingId: null,\n                    urlUserLog,\n                    urlUserGroupLog,\n                    permissionGlobalEdit,\n                };\n            },\n            computed: {\n            },\n            methods: {\n                _performOperation: function (additionalProps) {\n                    let postData = {\n                        _csrf: this.csrf,\n                    };\n                    postData = Object.assign(postData, additionalProps);\n                    const widget = this;\n                    $.post(userSaveUrl, postData, function (data) {\n                        if (data.msg_success) {\n                            bootbox.alert(data.msg_success);\n                        }\n                        if (data.msg_error) {\n                            bootbox.alert(data.msg_error);\n                        } else {\n                            widget.setUserGroups(data.users, data.groups);\n                        }\n                    }).catch(function (err) {\n                        alert(err.responseText);\n                    });\n                },\n                saveUser(userId, groups, nameGiven, nameFamily, organization) {\n                    this._performOperation({\n                        op: 'save-user',\n                        userId,\n                        nameGiven,\n                        nameFamily,\n                        organization,\n                        groups\n                    });\n                },\n                removeUser(user) {\n                    this._performOperation({\n                        op: 'remove-user',\n                        userId: user.id\n                    });\n                },\n                editUser(user) {\n                    userWidgetComponent.$refs[\"user-edit-widget\"].open(user);\n                },\n                setUserGroups(users, groups) {\n                    const usersJson = JSON.stringify(users),\n                        groupsJson = JSON.stringify(groups);\n                    if (usersJson === this.usersJson && groupsJson === this.groupsJson) {\n                        return;\n                    }\n                    this.users = users;\n                    this.usersJson = usersJson;\n                    this.groups = groups;\n                    this.groupsJson = groupsJson;\n                },\n                createUserGroup(groupName) {\n                    this._performOperation({\n                        op: 'create-user-group',\n                        groupName\n                    });\n                },\n                removeUserGroup(group) {\n                    this._performOperation({\n                        op: 'remove-group',\n                        groupId: group.id\n                    });\n                },\n                reloadData: function () {\n                    const widget = this;\n                    $.get(pollUrl, function (data) {\n                        widget.setUserGroups(data.users, data.groups);\n                    }).catch(function (err) {\n                        console.error(\"Could not load user data from backend\", err);\n                    });\n                },\n                startPolling: function () {\n                    const widget = this;\n                    this.pollingId = window.setInterval(function () {\n                        widget.reloadData();\n                    }, 3000);\n                }\n            },\n            beforeUnmount() {\n                window.clearInterval(this.pollingId)\n            },\n            created() {\n                this.setUserGroups(JSON.parse(initUsersJson), JSON.parse(initGroupsJson));\n                this.startPolling()\n            }\n        });\n\n        this.widget.config.compilerOptions.whitespace = 'condense';\n        window['__initVueComponents'](this.widget, 'users');\n\n        userWidgetComponent = this.widget.mount(vueEl);\n\n        // Used by tests to control vue-select\n        window['userWidget'] = userWidgetComponent;\n    }\n}\n"]}