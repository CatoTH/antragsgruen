{"version":3,"sources":["backend/UserAdmin.js","backend/UserAdmin.ts"],"names":["define","require","exports","Object","defineProperty","value","UserAdmin","constructor","$element","this","element","createVueWidget","$","tooltip","vueEl","querySelector","userSaveUrl","getAttribute","initUsersJson","initGroupsJson","organisations","JSON","parse","pollUrl","urlUserLog","urlGroupLog","permissionGlobalEdit","nonMotionPrivileges","motionPrivileges","agendaItems","tags","motionTypes","privilegeDependencies","userWidgetComponent","widget","Vue","createApp","template","data","usersJson","users","groupsJson","groups","csrf","document","pollingId","computed","methods","_performOperation","postData","ajax","url","type","stringify","processData","contentType","dataType","headers","success","msg_success","bootbox","alert","msg_error","setUserGroups","catch","err","responseText","saveUser","userId","nameGiven","nameFamily","organization","ppReplyTo","newPassword","op","removeUser","user","id","editUser","$refs","open","createGroup","groupName","editGroup","group","saveGroup","groupId","groupTitle","privilegeList","removeUserGroup","editOrganisations","reloadData","get","console","error","startPolling","window","setInterval","beforeUnmount","clearInterval","created","config","compilerOptions","whitespace","mount"],"mappings":"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","file":"UserAdmin.js","sourcesContent":[null,"declare let Vue: any;\n\nexport class UserAdmin {\n    private widget;\n    private element: HTMLElement;\n\n    constructor($element: JQuery) {\n        this.element = $element[0];\n        this.createVueWidget();\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    private createVueWidget() {\n        const vueEl = this.element.querySelector(\".userAdmin\");\n        const userSaveUrl = this.element.getAttribute('data-url-user-save');\n        const initUsersJson = this.element.getAttribute('data-users');\n        const initGroupsJson = this.element.getAttribute('data-groups');\n        const organisations = JSON.parse(this.element.getAttribute('data-organisations'));\n        const pollUrl = this.element.getAttribute('data-url-poll');\n        const urlUserLog = this.element.getAttribute('data-url-user-log');\n        const urlGroupLog = this.element.getAttribute('data-url-user-group-log');\n        const permissionGlobalEdit = (this.element.getAttribute('data-permission-global-edit') === '1');\n        const nonMotionPrivileges = JSON.parse(this.element.getAttribute('data-non-motion-privileges'));\n        const motionPrivileges = JSON.parse(this.element.getAttribute('data-motion-privileges'));\n        const agendaItems = JSON.parse(this.element.getAttribute('data-agenda-items'));\n        const tags = JSON.parse(this.element.getAttribute('data-tags'));\n        const motionTypes = JSON.parse(this.element.getAttribute('data-motion-types'));\n        const privilegeDependencies = JSON.parse(this.element.getAttribute('data-privilege-dependencies'));\n\n        let userWidgetComponent;\n\n        this.widget = Vue.createApp({\n            template: `<div class=\"adminUsers\">\n                <user-edit-widget\n                    :groups=\"groups\"\n                    :organisations=\"organisations\"\n                    :permissionGlobalEdit=\"permissionGlobalEdit\"\n                    :urlUserLog=\"urlUserLog\"\n                    @save-user=\"saveUser\"\n                    ref=\"user-edit-widget\"\n                ></user-edit-widget>\n                <group-edit-widget\n                    :urlGroupLog=\"urlGroupLog\"\n                    :allPrivilegesGeneral=\"nonMotionPrivileges\"\n                    :allPrivilegesMotion=\"motionPrivileges\"\n                    :allPrivilegeDependencies=\"privilegeDependencies\"\n                    :allMotionTypes=\"motionTypes\"\n                    :allTags=\"tags\"\n                    :allAgendaItems=\"agendaItems\"\n                    @save-group=\"saveGroup\"\n                    ref=\"group-edit-widget\"\n                ></group-edit-widget>\n                <organisation-edit-widget\n                    :organisations=\"organisations\"\n                    :groups=\"groups\"\n                    ref=\"organisation-edit-widget\"\n                ></organisation-edit-widget>\n                <user-admin-widget\n                    :users=\"users\"\n                    :groups=\"groups\"\n                    :allPrivilegesGeneral=\"nonMotionPrivileges\"\n                    :allPrivilegesMotion=\"motionPrivileges\"\n                    @remove-user=\"removeUser\"\n                    @edit-user=\"editUser\"\n                    @save-user=\"saveUser\"\n                    @create-group=\"createGroup\"\n                    @edit-group=\"editGroup\"\n                    @remove-group=\"removeUserGroup\"\n                    @edit-organisations=\"editOrganisations\"\n                    ref=\"user-admin-widget\"\n                ></user-admin-widget>\n            </div>`,\n            data() {\n                return {\n                    usersJson: null,\n                    users: null,\n                    groupsJson: null,\n                    groups: null,\n                    csrf: document.querySelector('head meta[name=csrf-token]').getAttribute('content'),\n                    pollingId: null,\n                    organisations,\n                    urlUserLog,\n                    urlGroupLog,\n                    nonMotionPrivileges,\n                    motionPrivileges,\n                    privilegeDependencies,\n                    motionTypes,\n                    tags,\n                    agendaItems,\n                    permissionGlobalEdit,\n                };\n            },\n            computed: {\n            },\n            methods: {\n                _performOperation: function (postData) {\n                    const widget = this;\n                    $.ajax({\n                        url: userSaveUrl,\n                        type: \"POST\",\n                        data: JSON.stringify(postData),\n                        processData: false,\n                        contentType: \"application/json; charset=utf-8\",\n                        dataType: \"json\",\n                        headers: {\"X-CSRF-Token\": this.csrf},\n                        success: data => {\n                            if (data.msg_success) {\n                                bootbox.alert(data.msg_success);\n                            }\n                            if (data.msg_error) {\n                                bootbox.alert(data.msg_error);\n                            } else {\n                                widget.setUserGroups(data.users, data.groups);\n                            }\n                        }\n                    }).catch(function (err) {\n                        alert(err.responseText);\n                    })\n                },\n                saveUser(userId, groups, nameGiven, nameFamily, organization, ppReplyTo, newPassword) {\n                    this._performOperation({\n                        op: 'save-user',\n                        userId,\n                        nameGiven,\n                        nameFamily,\n                        organization,\n                        groups,\n                        ppReplyTo,\n                        newPassword\n                    });\n                },\n                removeUser(user) {\n                    this._performOperation({\n                        op: 'remove-user',\n                        userId: user.id\n                    });\n                },\n                editUser(user) {\n                    userWidgetComponent.$refs[\"user-edit-widget\"].open(user);\n                },\n                setUserGroups(users, groups) {\n                    const usersJson = JSON.stringify(users),\n                        groupsJson = JSON.stringify(groups);\n                    if (usersJson === this.usersJson && groupsJson === this.groupsJson) {\n                        return;\n                    }\n                    this.users = users;\n                    this.usersJson = usersJson;\n                    this.groups = groups;\n                    this.groupsJson = groupsJson;\n                },\n                createGroup(groupName) {\n                    this._performOperation({\n                        op: 'create-user-group',\n                        groupName\n                    });\n                },\n                editGroup(group) {\n                    userWidgetComponent.$refs[\"group-edit-widget\"].open(group);\n                },\n                saveGroup(groupId, groupTitle, privilegeList) {\n                    this._performOperation({\n                        op: 'save-group',\n                        groupId,\n                        groupTitle,\n                        privilegeList\n                    });\n                },\n                removeUserGroup(group) {\n                    this._performOperation({\n                        op: 'remove-group',\n                        groupId: group.id\n                    });\n                },\n                editOrganisations() {\n                    userWidgetComponent.$refs[\"organisation-edit-widget\"].open();\n                },\n                reloadData: function () {\n                    const widget = this;\n                    $.get(pollUrl, function (data) {\n                        widget.setUserGroups(data.users, data.groups);\n                    }).catch(function (err) {\n                        console.error(\"Could not load user data from backend\", err);\n                    });\n                },\n                startPolling: function () {\n                    const widget = this;\n                    this.pollingId = window.setInterval(function () {\n                        widget.reloadData();\n                    }, 3000);\n                }\n            },\n            beforeUnmount() {\n                window.clearInterval(this.pollingId)\n            },\n            created() {\n                this.setUserGroups(JSON.parse(initUsersJson), JSON.parse(initGroupsJson));\n                this.startPolling()\n            }\n        });\n\n        this.widget.config.compilerOptions.whitespace = 'condense';\n        window['__initVueComponents'](this.widget, 'users');\n\n        userWidgetComponent = this.widget.mount(vueEl);\n\n        // Used by tests to control vue-select\n        window['userWidget'] = userWidgetComponent;\n    }\n}\n"]}