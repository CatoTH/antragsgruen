{"version":3,"sources":["backend/MotionSupporterEdit.ts"],"names":["MotionSupporterEdit","$supporterHolder","this","$sortable","find","length","Sortable","create","draggable","$","click","ev","append","data","preventDefault","on","parents","first","remove","$fullTextHolder","lines","val","split","template","getNewElement","$rows","i","$row","eq","$newEl","$firstAffectedRow","parts","trim","select","focus","scrollintoview","exports"],"mappings":"yGAEA,IAAAA,EACI,SAAoBC,GAAAC,KAAAD,iBAAAA,EAChB,IAAIE,EAAYD,KAAKD,iBAAiBG,KAAK,QACpB,EAAnBD,EAAUE,QACVC,SAASC,OAAOJ,EAAU,GAAI,CAACK,UAAW,OAG9CC,EAAE,sBAAsBC,MAAM,SAAUC,GACpCR,EAAUS,OAAOH,EAAEP,MAAMW,KAAK,YAC9BF,EAAGG,mBAEPX,EAAUY,GAAG,QAAS,gBAAiB,SAAUJ,GAC7CA,EAAGG,iBACHL,EAAEP,MAAMc,QAAQ,MAAMC,QAAQC,WAGlC,IAAIC,EAAkBV,EAAE,mBACxBR,EAAiBG,KAAK,gBAAgBM,MAAM,WAexC,IAdA,IAAIU,EAAQD,EAAgBf,KAAK,YAAYiB,MAAMC,MAAM,KACrDC,EAAWd,EAAE,sBAAsBI,KAAK,WACxCW,EAAgB,WAEZ,IADA,IAAIC,EAAQtB,EAAUC,KAAK,QAClBsB,EAAI,EAAGA,EAAID,EAAMpB,OAAQqB,IAAK,CACnC,IAAIC,EAAOF,EAAMG,GAAGF,GACpB,GAAyC,IAArCC,EAAKvB,KAAK,kBAAkBiB,OAAoD,IAArCM,EAAKvB,KAAK,kBAAkBiB,MAAa,OAAOM,EAGnG,IAAIE,EAASpB,EAAEc,GAEf,OADApB,EAAUS,OAAOiB,GACVA,GAEXC,EAAoB,KACfJ,EAAI,EAAGA,EAAIN,EAAMf,OAAQqB,IAC9B,GAAgB,IAAZN,EAAMM,GAAV,CAGA,IAAIG,EAASL,IAEb,GADyB,MAArBM,IAA2BA,EAAoBD,GACH,EAA5CA,EAAOzB,KAAK,uBAAuBC,OAAY,CAC/C,IAAI0B,EAAQX,EAAMM,GAAGJ,MAAM,KAC3BO,EAAOzB,KAAK,uBAAuBiB,IAAIU,EAAM,GAAGC,QAC7B,EAAfD,EAAM1B,QACNwB,EAAOzB,KAAK,uBAAuBiB,IAAIU,EAAM,GAAGC,aAGpDH,EAAOzB,KAAK,uBAAuBiB,IAAID,EAAMM,IAGrDP,EAAgBf,KAAK,YAAY6B,SAASC,QAC1CJ,EAAkBK,oBAjDjBC,EAAApC,oBAAAA","file":"MotionSupporterEdit.js","sourcesContent":["declare let Sortable: any;\n\nexport class MotionSupporterEdit {\n    constructor(private $supporterHolder: JQuery) {\n        let $sortable = this.$supporterHolder.find(\"> ul\");\n        if ($sortable.length > 0) {\n            Sortable.create($sortable[0], {draggable: 'li'});\n        }\n\n        $(\".supporterRowAdder\").click(function (ev) {\n            $sortable.append($(this).data(\"content\"));\n            ev.preventDefault();\n        });\n        $sortable.on(\"click\", \".delSupporter\", function (ev) {\n            ev.preventDefault();\n            $(this).parents(\"li\").first().remove();\n        });\n\n        let $fullTextHolder = $(\"#fullTextHolder\");\n        $supporterHolder.find(\".fullTextAdd\").click(function () {\n            let lines = $fullTextHolder.find('textarea').val().split(\";\"),\n                template = $(\".supporterRowAdder\").data(\"content\"),\n                getNewElement = function () {\n                    let $rows = $sortable.find(\"> li\");\n                    for (let i = 0; i < $rows.length; i++) {\n                        let $row = $rows.eq(i);\n                        if ($row.find(\".supporterName\").val() == '' && $row.find(\".supporterOrga\").val() == '') return $row;\n                    }\n                    // No empty row found\n                    let $newEl = $(template);\n                    $sortable.append($newEl);\n                    return $newEl;\n                };\n            let $firstAffectedRow = null;\n            for (let i = 0; i < lines.length; i++) {\n                if (lines[i] == '') {\n                    continue;\n                }\n                let $newEl = getNewElement();\n                if ($firstAffectedRow == null) $firstAffectedRow = $newEl;\n                if ($newEl.find('input.supporterOrga').length > 0) {\n                    let parts = lines[i].split(',');\n                    $newEl.find('input.supporterName').val(parts[0].trim());\n                    if (parts.length > 1) {\n                        $newEl.find('input.supporterOrga').val(parts[1].trim());\n                    }\n                } else {\n                    $newEl.find('input.supporterName').val(lines[i]);\n                }\n            }\n            $fullTextHolder.find('textarea').select().focus();\n            $firstAffectedRow.scrollintoview();\n        });\n    }\n}\n"]}