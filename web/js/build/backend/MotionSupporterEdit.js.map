{"version":3,"sources":["backend/MotionSupporterEdit.js","backend/MotionSupporterEdit.ts"],"names":["define","require","exports","Object","defineProperty","value","MotionSupporterEdit","constructor","$supporterHolder","this","$sortable","find","length","Sortable","create","draggable","$","on","ev","append","data","preventDefault","parents","first","remove","$fullTextHolder","lines","val","split","template","getNewElement","$rows","i","$row","eq","$newEl","$firstAffectedRow","parts","name","shift","trim","orga","trigger","scrollintoview","$copier","clipboard","ClipboardJS","text","supporters","each","el","$el","push","replace","join","addClass","window","setTimeout","removeClass","alert","tooltip"],"mappings":"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","file":"MotionSupporterEdit.js","sourcesContent":[null,"declare let Sortable: any;\ndeclare let ClipboardJS: any;\n\nexport class MotionSupporterEdit {\n    constructor(private $supporterHolder: JQuery) {\n        let $sortable = this.$supporterHolder.find(\"> ul\");\n        if ($sortable.length > 0) {\n            Sortable.create($sortable[0], {draggable: 'li'});\n        }\n\n        $(\".supporterRowAdder\").on(\"click\", function (ev) {\n            $sortable.append($(this).data(\"content\"));\n            ev.preventDefault();\n        });\n        $sortable.on(\"click\", \".delSupporter\", function (ev) {\n            ev.preventDefault();\n            $(this).parents(\"li\").first().remove();\n        });\n\n        let $fullTextHolder = $(\"#fullTextHolder\");\n        $supporterHolder.find(\".fullTextAdd\").on(\"click\", () => {\n            let lines = ($fullTextHolder.find('textarea').val() as string).split(\";\"),\n                template = $(\".supporterRowAdder\").data(\"content\"),\n                getNewElement = function () {\n                    let $rows = $sortable.find(\"> li\");\n                    for (let i = 0; i < $rows.length; i++) {\n                        let $row = $rows.eq(i);\n                        if ($row.find(\".supporterName\").val() == '' && $row.find(\".supporterOrga\").val() == '') return $row;\n                    }\n                    // No empty row found\n                    let $newEl = $(template);\n                    $sortable.append($newEl);\n                    return $newEl;\n                };\n            let $firstAffectedRow = null;\n            for (let i = 0; i < lines.length; i++) {\n                if (lines[i] == '') {\n                    continue;\n                }\n                let $newEl = getNewElement();\n                if ($firstAffectedRow == null) $firstAffectedRow = $newEl;\n                let parts = lines[i].split(',');\n\n                let name = parts.shift();\n                $newEl.find('input.supporterName').val(name.trim());\n\n                if ($newEl.find('input.supporterOrga').length > 0 && parts.length > 0) {\n                    let orga = parts.shift();\n                    $newEl.find('input.supporterOrga').val(orga.trim());\n                }\n                if ($newEl.find('.colGender').length > 0 && parts.length > 0) {\n                    $newEl.find('.colGender').find('select').val(parts[0]);\n                }\n            }\n            $fullTextHolder.find('textarea').trigger('select').trigger('focus');\n            $firstAffectedRow.scrollintoview();\n        });\n\n        const $copier = $supporterHolder.find(\".fullTextCopy\");\n        const clipboard = new ClipboardJS($copier[0], {\n            text: function () {\n                let supporters = [];\n                $supporterHolder.find('.supporterRow').each((i, el) => {\n                    let $el = $(el),\n                        parts = [];\n                    if ($el.find(\".supporterName\").length) {\n                        parts.push(($el.find(\".supporterName\").val() as string).replace(/,/, ' ').replace(/;/, ' '));\n                    }\n                    if ($el.find(\".supporterOrga\").length) {\n                        parts.push(($el.find(\".supporterOrga\").val() as string).replace(/,/, ' ').replace(/;/, ' '));\n                    }\n                    if ($el.find(\".colGender\").length) {\n                        parts.push($el.find(\".colGender select\").val());\n                    }\n                    supporters.push(parts.join(','));\n                });\n                return supporters.join(\";\");\n            }\n        });\n        clipboard.on('success', () => {\n            $copier.addClass(\"done\");\n            window.setTimeout(() => {\n                $copier.removeClass(\"done\");\n            }, 1000);\n        });\n\n        clipboard.on('error', () => {\n            alert(\"Could not copy the URL to the clipboard\");\n        });\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n    }\n}\n"]}