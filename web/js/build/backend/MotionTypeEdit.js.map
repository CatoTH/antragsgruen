{"version":3,"sources":["backend/MotionTypeEdit.ts"],"names":["MotionTypeEdit","$supportType","$","on","selected","find","val","data","removeClass","addClass","trigger","tooltip","this","initSectionList","initDeadlines","prototype","change","ev","currentTarget","prop","each","i","el","datetimepicker","locale","initLinkedDeadlinePickers","$row","$from","$to","useCurrent","setErrorState","fromDate","toDate","date","isBefore","$deadlineHolder","addDeadlineRow","html","replace","$newRow","append","click","parents","remove","children","length","$list","newCounter","Sortable","create","handle","animation","preventDefault","$sectionHolder","first","delId","bootbox","confirm","__t","result","$li","parseInt","newStr","$newObj","$tab","dataNewCounter","$this","$ul","parent","focus"],"mappings":"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","file":"MotionTypeEdit.js","sourcesContent":["class MotionTypeEdit {\n    constructor() {\n        let $supportType = $('#typeSupportType');\n        $supportType.on('changed.fu.selectlist', () => {\n            let selected = $supportType.find('input').val();\n            let hasSupporters = $supportType.find(\"li[data-value=\\\"\" + selected + \"\\\"]\").data(\"has-supporters\");\n\n            if (hasSupporters) {\n                $('#typeMinSupportersRow').removeClass(\"hidden\");\n                $('#typeAllowMoreSupporters').removeClass(\"hidden\");\n            } else {\n                $('#typeMinSupportersRow').addClass(\"hidden\");\n                $('#typeAllowMoreSupporters').addClass(\"hidden\");\n            }\n        }).trigger('changed.fu.selectlist');\n\n        $('.deleteTypeOpener button').on('click', () => {\n            $('.deleteTypeForm').removeClass('hidden');\n            $('.deleteTypeOpener').addClass('hidden');\n        });\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n\n        this.initSectionList();\n        this.initDeadlines();\n    }\n\n    private initDeadlines() {\n        $('#deadlineFormTypeComplex input').change((ev) => {\n            if ($(ev.currentTarget).prop('checked')) {\n                $('.deadlineTypeSimple').addClass('hidden');\n                $('.deadlineTypeComplex').removeClass('hidden');\n            } else {\n                $('.deadlineTypeSimple').removeClass('hidden');\n                $('.deadlineTypeComplex').addClass('hidden');\n            }\n        }).trigger('change');\n\n        $('.datetimepicker').each((i, el) => {\n            $(el).datetimepicker({\n                locale: $(el).find(\"input\").data('locale')\n            });\n        });\n\n        const initLinkedDeadlinePickers = ($row) => {\n            let $from = $row.find(\".datetimepickerFrom\"),\n                $to = $row.find(\".datetimepickerTo\");\n            $from.datetimepicker({\n                locale: $from.find(\"input\").data('locale')\n            });\n            $to.datetimepicker({\n                locale: $to.find(\"input\").data('locale'),\n                useCurrent: false\n            });\n\n            const hasError = () => {\n                const fromDate = $from.data(\"DateTimePicker\").date(),\n                    toDate = $to.data(\"DateTimePicker\").date();\n\n                return (fromDate && toDate && toDate.isBefore(fromDate));\n            };\n\n            const setErrorState = () => {\n                if (hasError()) {\n                    $from.addClass(\"has-error\");\n                    $to.addClass(\"has-error\");\n                } else {\n                    $from.removeClass(\"has-error\");\n                    $to.removeClass(\"has-error\");\n                }\n            };\n\n            $from.on(\"dp.change\", setErrorState);\n            $to.on(\"dp.change\", setErrorState);\n        };\n\n        $('.deadlineEntry').each((i, el) => {\n            initLinkedDeadlinePickers($(el));\n        });\n\n        $('.deadlineHolder').each((i, el) => {\n            const $deadlineHolder = $(el),\n                addDeadlineRow = () => {\n                    let html = $('.deadlineRowTemplate').html();\n                    html = html.replace(/TEMPLATE/g, $deadlineHolder.data('type'));\n                    let $newRow = $(html);\n                    $deadlineHolder.find('.deadlineList').append($newRow);\n                    initLinkedDeadlinePickers($newRow);\n                };\n            $deadlineHolder.find('.deadlineAdder').click(addDeadlineRow);\n            $deadlineHolder.on('click', '.delRow', (ev) => {\n                $(ev.currentTarget).parents('.deadlineEntry').remove();\n            });\n            if ($deadlineHolder.find('.deadlineList').children().length === 0) {\n                addDeadlineRow();\n            }\n        });\n    }\n\n    private initSectionList() {\n        let $list = $('#sectionsList'),\n            newCounter = 0;\n\n        $list.data(\"sortable\", Sortable.create($list[0], {\n            handle: '.drag-handle',\n            animation: 150\n        }));\n        $list.on('click', 'a.remover', function (ev) {\n            ev.preventDefault();\n            let $sectionHolder = $(this).parents('li').first(),\n                delId = $sectionHolder.data('id');\n            bootbox.confirm(__t('admin', 'deleteMotionSectionConfirm'), function (result) {\n                if (result) {\n                    $('.adminTypeForm').append('<input type=\"hidden\" name=\"sectionsTodelete[]\" value=\"' + delId + '\">');\n                    $sectionHolder.remove();\n                }\n            });\n        });\n        $list.on('change', '.sectionType', function () {\n            let $li = $(this).parents('li').first(),\n                val = parseInt($(this).val());\n            $li.removeClass('title textHtml textSimple image tabularData');\n            if (val === 0) {\n                $li.addClass('title');\n            } else if (val === 1) {\n                $li.addClass('textSimple');\n            } else if (val === 2) {\n                $li.addClass('textHtml');\n            } else if (val === 3) {\n                $li.addClass('image');\n            } else if (val === 4) {\n                $li.addClass('tabularData');\n                if ($li.find('.tabularDataRow ul > li').length == 0) {\n                    $li.find('.tabularDataRow .addRow').click().click().click();\n                }\n            }\n        });\n        $list.find('.sectionType').trigger('change');\n        $list.on('change', '.maxLenSet', function () {\n            let $li = $(this).parents('li').first();\n            if ($(this).prop('checked')) {\n                $li.addClass('maxLenSet').removeClass('no-maxLenSet');\n            } else {\n                $li.addClass('no-maxLenSet').removeClass('maxLenSet');\n            }\n        });\n        $list.find('.maxLenSet').trigger('change');\n\n        $('.sectionAdder').on('click', function (ev) {\n            ev.preventDefault();\n            let newStr = $('#sectionTemplate').html();\n            newStr = newStr.replace(/#NEW#/g, 'new' + newCounter);\n            let $newObj = $(newStr);\n            $list.append($newObj);\n            newCounter = newCounter + 1;\n\n            $list.find('.sectionType').trigger('change');\n            $list.find('.maxLenSet').trigger('change');\n\n            let $tab = $newObj.find('.tabularDataRow ul');\n            $tab.data(\"sortable\", Sortable.create($tab[0], {\n                handle: '.drag-data-handle',\n                animation: 150\n            }));\n        });\n\n        let dataNewCounter = 0;\n        $list.on('click', '.tabularDataRow .addRow', function (ev) {\n            ev.preventDefault();\n            let $this = $(this),\n                $ul = $this.parent().find(\"ul\"),\n                $row = $($this.data('template').replace(/#NEWDATA#/g, 'new' + dataNewCounter));\n            dataNewCounter = dataNewCounter + 1;\n            $row.removeClass('no0').addClass('no' + $ul.children().length);\n            $ul.append($row);\n            $row.find('input').focus();\n        });\n\n        $list.on('click', '.tabularDataRow .delRow', function (ev) {\n            let $this = $(this);\n            ev.preventDefault();\n            bootbox.confirm(__t('admin', 'deleteDataConfirm'), function (result) {\n                if (result) {\n                    $this.parents(\"li\").first().remove();\n                }\n            });\n        });\n\n        $list.find('.tabularDataRow ul').each(function () {\n            let $this = $(this);\n            $this.data(\"sortable\", Sortable.create(this, {\n                handle: '.drag-data-handle',\n                animation: 150\n            }));\n        });\n    }\n}\n\n\nnew MotionTypeEdit();\n"]}