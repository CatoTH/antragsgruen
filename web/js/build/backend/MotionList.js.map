{"version":3,"sources":["backend/MotionList.js","backend/MotionList.ts"],"names":["define","require","exports","ResponsibilitySetter_1","Object","defineProperty","value","MotionList","constructor","this","initList","initExportRow","ResponsibilitySetter","$","on","ev","find","prop","preventDefault","onDeleteClicked","bind","$select","initiatorValues","data","datasets","name","source","q","cb","matches","substrRegex","RegExp","each","i","str","test","push","typeahead","hint","highlight","minLength","colResizable","liveDrag","postbackSafe","minWidth","$exportRow","stopPropagation","$dd","inactive","link","replace","attr","trigger","tooltip","$button","target","$form","parents","bootbox","confirm","__t","result","$input","append"],"mappings":"AAAAA,OAAO,CAAC,UAAW,UAAW,2BAA2B,SAAUC,EAASC,EAASC,GACjF,aACAC,OAAOC,eAAeH,EAAS,aAAc,CAAEI,OAAO,IACtDJ,EAAQK,gBAAa,ECDzBL,EAAAK,WAAA,MACI,WAAAC,GACIC,KAAKC,WACLD,KAAKE,gBACL,IAAIR,EAAAS,qBAAqBC,EAAE,qBAC/B,CAEQ,QAAAH,GACJG,EAAE,YAAYC,GAAG,SAAUC,IACvBF,EAAE,qBAAqBG,KAAK,mBAAmBC,KAAK,WAAW,GAC/DF,EAAGG,gBAAgB,IAEvBL,EAAE,aAAaC,GAAG,SAAUC,IACxBF,EAAE,qBAAqBG,KAAK,mBAAmBC,KAAK,WAAW,GAC/DF,EAAGG,gBAAgB,IAEvBL,EAAE,oBAAoBC,GAAG,QAASL,KAAKU,gBAAgBC,KAAKX,OAE5D,IAAIY,EAAUR,EAAE,oBACZS,EAAkBD,EAAQE,KAAK,UA4B/BC,EAA4C,CAAC,CAC7CC,KAAM,YACNC,OA7BU,SAAqBC,EAAGC,GAC9B,IAAIC,EAASC,EAGbD,EAAU,GAGVC,EAAc,IAAIC,OAAOJ,EAAG,KAI5Bd,EAAEmB,KAAKV,GAAiB,SAAUW,EAAGC,GAC7BJ,EAAYK,KAAKD,IAGjBL,EAAQO,KAAKF,EAErB,IAEAN,EAAGC,EACP,IAYJR,EAAQgB,UAViC,CACrCC,MAAM,EACNC,WAAW,EACXC,UAAW,GAOiBhB,GAEhCX,EAAE,qBAAqB4B,aAAa,CAChCC,UAAY,EACZC,cAAgB,EAChBC,SAAY,IAEpB,CAEQ,aAAAjC,GACJ,IAAIkC,EAAahC,EAAE,wBACnBgC,EAAW7B,KAAK,eAAeF,GAAG,SAAS,SAAUC,GACjDA,EAAG+B,iBACP,IACAD,EAAW7B,KAAK,uCAAuCgB,MAAK,WACxD,IAAIe,EAAMlC,EAAEJ,MASZsC,EAAI/B,KAAK,wBAAwBF,GAAG,UARlB,WACV,IAAIkC,EAAYD,EAAI/B,KAAK,wBAAwBC,KAAK,WAAa,EAAI,EACvE8B,EAAI/B,KAAK,iBAAiBgB,MAAK,WAC3B,IAAIiB,EAAOpC,EAAEJ,MAAMc,KAAK,YACxB0B,EAAOA,EAAKC,QAAQ,WAAYF,GAChCnC,EAAEJ,MAAM0C,KAAK,OAAQF,EACzB,GACJ,IACuDG,QAAQ,SACvE,IAEAP,EAAW7B,KAAK,2BAA2BqC,SAC/C,CAEQ,eAAAlC,CAAgBJ,GACpBA,EAAGG,iBACH,IAAIoC,EAAUzC,EAAEE,EAAGwC,QACfC,EAAQF,EAAQG,QAAQ,QAC5BC,QAAQC,QAAQC,IAAI,MAAO,gBAAgB,SAAUC,GACjD,GAAIA,EAAQ,CACR,IAAIC,EAASjD,EAAE,yBAAyBsC,KAAK,OAAQG,EAAQH,KAAK,SAASA,KAAK,QAASG,EAAQH,KAAK,UACtGK,EAAMO,OAAOD,GACbN,EAAMJ,QAAQ,SAClB,CACJ,GACJ,EDXJ","file":"MotionList.js","sourcesContent":[null,"import { ResponsibilitySetter } from './ResponsibilitySetter';\n\nexport class MotionList {\n    constructor() {\n        this.initList();\n        this.initExportRow();\n        new ResponsibilitySetter($(\".adminMotionTable\"));\n    }\n\n    private initList() {\n        $(\".markAll\").on(\"click\", (ev) => {\n            $(\".adminMotionTable\").find(\"input.selectbox\").prop(\"checked\", true);\n            ev.preventDefault();\n        });\n        $(\".markNone\").on(\"click\", (ev) => {\n            $(\".adminMotionTable\").find(\"input.selectbox\").prop(\"checked\", false);\n            ev.preventDefault();\n        });\n        $(\".deleteMarkedBtn\").on(\"click\", this.onDeleteClicked.bind(this));\n\n        let $select = $(\"#initiatorSelect\"),\n            initiatorValues = $select.data(\"values\"),\n            matcher = function findMatches(q, cb) {\n                let matches, substrRegex;\n\n                // an array that will be populated with substring matches\n                matches = [];\n\n                // regex used to determine if a string contains the substring `q`\n                substrRegex = new RegExp(q, \"i\");\n\n                // iterate through the pool of strings and for any string that\n                // contains the substring `q`, add it to the `matches` array\n                $.each(initiatorValues, function (i, str) {\n                    if (substrRegex.test(str)) {\n                        // the typeahead jQuery plugin expects suggestions to a\n                        // JavaScript object, refer to typeahead docs for more info\n                        matches.push(str);\n                    }\n                });\n\n                cb(matches);\n            };\n\n        let options: Twitter.Typeahead.Options = {\n            hint: true,\n            highlight: true,\n            minLength: 1\n        };\n        let datasets:Twitter.Typeahead.Dataset<any>[] = [{\n            name: \"supporter\",\n            source: matcher\n        }];\n\n        $select.typeahead<any>(options, datasets);\n\n        $('.adminMotionTable').colResizable({\n            'liveDrag': true,\n            'postbackSafe': true,\n            'minWidth': 30\n        });\n    }\n\n    private initExportRow() {\n        let $exportRow = $(\".motionListExportRow\");\n        $exportRow.find(\"li.checkbox\").on(\"click\", function (ev) {\n            ev.stopPropagation();\n        });\n        $exportRow.find(\".exportMotionDd, .exportAmendmentDd\").each(function () {\n            let $dd = $(this),\n                recalcLinks = function () {\n                    let inactive = ($dd.find(\"input[name=inactive]\").prop(\"checked\") ? 1 : 0);\n                    $dd.find(\".exportLink a\").each(function () {\n                        let link = $(this).data(\"href-tpl\");\n                        link = link.replace(\"INACTIVE\", inactive);\n                        $(this).attr(\"href\", link);\n                    });\n                };\n            $dd.find(\"input[type=checkbox]\").on(\"change\", recalcLinks).trigger(\"change\");\n        });\n\n        $exportRow.find('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    private onDeleteClicked(ev) {\n        ev.preventDefault();\n        let $button = $(ev.target),\n            $form = $button.parents(\"form\");\n        bootbox.confirm(__t(\"std\", \"del_confirm\"), function (result) {\n            if (result) {\n                let $input = $('<input type=\"hidden\">').attr(\"name\", $button.attr(\"name\")).attr(\"value\", $button.attr(\"value\"));\n                $form.append($input);\n                $form.trigger(\"submit\");\n            }\n        });\n    }\n}\n"]}