{"version":3,"sources":["backend/AppearanceEdit.ts"],"names":["AppearanceEdit","$form","this","initLogoUpload","initLayoutChooser","initTranslationService","initRestApi","$","tooltip","prototype","$logoRow","find","$uploadLabel","on","ev","preventDefault","src","currentTarget","attr","val","length","prepend","removeClass","text","data","path","split","filename","addClass","$inputs","$editLink","editLinkDefault","onChange","$selected","filter","first","replace","_this","prop","trigger","exports"],"mappings":"iIAEA,IAAAA,EAAA,WACI,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,EAChBC,KAAKC,iBACLD,KAAKE,oBACLF,KAAKG,yBACLH,KAAKI,cAELC,EAAE,2BAA2BC,UAgErC,OA7DYR,EAAAS,UAAAN,eAAR,WACI,IAAMO,EAAWR,KAAKD,MAAMU,KAAK,YAC7BC,EAAeF,EAASC,KAAK,0BACjCD,EAASG,GAAG,QAAS,0BAA2B,SAAAC,GAC5CA,EAAGC,iBACH,IAAMC,EAAMT,EAAEO,EAAGG,eAAeN,KAAK,OAAOO,KAAK,OACjDR,EAASC,KAAK,gCAAgCQ,IAAIH,GACD,IAA7CN,EAASC,KAAK,oBAAoBS,QAClCV,EAASC,KAAK,gBAAgBU,QAAQ,uBAE1CX,EAASC,KAAK,oBAAoBO,KAAK,MAAOF,GAAKM,YAAY,UAC/DV,EAAaW,KAAKX,EAAaY,KAAK,UACpCd,EAASC,KAAK,oBAAoBQ,IAAI,MAE1CT,EAASC,KAAK,oBAAoBE,GAAG,SAAU,WAC3C,IAAMY,EAAQf,EAASC,KAAK,oBAAoBQ,MAAiBO,MAAM,MACjEC,EAAWF,EAAKA,EAAKL,OAAS,GACpCV,EAASC,KAAK,gCAAgCQ,IAAI,IAClDT,EAASC,KAAK,oBAAoBiB,SAAS,UAC3ChB,EAAaW,KAAKI,MAIlB3B,EAAAS,UAAAL,kBAAR,WACI,IAAMyB,EAAU3B,KAAKD,MAAMU,KAAK,oCAC1BmB,EAAY5B,KAAKD,MAAMU,KAAK,kBAC5BoB,EAAkBD,EAAUZ,KAAK,QACjCc,EAAW,WACb,IAAIC,EAAYJ,EAAQK,OAAO,YACN,IAArBD,EAAUb,SACVa,EAAYJ,EAAQM,SAExBL,EAAUZ,KAAK,OAAQa,EAAgBK,QAAQ,UAAWH,EAAUd,SAExEU,EAAQhB,GAAG,SAAUmB,GACrBA,KAGIhC,EAAAS,UAAAJ,uBAAR,WAAA,IAAAgC,EAAAnC,KACIA,KAAKD,MAAMU,KAAK,uBAAuBE,GAAG,SAAU,SAACC,GACjCP,EAAEO,EAAGG,eAAeqB,KAAK,YAErCD,EAAKpC,MAAMU,KAAK,aAAaW,YAAY,UACzCe,EAAKpC,MAAMU,KAAK,mBAAmB2B,KAAK,YAAY,KAEpDD,EAAKpC,MAAMU,KAAK,aAAaiB,SAAS,UACtCS,EAAKpC,MAAMU,KAAK,mBAAmB2B,KAAK,YAAY,MAEzDC,QAAQ,WAGPvC,EAAAS,UAAAH,YAAR,WAAA,IAAA+B,EAAAnC,KACIA,KAAKD,MAAMU,KAAK,eAAeE,GAAG,SAAU,SAACC,GACzBP,EAAEO,EAAGG,eAAeqB,KAAK,WAErCD,EAAKpC,MAAMU,KAAK,eAAeW,YAAY,UAE3Ce,EAAKpC,MAAMU,KAAK,eAAeiB,SAAS,YAE7CW,QAAQ,WAEnBvC,EAvEA,GAAawC,EAAAxC,eAAAA","file":"AppearanceEdit.js","sourcesContent":["/// <reference path=\"../typings/fuelux/index.d.ts\" />\n\nexport class AppearanceEdit {\n    constructor(private $form: JQuery) {\n        this.initLogoUpload();\n        this.initLayoutChooser();\n        this.initTranslationService();\n        this.initRestApi();\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    private initLogoUpload() {\n        const $logoRow = this.$form.find('.logoRow'),\n            $uploadLabel = $logoRow.find('.uploadCol label .text');\n        $logoRow.on('click', '.imageChooserDd ul    a', ev => {\n            ev.preventDefault();\n            const src = $(ev.currentTarget).find(\"img\").attr(\"src\");\n            $logoRow.find('input[name=consultationLogo]').val(src);\n            if ($logoRow.find('.logoPreview img').length === 0) {\n                $logoRow.find('.logoPreview').prepend('<img src=\"\" alt=\"\">');\n            }\n            $logoRow.find('.logoPreview img').attr('src', src).removeClass('hidden');\n            $uploadLabel.text($uploadLabel.data('title'));\n            $logoRow.find(\"input[type=file]\").val('');\n        });\n        $logoRow.find(\"input[type=file]\").on(\"change\", () => {\n            const path = ($logoRow.find(\"input[type=file]\").val() as string).split('\\\\');\n            const filename = path[path.length - 1];\n            $logoRow.find('input[name=consultationLogo]').val('');\n            $logoRow.find(\".logoPreview img\").addClass('hidden');\n            $uploadLabel.text(filename);\n        });\n    }\n\n    private initLayoutChooser() {\n        const $inputs = this.$form.find(\".thumbnailedLayoutSelector input\");\n        const $editLink = this.$form.find(\".editThemeLink\");\n        const editLinkDefault = $editLink.attr(\"href\");\n        const onChange = () => {\n            let $selected = $inputs.filter(\":checked\");\n            if ($selected.length === 0) {\n                $selected = $inputs.first();\n            }\n            $editLink.attr(\"href\", editLinkDefault.replace(/DEFAULT/, $selected.val() as string));\n        };\n        $inputs.on(\"change\", onChange);\n        onChange();\n    }\n\n    private initTranslationService() {\n        this.$form.find(\"#translationService\").on('change', (ev) => {\n            const checked = $(ev.currentTarget).prop(\"checked\");\n            if (checked) {\n                this.$form.find(\".services\").removeClass(\"hidden\");\n                this.$form.find(\".services input\").prop(\"required\", true);\n            } else {\n                this.$form.find(\".services\").addClass(\"hidden\");\n                this.$form.find(\".services input\").prop(\"required\", false);\n            }\n        }).trigger(\"change\");\n    }\n\n    private initRestApi() {\n        this.$form.find(\"#apiEnabled\").on('change', (ev) => {\n            const checked = $(ev.currentTarget).prop(\"checked\");\n            if (checked) {\n                this.$form.find(\".apiBaseUrl\").removeClass(\"hidden\");\n            } else {\n                this.$form.find(\".apiBaseUrl\").addClass(\"hidden\");\n            }\n        }).trigger(\"change\");\n    }\n}\n"]}