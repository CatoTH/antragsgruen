{"version":3,"sources":["backend/AppearanceEdit.js","backend/AppearanceEdit.ts"],"names":["define","require","exports","Object","defineProperty","value","AppearanceEdit","constructor","$form","this","initLogoUpload","initLayoutChooser","initTranslationService","initRestApi","initSpeechQueues","$","tooltip","$logoRow","find","$uploadLabel","on","ev","preventDefault","src","currentTarget","attr","val","length","prepend","removeClass","text","data","path","split","filename","addClass","$inputs","$editLink","editLinkDefault","onChange","$selected","filter","first","replace","prop","trigger"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,oBAAiB,ECH7BJ,EAAAI,eAAA,MACIC,YAAoBC,GAAAC,KAAAD,MAAAA,EAChBC,KAAKC,iBACLD,KAAKE,oBACLF,KAAKG,yBACLH,KAAKI,cACLJ,KAAKK,mBAELC,EAAE,2BAA2BC,UAGzBN,iBACJ,MAAMO,EAAWR,KAAKD,MAAMU,KAAK,YAC7BC,EAAeF,EAASC,KAAK,0BACjCD,EAASG,GAAG,QAAS,2BAA2BC,IAC5CA,EAAGC,iBACH,MAAMC,EAAMR,EAAEM,EAAGG,eAAeN,KAAK,OAAOO,KAAK,OACjDR,EAASC,KAAK,gCAAgCQ,IAAIH,GACD,IAA7CN,EAASC,KAAK,oBAAoBS,QAClCV,EAASC,KAAK,gBAAgBU,QAAQ,uBAE1CX,EAASC,KAAK,oBAAoBO,KAAK,MAAOF,GAAKM,YAAY,UAC/DV,EAAaW,KAAKX,EAAaY,KAAK,UACpCd,EAASC,KAAK,oBAAoBQ,IAAI,OAE1CT,EAASC,KAAK,oBAAoBE,GAAG,UAAU,KAC3C,MAAMY,EAAQf,EAASC,KAAK,oBAAoBQ,MAAiBO,MAAM,MACjEC,EAAWF,EAAKA,EAAKL,OAAS,GACpCV,EAASC,KAAK,gCAAgCQ,IAAI,IAClDT,EAASC,KAAK,oBAAoBiB,SAAS,UAC3ChB,EAAaW,KAAKI,MAIlBvB,oBACJ,MAAMyB,EAAU3B,KAAKD,MAAMU,KAAK,oCAC1BmB,EAAY5B,KAAKD,MAAMU,KAAK,kBAC5BoB,EAAkBD,EAAUZ,KAAK,QACjCc,EAAW,KACb,IAAIC,EAAYJ,EAAQK,OAAO,YACN,IAArBD,EAAUb,SACVa,EAAYJ,EAAQM,SAExBL,EAAUZ,KAAK,OAAQa,EAAgBK,QAAQ,UAAWH,EAAUd,SAExEU,EAAQhB,GAAG,SAAUmB,GACrBA,IAGI3B,yBACJH,KAAKD,MAAMU,KAAK,uBAAuBE,GAAG,UAAWC,IACjCN,EAAEM,EAAGG,eAAeoB,KAAK,YAErCnC,KAAKD,MAAMU,KAAK,aAAaW,YAAY,UACzCpB,KAAKD,MAAMU,KAAK,mBAAmB0B,KAAK,YAAY,KAEpDnC,KAAKD,MAAMU,KAAK,aAAaiB,SAAS,UACtC1B,KAAKD,MAAMU,KAAK,mBAAmB0B,KAAK,YAAY,OAEzDC,QAAQ,UAGPhC,cACJJ,KAAKD,MAAMU,KAAK,eAAeE,GAAG,UAAWC,IACzBN,EAAEM,EAAGG,eAAeoB,KAAK,WAErCnC,KAAKD,MAAMU,KAAK,eAAeW,YAAY,UAE3CpB,KAAKD,MAAMU,KAAK,eAAeiB,SAAS,aAE7CU,QAAQ,UAGP/B,mBACJL,KAAKD,MAAMU,KAAK,mBAAmBE,GAAG,UAAWC,IAC7BN,EAAEM,EAAGG,eAAeoB,KAAK,WAErCnC,KAAKD,MAAMU,KAAK,WAAWW,YAAY,UAEvCpB,KAAKD,MAAMU,KAAK,WAAWiB,SAAS,aAEzCU,QAAQ,UAEXpC,KAAKD,MAAMU,KAAK,2BAA2BE,GAAG,UAAWC,IACrCN,EAAEM,EAAGG,eAAeoB,KAAK,YAErCnC,KAAKD,MAAMU,KAAK,cAAcW,YAAY,UAC1CpB,KAAKD,MAAMU,KAAK,oBAAoB0B,KAAK,YAAY,KAErDnC,KAAKD,MAAMU,KAAK,cAAciB,SAAS,UACvC1B,KAAKD,MAAMU,KAAK,oBAAoB0B,KAAK,YAAY,OAE1DC,QAAQ","file":"AppearanceEdit.js","sourcesContent":[null,"export class AppearanceEdit {\n    constructor(private $form: JQuery) {\n        this.initLogoUpload();\n        this.initLayoutChooser();\n        this.initTranslationService();\n        this.initRestApi();\n        this.initSpeechQueues();\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    private initLogoUpload() {\n        const $logoRow = this.$form.find('.logoRow'),\n            $uploadLabel = $logoRow.find('.uploadCol label .text');\n        $logoRow.on('click', '.imageChooserDd ul    a', ev => {\n            ev.preventDefault();\n            const src = $(ev.currentTarget).find(\"img\").attr(\"src\");\n            $logoRow.find('input[name=consultationLogo]').val(src);\n            if ($logoRow.find('.logoPreview img').length === 0) {\n                $logoRow.find('.logoPreview').prepend('<img src=\"\" alt=\"\">');\n            }\n            $logoRow.find('.logoPreview img').attr('src', src).removeClass('hidden');\n            $uploadLabel.text($uploadLabel.data('title'));\n            $logoRow.find(\"input[type=file]\").val('');\n        });\n        $logoRow.find(\"input[type=file]\").on(\"change\", () => {\n            const path = ($logoRow.find(\"input[type=file]\").val() as string).split('\\\\');\n            const filename = path[path.length - 1];\n            $logoRow.find('input[name=consultationLogo]').val('');\n            $logoRow.find(\".logoPreview img\").addClass('hidden');\n            $uploadLabel.text(filename);\n        });\n    }\n\n    private initLayoutChooser() {\n        const $inputs = this.$form.find(\".thumbnailedLayoutSelector input\");\n        const $editLink = this.$form.find(\".editThemeLink\");\n        const editLinkDefault = $editLink.attr(\"href\");\n        const onChange = () => {\n            let $selected = $inputs.filter(\":checked\");\n            if ($selected.length === 0) {\n                $selected = $inputs.first();\n            }\n            $editLink.attr(\"href\", editLinkDefault.replace(/DEFAULT/, $selected.val() as string));\n        };\n        $inputs.on(\"change\", onChange);\n        onChange();\n    }\n\n    private initTranslationService() {\n        this.$form.find(\"#translationService\").on('change', (ev) => {\n            const checked = $(ev.currentTarget).prop(\"checked\");\n            if (checked) {\n                this.$form.find(\".services\").removeClass(\"hidden\");\n                this.$form.find(\".services input\").prop(\"required\", true);\n            } else {\n                this.$form.find(\".services\").addClass(\"hidden\");\n                this.$form.find(\".services input\").prop(\"required\", false);\n            }\n        }).trigger(\"change\");\n    }\n\n    private initRestApi() {\n        this.$form.find(\"#apiEnabled\").on('change', (ev) => {\n            const checked = $(ev.currentTarget).prop(\"checked\");\n            if (checked) {\n                this.$form.find(\".apiBaseUrl\").removeClass(\"hidden\");\n            } else {\n                this.$form.find(\".apiBaseUrl\").addClass(\"hidden\");\n            }\n        }).trigger(\"change\");\n    }\n\n    private initSpeechQueues() {\n        this.$form.find(\"#hasSpeechLists\").on('change', (ev) => {\n            const checked = $(ev.currentTarget).prop(\"checked\");\n            if (checked) {\n                this.$form.find(\".quotas\").removeClass(\"hidden\");\n            } else {\n                this.$form.find(\".quotas\").addClass(\"hidden\");\n            }\n        }).trigger(\"change\");\n\n        this.$form.find(\"#hasMultipleSpeechLists\").on('change', (ev) => {\n            const checked = $(ev.currentTarget).prop(\"checked\");\n            if (checked) {\n                this.$form.find(\".quotaName\").removeClass(\"hidden\");\n                this.$form.find(\".quotaName input\").prop(\"required\", true);\n            } else {\n                this.$form.find(\".quotaName\").addClass(\"hidden\");\n                this.$form.find(\".quotaName input\").prop(\"required\", false);\n            }\n        }).trigger(\"change\");\n    }\n}\n"]}