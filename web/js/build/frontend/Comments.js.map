{"version":3,"sources":["frontend/Comments.ts"],"names":["Comments","$widget","this","on","ev","commentId","$","currentTarget","data","$replyTo","find","hasClass","removeClass","focus","addClass","$button","prop","parents","trigger","exports"],"mappings":"yGAAA,IAAAA,EACI,SAAoBC,IAAAC,KAAAD,QAAAA,GACRE,GAAG,QAAS,eAAgB,SAACC,GACjC,IAAMC,EAAYC,EAAEF,EAAGG,eAAeC,KAAK,YACvCC,EAAWR,EAAQS,KAAK,WAAaL,GACrCI,EAASE,SAAS,WAClBF,EAASG,YAAY,UACrBH,EAASC,KAAK,YAAYG,SAE1BJ,EAASK,SAAS,YAI1Bb,EAAQE,GAAG,SAAU,qCAAsC,SAACC,GACxD,IAAMW,EAAUT,EAAEF,EAAGG,eACjBQ,EAAQC,KAAK,WACbD,EAAQE,QAAQ,yBAAyBP,KAAK,eAAeE,YAAY,UAEzEG,EAAQE,QAAQ,yBAAyBP,KAAK,eAAeI,SAAS,YAI9Eb,EAAQS,KAAK,sCAAsCQ,QAAQ,WAtBtDC,EAAAnB,SAAAA","file":"Comments.js","sourcesContent":["export class Comments {\n    constructor(private $widget: JQuery) {\n        $widget.on('click', '.replyButton', (ev) => {\n            const commentId = $(ev.currentTarget).data('reply-to'),\n                $replyTo = $widget.find('.replyTo' + commentId);\n            if ($replyTo.hasClass('hidden')) {\n                $replyTo.removeClass('hidden');\n                $replyTo.find('textarea').focus();\n            } else {\n                $replyTo.addClass('hidden');\n            }\n        });\n\n        $widget.on('change', '.commentNotifications .notisActive', (ev) => {\n            const $button = $(ev.currentTarget);\n            if ($button.prop('checked')) {\n                $button.parents('.commentNotifications').find('.selectlist').removeClass('hidden');\n            } else {\n                $button.parents('.commentNotifications').find('.selectlist').addClass('hidden');\n            }\n        });\n\n        $widget.find('.commentNotifications .notisActive').trigger('change');\n    }\n}"]}