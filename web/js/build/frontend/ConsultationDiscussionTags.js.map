{"version":3,"sources":["frontend/ConsultationDiscussionTags.js","frontend/ConsultationDiscussionTags.ts"],"names":["define","require","exports","Object","defineProperty","value","ConsultationDiscussionTags","constructor","$widget","this","currTagFilter","currSort","currSortAsc","initComments","initTags","find","on","removeClass","grid","Isotope","itemSelector","layoutMode","getSortData","title","titlePrefix","created","comments","amendments","ev","preventDefault","$tagBtn","$","currentTarget","filter","data","setFilters","addClass","$sortBtn","arrange","sortBy","sortAscending"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,gCAA6B,ECDzCJ,EAAAI,2BAAA,MAMI,WAAAC,CAAoBC,GAAAC,KAAAD,QAAAA,EAJZC,KAAAC,cAAgB,IAChBD,KAAAE,SAAW,QACXF,KAAAG,aAAc,EAGlBH,KAAKI,eACLJ,KAAKK,UACT,CAEQ,YAAAD,GACJJ,KAAKD,QAAQO,KAAK,8CAA8CC,GAAG,SAAS,KACxEP,KAAKD,QAAQO,KAAK,6BAA6BE,YAAY,YAAY,GAE/E,CAEQ,QAAAH,GACJL,KAAKS,KAAO,IAAIC,QAAQ,wCAAyC,CAC7DC,aAAc,YACdC,WAAY,WACZC,YAAa,CACTC,MAAO,eACPC,YAAa,sBACbC,QAAS,0BACTC,SAAU,+BACVC,WAAY,oCAIpBlB,KAAKD,QAAQO,KAAK,cAAcC,GAAG,SAAUY,IACzCA,EAAGC,iBAEH,MAAMC,EAAUC,EAAEH,EAAGI,eACfC,EAASH,EAAQI,KAAK,UACvBD,IAILxB,KAAKC,cAAgBuB,EACrBxB,KAAK0B,aAEL1B,KAAKD,QAAQO,KAAK,cAAcE,YAAY,UAC5Ca,EAAQM,SAAS,UAAS,IAG9B3B,KAAKD,QAAQO,KAAK,wCAAwCC,GAAG,SAAUY,IACnEA,EAAGC,iBAEH,MAAMQ,EAAWN,EAAEH,EAAGI,eACtBvB,KAAKE,SAAW0B,EAASH,KAAK,QAC9BzB,KAAKG,YAA0C,SAA3ByB,EAASH,KAAK,SAClCzB,KAAK0B,aAEL1B,KAAKD,QAAQO,KAAK,wCAAwCE,YAAY,UACtEoB,EAASD,SAAS,SAAS,GAEnC,CAEQ,UAAAD,GACJ,IAAIF,EAAS,GACc,MAAvBxB,KAAKC,gBACLuB,GAAUxB,KAAKC,eAEG,UAAlBD,KAAKE,WACLsB,GAAU,WAEC,KAAXA,IACAA,EAAS,KAGbxB,KAAKS,KAAKoB,QAAQ,CACdL,OAAQA,EACRM,OAAQ9B,KAAKE,SACb6B,cAAe/B,KAAKG,aAE5B,EDPJ","file":"ConsultationDiscussionTags.js","sourcesContent":[null,"declare let Isotope: any;\n\nexport class ConsultationDiscussionTags {\n    private grid;\n    private currTagFilter = '*';\n    private currSort = 'phase';\n    private currSortAsc = true;\n\n    constructor(private $widget: JQuery) {\n        this.initComments();\n        this.initTags();\n    }\n\n    private initComments() {\n        this.$widget.find(\".commentListHolder .showAllComments button\").on(\"click\", () => {\n            this.$widget.find(\".expandableRecentComments\").removeClass(\"shortened\");\n        });\n    }\n\n    private initTags() {\n        this.grid = new Isotope('.motionListFilter .motionListFiltered', {\n            itemSelector: '.sortitem',\n            layoutMode: 'vertical',\n            getSortData: {\n                title: '[data-title]',\n                titlePrefix: '[data-title-prefix]',\n                created: '[data-created] parseInt',\n                comments: '[data-num-comments] parseInt',\n                amendments: '[data-num-amendments] parseInt'\n            }\n        });\n\n        this.$widget.find(\".tagList a\").on(\"click\", (ev) => {\n            ev.preventDefault();\n\n            const $tagBtn = $(ev.currentTarget);\n            const filter = $tagBtn.data(\"filter\");\n            if (!filter) {\n                return;\n            }\n\n            this.currTagFilter = filter;\n            this.setFilters();\n\n            this.$widget.find(\".tagList a\").removeClass(\"active\");\n            $tagBtn.addClass(\"active\");\n        });\n\n        this.$widget.find(\".motionListFilter .motionSort button\").on(\"click\", (ev) => {\n            ev.preventDefault();\n\n            const $sortBtn = $(ev.currentTarget);\n            this.currSort = $sortBtn.data(\"sort\");\n            this.currSortAsc = ($sortBtn.data(\"order\") !== 'desc');\n            this.setFilters();\n\n            this.$widget.find(\".motionListFilter .motionSort button\").removeClass(\"active\");\n            $sortBtn.addClass(\"active\");\n        });\n    }\n\n    private setFilters() {\n        let filter = '';\n        if (this.currTagFilter !== '*') {\n            filter += this.currTagFilter;\n        }\n        if (this.currSort !== 'phase') {\n            filter += '.motion';\n        }\n        if (filter === '') {\n            filter = '*'\n        }\n\n        this.grid.arrange({\n            filter: filter,\n            sortBy: this.currSort,\n            sortAscending: this.currSortAsc\n        });\n    }\n}\n"]}