{"version":3,"sources":["frontend/MotionMergeAmendmentsConfirm.js","frontend/MotionMergeAmendmentsConfirm.ts"],"names":["define","require","exports","Object","defineProperty","value","MotionMergeAmendmentsConfirm","constructor","$widget","this","$sections","find","change","onChangeDiffStyle","bind","first","initResolutionFunctions","initVotingFunctions","val","addClass","removeClass","$newStatus","on","filter","trigger","datetimepicker","locale","$","attr","format","$closer","$opener","$inputRows","click"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,kCAA+B,ECH3CJ,EAAAI,6BAAA,MAIIC,YAAmBC,GAAAC,KAAAD,QAAAA,EACfC,KAAKC,UAAYF,EAAQG,KAAK,qBAC9BH,EAAQG,KAAK,yBAAyBC,OAAOH,KAAKI,kBAAkBC,KAAKL,OACzED,EAAQG,KAAK,yBAAyBI,QAAQH,SAE9CH,KAAKO,0BACLP,KAAKQ,sBAGDJ,oBAES,QADDJ,KAAKD,QAAQG,KAAK,iCAAiCO,OAE3DT,KAAKC,UAAUC,KAAK,aAAaQ,SAAS,UAC1CV,KAAKC,UAAUC,KAAK,aAAaS,YAAY,YAE7CX,KAAKC,UAAUC,KAAK,aAAaS,YAAY,UAC7CX,KAAKC,UAAUC,KAAK,aAAaQ,SAAS,WAI1CH,0BACJP,KAAKY,WAAaZ,KAAKD,QAAQG,KAAK,0BACpCF,KAAKY,WAAWC,GAAG,UAAU,KACwB,WAA7Cb,KAAKY,WAAWE,OAAO,YAAYL,MACnCT,KAAKD,QAAQG,KAAK,uBAAuBQ,SAAS,UAElDV,KAAKD,QAAQG,KAAK,uBAAuBS,YAAY,aAE1DI,QAAQ,UACXf,KAAKD,QAAQG,KAAK,yBAAyBc,eAAe,CACtDC,OAAQC,EAAE,QAAQC,KAAK,QACvBC,OAAQ,MAIRZ,sBACJ,MAAMa,EAAUH,EAAE,uBACdI,EAAUJ,EAAE,uBACZK,EAAaL,EAAE,qDACnBI,EAAQE,OAAM,KACVH,EAAQV,YAAY,UACpBW,EAAQZ,SAAS,UACjBa,EAAWZ,YAAY,aAE3BU,EAAQG,OAAM,KACVH,EAAQX,SAAS,UACjBY,EAAQX,YAAY,UACpBY,EAAWb,SAAS","file":"MotionMergeAmendmentsConfirm.js","sourcesContent":[null,"export class MotionMergeAmendmentsConfirm {\n    private $sections: JQuery;\n    private $newStatus: JQuery;\n\n    constructor(public $widget: JQuery) {\n        this.$sections = $widget.find(\".motionTextHolder\");\n        $widget.find(\"input[name=diffStyle]\").change(this.onChangeDiffStyle.bind(this));\n        $widget.find(\"input[name=diffStyle]\").first().change();\n\n        this.initResolutionFunctions();\n        this.initVotingFunctions();\n    }\n\n    private onChangeDiffStyle() {\n        let style = this.$widget.find(\"input[name=diffStyle]:checked\").val();\n        if (style == 'diff') {\n            this.$sections.find(\".fullText\").addClass('hidden');\n            this.$sections.find(\".diffText\").removeClass('hidden');\n        } else {\n            this.$sections.find(\".fullText\").removeClass('hidden');\n            this.$sections.find(\".diffText\").addClass('hidden');\n        }\n    }\n\n    private initResolutionFunctions() {\n        this.$newStatus = this.$widget.find('.newMotionStatus input');\n        this.$newStatus.on('change', () => {\n            if (this.$newStatus.filter(':checked').val() === 'motion') {\n                this.$widget.find('.newMotionInitiator').addClass('hidden');\n            } else {\n                this.$widget.find('.newMotionInitiator').removeClass('hidden');\n            }\n        }).trigger('change');\n        this.$widget.find(\"#dateResolutionHolder\").datetimepicker({\n            locale: $(\"html\").attr('lang'),\n            format: 'L'\n        });\n    }\n\n    private initVotingFunctions() {\n        const $closer = $(\".votingResultCloser\"),\n            $opener = $(\".votingResultOpener\"),\n            $inputRows = $(\".contentVotingResult, .contentVotingResultComment\");\n        $opener.click(() => {\n            $closer.removeClass(\"hidden\");\n            $opener.addClass(\"hidden\");\n            $inputRows.removeClass(\"hidden\");\n        });\n        $closer.click(() => {\n            $closer.addClass(\"hidden\");\n            $opener.removeClass(\"hidden\");\n            $inputRows.addClass(\"hidden\");\n        });\n    }\n}\n"]}