{"version":3,"sources":["frontend/MotionMergeAmendmentsConfirm.js","frontend/MotionMergeAmendmentsConfirm.ts"],"names":["define","require","exports","Object","defineProperty","value","MotionMergeAmendmentsConfirm","constructor","$widget","this","$sections","find","on","onChangeDiffStyle","bind","trigger","initResolutionFunctions","initVotingFunctions","val","addClass","removeClass","$newStatus","filter","datetimepicker","locale","$","attr","format","$closer","$opener","$inputRows"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,kCAA+B,ECH3CJ,EAAAI,6BAAA,MAII,WAAAC,CAAmBC,GAAAC,KAAAD,QAAAA,EACfC,KAAKC,UAAYF,EAAQG,KAAK,qBAC9BH,EAAQG,KAAK,yBAAyBC,GAAG,SAAUH,KAAKI,kBAAkBC,KAAKL,OAAOM,QAAQ,UAE9FN,KAAKO,0BACLP,KAAKQ,qBACT,CAEQ,iBAAAJ,GAES,QADDJ,KAAKD,QAAQG,KAAK,iCAAiCO,OAE3DT,KAAKC,UAAUC,KAAK,aAAaQ,SAAS,UAC1CV,KAAKC,UAAUC,KAAK,aAAaS,YAAY,YAE7CX,KAAKC,UAAUC,KAAK,aAAaS,YAAY,UAC7CX,KAAKC,UAAUC,KAAK,aAAaQ,SAAS,UAElD,CAEQ,uBAAAH,GACJP,KAAKY,WAAaZ,KAAKD,QAAQG,KAAK,0BACpCF,KAAKY,WAAWT,GAAG,UAAU,KACwB,WAA7CH,KAAKY,WAAWC,OAAO,YAAYJ,OACnCT,KAAKD,QAAQG,KAAK,uBAAuBS,YAAY,UACrDX,KAAKD,QAAQG,KAAK,uBAAuBQ,SAAS,YAElDV,KAAKD,QAAQG,KAAK,uBAAuBQ,SAAS,UAClDV,KAAKD,QAAQG,KAAK,uBAAuBS,YAAY,UACzD,IACDL,QAAQ,UACXN,KAAKD,QAAQG,KAAK,yBAAyBY,eAAe,CACtDC,OAAQC,EAAE,QAAQC,KAAK,QACvBC,OAAQ,KAEhB,CAEQ,mBAAAV,GACJ,MAAMW,EAAUH,EAAE,uBACdI,EAAUJ,EAAE,uBACZK,EAAaL,EAAE,qDACnBI,EAAQjB,GAAG,SAAS,KAChBgB,EAAQR,YAAY,UACpBS,EAAQV,SAAS,UACjBW,EAAWV,YAAY,SAAS,IAEpCQ,EAAQhB,GAAG,SAAS,KAChBgB,EAAQT,SAAS,UACjBU,EAAQT,YAAY,UACpBU,EAAWX,SAAS,SAAS,GAErC,EDCJ","file":"MotionMergeAmendmentsConfirm.js","sourcesContent":[null,"export class MotionMergeAmendmentsConfirm {\n    private $sections: JQuery;\n    private $newStatus: JQuery;\n\n    constructor(public $widget: JQuery) {\n        this.$sections = $widget.find(\".motionTextHolder\");\n        $widget.find(\"input[name=diffStyle]\").on(\"change\", this.onChangeDiffStyle.bind(this)).trigger(\"change\");\n\n        this.initResolutionFunctions();\n        this.initVotingFunctions();\n    }\n\n    private onChangeDiffStyle() {\n        let style = this.$widget.find(\"input[name=diffStyle]:checked\").val();\n        if (style == 'diff') {\n            this.$sections.find(\".fullText\").addClass('hidden');\n            this.$sections.find(\".diffText\").removeClass('hidden');\n        } else {\n            this.$sections.find(\".fullText\").removeClass('hidden');\n            this.$sections.find(\".diffText\").addClass('hidden');\n        }\n    }\n\n    private initResolutionFunctions() {\n        this.$newStatus = this.$widget.find('.newMotionStatus input');\n        this.$newStatus.on('change', () => {\n            if (this.$newStatus.filter(':checked').val() === 'motion') {\n                this.$widget.find('.newMotionSubstatus').removeClass('hidden');\n                this.$widget.find('.newMotionInitiator').addClass('hidden');\n            } else {\n                this.$widget.find('.newMotionSubstatus').addClass('hidden');\n                this.$widget.find('.newMotionInitiator').removeClass('hidden');\n            }\n        }).trigger('change');\n        this.$widget.find(\"#dateResolutionHolder\").datetimepicker({\n            locale: $(\"html\").attr('lang'),\n            format: 'L'\n        });\n    }\n\n    private initVotingFunctions() {\n        const $closer = $(\".votingResultCloser\"),\n            $opener = $(\".votingResultOpener\"),\n            $inputRows = $(\".contentVotingResult, .contentVotingResultComment\");\n        $opener.on(\"click\", () => {\n            $closer.removeClass(\"hidden\");\n            $opener.addClass(\"hidden\");\n            $inputRows.removeClass(\"hidden\");\n        });\n        $closer.on(\"click\", () => {\n            $closer.addClass(\"hidden\");\n            $opener.removeClass(\"hidden\");\n            $inputRows.addClass(\"hidden\");\n        });\n    }\n}\n"]}