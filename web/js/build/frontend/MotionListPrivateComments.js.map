{"version":3,"sources":["frontend/MotionListPrivateComments.js","frontend/MotionListPrivateComments.ts"],"names":["define","require","exports","Object","defineProperty","value","MotionListPrivateComments","constructor","$element","this","childNodes","forEach","comment","nodeType","Node","ELEMENT_NODE","commentNode","selector","attributes","document","querySelectorAll","motionRow","commentHolder","querySelector","clonedComment","cloneNode","link","setAttribute","getAttribute","parentNode","insertBefore","removeChild","$","find","tooltip"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,+BAA4B,ECHxCJ,EAAAI,0BAAA,MACI,WAAAC,CAAoBC,GAAAC,KAAAD,SAAAA,EACDA,EAAS,GACjBE,WAAWC,SAAQC,IACtB,GAAIA,EAAQC,WAAaC,KAAKC,aAC1B,OAEJ,MAAMC,EAAcJ,EACdK,EAAW,IAAMD,EAAYE,WAAW,oBAAoBb,MAAQ,MAAQW,EAAYE,WAAW,kBAAkBb,MAC3Hc,SAASC,iBAAiBH,GAAUN,SAAQU,IACxC,MAAMC,EAAgBD,EAAUE,cAAc,yBAC9C,IAAKD,EACD,OAEJ,MAAME,EAAgBZ,EAAQa,WAAU,GAClCC,EAAOL,EAAUE,cAAc,gBACjCG,GACAF,EAAcG,aAAa,OAAQD,EAAKE,aAAa,SAGzDN,EAAcO,WAAWC,aAAaN,EAAeF,GACrDA,EAAcO,WAAWE,YAAYT,GAErCU,EAAER,GAAeS,KAAK,2BAA6BC,SAAS,GAC9D,GAEV,EDMJ","file":"MotionListPrivateComments.js","sourcesContent":[null,"export class MotionListPrivateComments {\n    constructor(private $element: JQuery) {\n        const holder = $element[0];\n        holder.childNodes.forEach(comment => {\n            if (comment.nodeType !== Node.ELEMENT_NODE) {\n                return;\n            }\n            const commentNode = comment as HTMLElement;\n            const selector = '.' + commentNode.attributes['data-target-type'].value + 'Row' + commentNode.attributes['data-target-id'].value;\n            document.querySelectorAll(selector).forEach(motionRow => {\n                const commentHolder = motionRow.querySelector('.privateCommentHolder');\n                if (!commentHolder) {\n                    return;\n                }\n                const clonedComment = comment.cloneNode(true) as HTMLElement;\n                const link = motionRow.querySelector('.titleLink a');\n                if (link) {\n                    clonedComment.setAttribute('href', link.getAttribute('href'));\n                }\n\n                commentHolder.parentNode.insertBefore(clonedComment, commentHolder);\n                commentHolder.parentNode.removeChild(commentHolder);\n\n                $(clonedComment).find(\"[data-toggle=\\\"tooltip\\\"]\").tooltip();\n            });\n        });\n    }\n}\n"]}