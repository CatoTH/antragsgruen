{"version":3,"sources":["frontend/MotionShow.js","frontend/MotionShow.ts"],"names":["define","require","exports","LineNumberHighlighting_1","Object","defineProperty","value","MotionParagraph","constructor","$element","this","activeAmendmentId","$paraFirstLine","find","first","lineHeight","height","amends","sort","el1","el2","$","data","append","each","num","el","initInlineAmendmentPosition","toggleInlineAmendmentBehavior","$amendment","targetOffset","$prevBookmark","prevAll","delta","$pre","parseInt","css","showInlineAmendment","amendmentId","hideInlineAmendment","addClass","removeClass","$link","hasClass","on","ev","preventDefault","LineNumberHighlighting","$paragraphs","showComment","bind","hideComment","filter","trigger","i","s","location","hash","split","length","scrollintoview","top_offset","markMovedParagraphs","initPrivateComments","common","IMotionShow","initContactShow","initAmendmentTextMode","initCmdEnterSubmit","initDelSubmit","msg","$node","paragraphNew","sectionId","parents","attr","paragraphNewFirstline","__t","replace","nodeName","parent","$msg","text","insertBefore","remove","currentTarget","$form","$target","$commentHolder","$bookmark","isOnScreen"],"mappings":"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","file":"MotionShow.js","sourcesContent":[null,"import '../shared/IMotionShow';\nimport { LineNumberHighlighting } from \"./LineNumberHighlighting\";\n\nclass MotionParagraph {\n    private activeAmendmentId: number = null;\n    private $paraFirstLine: JQuery;\n    private readonly lineHeight: number;\n\n    constructor(private $element: JQuery) {\n        this.$paraFirstLine = $element.find(\".lineNumber\").first();\n        this.lineHeight = this.$paraFirstLine.height();\n\n        let amends = $element.find(\".bookmarks > .amendment\");\n        amends = amends.sort(function (el1, el2) {\n            return $(el1).data(\"first-line\") - $(el2).data(\"first-line\");\n        });\n        $element.find(\".bookmarks\").append(amends);\n\n        $element.find('ul.bookmarks li.amendment').each((num, el) => {\n            this.initInlineAmendmentPosition($(el));\n            this.toggleInlineAmendmentBehavior($(el));\n        });\n    }\n\n    private initInlineAmendmentPosition($amendment: JQuery) {\n        let firstLine = $amendment.data(\"first-line\"),\n            targetOffset = (firstLine - this.$paraFirstLine.data(\"line-number\")) * this.lineHeight,\n            $prevBookmark = $amendment.prevAll(),\n            delta = targetOffset;\n        $prevBookmark.each(function () {\n            let $pre = $(this);\n            delta -= $pre.height();\n            delta -= parseInt($pre.css(\"margin-top\"));\n            delta -= 7;\n        });\n        if (delta < 0) {\n            delta = 0;\n        }\n        $amendment.css('margin-top', delta + \"px\");\n    }\n\n    private showInlineAmendment(amendmentId: number) {\n        if (this.activeAmendmentId) {\n            this.hideInlineAmendment(this.activeAmendmentId);\n        }\n        this.$element.find(\"> .textOrig\").addClass(\"hidden\");\n        this.$element.find(\"> .textAmendment\").addClass(\"hidden\");\n        this.$element.find(\"> .textAmendment.amendment\" + amendmentId).removeClass(\"hidden\");\n        this.$element.find(\".bookmarks .amendment\" + amendmentId).find(\"a\").addClass('active');\n        this.activeAmendmentId = amendmentId;\n    }\n\n    private hideInlineAmendment(amendmentId: number) {\n        this.$element.find(\"> .textOrig\").removeClass(\"hidden\");\n        this.$element.find(\"> .textAmendment\").addClass(\"hidden\");\n        this.$element.find(\".bookmarks .amendment\" + amendmentId).find(\"a\").removeClass('active');\n        this.activeAmendmentId = null;\n    }\n\n\n    private toggleInlineAmendmentBehavior($amendment: JQuery) {\n        const $link = $amendment.find(\"a\"),\n            amendmentId = $link.data(\"id\");\n        if ($(\"html\").hasClass(\"touchevents\")) {\n            $link.on(\"click\", (ev) => {\n                ev.preventDefault();\n                if (this.$element.find(\"> .textAmendment.amendment\" + amendmentId).hasClass(\"hidden\")) {\n                    this.showInlineAmendment(amendmentId)\n                } else {\n                    this.hideInlineAmendment(amendmentId);\n                }\n            });\n        } else {\n            $amendment.on(\"mouseover\", () => {\n                this.showInlineAmendment(amendmentId);\n            }).on(\"mouseout\", () => {\n                this.hideInlineAmendment(amendmentId);\n            });\n        }\n    }\n}\n\nclass MotionShow {\n    constructor() {\n        new LineNumberHighlighting();\n\n        let $paragraphs = $('.motionTextHolder .paragraph');\n        $paragraphs.find('.comment .shower').on(\"click\", this.showComment.bind(this));\n        $paragraphs.find('.comment .hider').on(\"click\", this.hideComment.bind(this));\n\n        $paragraphs.filter('.commentsOpened').find('.comment .shower').trigger(\"click\");\n        $paragraphs.filter(':not(.commentsOpened)').find('.comment .hider').trigger(\"click\");\n\n        $paragraphs.each((i, el) => {\n            new MotionParagraph($(el));\n        });\n\n\n        $('.tagAdderHolder').on(\"click\", function (ev) {\n            ev.preventDefault();\n            $(this).addClass(\"hidden\");\n            $('#tagAdderForm').removeClass(\"hidden\");\n        });\n\n        let s = location.hash.split('#comm');\n        if (s.length == 2) {\n            $('#comment' + s[1]).scrollintoview({top_offset: -100});\n        }\n\n        this.markMovedParagraphs();\n        this.initPrivateComments();\n\n        const common = new IMotionShow();\n        common.initContactShow();\n        common.initAmendmentTextMode();\n        common.initCmdEnterSubmit();\n        common.initDelSubmit();\n    }\n\n    private markMovedParagraphs() {\n        // Remove double markup\n        $(\".motionTextHolder .moved .moved\").removeClass('moved');\n\n        $(\".motionTextHolder .moved\").each(function () {\n            let $node = $(this),\n                paragraphNew = $node.data('moving-partner-paragraph'),\n                sectionId = $node.parents('.paragraph').first().attr('id').split('_')[1],\n                paragraphNewFirstline = $('#section_' + sectionId + '_' + paragraphNew).find('.lineNumber').first().data('line-number'),\n                msg: string;\n\n            if ($node.hasClass('inserted')) {\n                msg = __t('std', 'moved_paragraph_from_line');\n            } else {\n                msg = __t('std', 'moved_paragraph_to_line');\n            }\n            msg = msg.replace(/##LINE##/, paragraphNewFirstline).replace(/##PARA##/, (paragraphNew + 1));\n\n            if ($node[0].nodeName === 'LI') {\n                $node = $node.parent();\n            }\n            let $msg = $('<div class=\"movedParagraphHint\"></div>');\n            $msg.text(msg);\n            $msg.insertBefore($node);\n        });\n    }\n\n    private initPrivateComments() {\n        if ($('.privateParagraph, .privateNote').length > 0) {\n            $('.privateParagraphNoteOpener').removeClass('hidden');\n        }\n        $('.privateNoteOpener').on(\"click\", (ev) => {\n            ev.preventDefault();\n            $('.privateNoteOpener').remove();\n            $('.motionData .privateNotes').removeClass('hidden');\n            $('.motionData .privateNotes textarea').trigger(\"focus\");\n            $('.privateParagraphNoteOpener').removeClass('hidden');\n        });\n        $('.privateParagraphNoteOpener button').on(\"click\", (ev) => {\n            $(ev.currentTarget).parents(\".privateParagraphNoteOpener\").addClass('hidden');\n            const $form = $(ev.currentTarget).parents('.privateParagraphNoteHolder').find('form');\n            $form.removeClass('hidden');\n            $form.find('textarea').trigger(\"focus\");\n        });\n        $('.privateNotes blockquote').on(\"click\", () => {\n            $('.privateNotes blockquote').addClass('hidden');\n            $('.privateNotes form').removeClass('hidden');\n            $('.privateNotes textarea').trigger(\"focus\");\n        });\n        $('.privateParagraphNoteHolder blockquote').on(\"click\", (ev) => {\n            const $target = $(ev.currentTarget).parents('.privateParagraphNoteHolder');\n            $target.find('blockquote').addClass('hidden');\n            $target.find('form').removeClass('hidden');\n            $target.find('textarea').trigger(\"focus\");\n        });\n    }\n\n    private showComment(ev) {\n        ev.preventDefault();\n        const $node = $(ev.currentTarget),\n            $commentHolder = $node.parents('.paragraph').first().find('.commentHolder'),\n            $bookmark = $node.parent();\n        $node.addClass('hidden');\n        $bookmark.find('.hider').removeClass('hidden');\n        $commentHolder.removeClass('hidden');\n        if (!$commentHolder.isOnScreen(0.1, 0.1)) {\n            $commentHolder.scrollintoview({top_offset: -100});\n        }\n    }\n\n    private hideComment(ev) {\n        const $node = $(ev.currentTarget),\n            $bookmark = $node.parent();\n        $node.addClass('hidden');\n        $bookmark.find('.shower').removeClass('hidden');\n\n        $node.parents('.paragraph').first().find('.commentHolder').addClass('hidden');\n        ev.preventDefault();\n    }\n}\n\nnew MotionShow();\n"]}