{"version":3,"sources":["frontend/MotionShow.js","frontend/MotionShow.ts"],"names":["define","require","exports","LineNumberHighlighting_1","Object","defineProperty","value","MotionParagraph","constructor","$element","this","activeAmendmentId","s","location","hash","split","length","$","first","scrollintoview","top_offset","$paraFirstLine","find","lineHeight","height","amends","sort","el1","el2","data","append","each","num","el","initInlineAmendmentPosition","toggleInlineAmendmentBehavior","$amendment","targetOffset","$prevBookmark","prevAll","delta","$pre","parseInt","css","showInlineAmendment","amendmentId","hideInlineAmendment","addClass","removeClass","$link","window","matchMedia","matches","on","ev","preventDefault","hasClass","LineNumberHighlighting","$paragraphs","showComment","bind","hideComment","filter","trigger","i","markMovedParagraphs","initPrivateComments","initProtocolShower","common","IMotionShow","initContactShow","initAmendmentTextMode","initCmdEnterSubmit","initDelSubmit","initDataTableActions","initExpandableList","msg","$node","paragraphNew","sectionId","parents","attr","paragraphNewFirstline","__t","replace","nodeName","parent","$msg","text","insertBefore","remove","currentTarget","$form","$target","$commentHolder","$bookmark","isOnScreen"],"mappings":"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","file":"MotionShow.js","sourcesContent":[null,"import '../shared/IMotionShow';\nimport { LineNumberHighlighting } from \"./LineNumberHighlighting\";\n\nclass MotionParagraph {\n    private activeAmendmentId: number = null;\n    private $paraFirstLine: JQuery;\n    private readonly lineHeight: number;\n\n    constructor(private $element: JQuery) {\n        const s = location.hash.split('#amendment');\n        if (s.length == 2) {\n            $(\".bookmarks .amendment\" + s[1]).first().scrollintoview({top_offset: -100});\n        }\n\n        this.$paraFirstLine = $element.find(\".lineNumber\").first();\n        this.lineHeight = this.$paraFirstLine.height();\n\n        let amends = $element.find(\".bookmarks > .amendment\");\n        amends = amends.sort(function (el1, el2) {\n            return $(el1).data(\"first-line\") - $(el2).data(\"first-line\");\n        });\n        $element.find(\".bookmarks\").append(amends);\n\n        $element.find('ul.bookmarks li.amendment').each((num, el) => {\n            this.initInlineAmendmentPosition($(el));\n            this.toggleInlineAmendmentBehavior($(el));\n        });\n    }\n\n    private initInlineAmendmentPosition($amendment: JQuery) {\n        let firstLine = $amendment.data(\"first-line\"),\n            targetOffset = (firstLine - this.$paraFirstLine.data(\"line-number\")) * this.lineHeight,\n            $prevBookmark = $amendment.prevAll(),\n            delta = targetOffset;\n        $prevBookmark.each(function () {\n            let $pre = $(this);\n            delta -= $pre.height();\n            delta -= parseInt($pre.css(\"margin-top\"));\n            delta -= 7;\n        });\n        if (delta < 0) {\n            delta = 0;\n        }\n        $amendment.css('margin-top', delta + \"px\");\n    }\n\n    private showInlineAmendment(amendmentId: number) {\n        if (this.activeAmendmentId) {\n            this.hideInlineAmendment(this.activeAmendmentId);\n        }\n        this.$element.find(\"> .textOrig\").addClass(\"hidden\");\n        this.$element.find(\"> .textAmendment\").addClass(\"hidden\");\n        this.$element.find(\"> .textAmendment.amendment\" + amendmentId).removeClass(\"hidden\");\n        this.$element.find(\".bookmarks .amendment\" + amendmentId).find(\"a\").addClass('active');\n        this.activeAmendmentId = amendmentId;\n    }\n\n    private hideInlineAmendment(amendmentId: number) {\n        this.$element.find(\"> .textOrig\").removeClass(\"hidden\");\n        this.$element.find(\"> .textAmendment\").addClass(\"hidden\");\n        this.$element.find(\".bookmarks .amendment\" + amendmentId).find(\"a\").removeClass('active');\n        this.activeAmendmentId = null;\n    }\n\n\n    private toggleInlineAmendmentBehavior($amendment: JQuery) {\n        const $link = $amendment.find(\"a\"),\n            amendmentId = $link.data(\"id\");\n\n        const hasHover =  (window.matchMedia && window.matchMedia(\"(hover: hover)\").matches);\n        if (hasHover) {\n            $amendment.on(\"mouseover\", () => {\n                this.showInlineAmendment(amendmentId);\n            }).on(\"mouseout\", () => {\n                this.hideInlineAmendment(amendmentId);\n            });\n        } else {\n            $link.on(\"click\", (ev) => {\n                ev.preventDefault();\n                if (this.$element.find(\"> .textAmendment.amendment\" + amendmentId).hasClass(\"hidden\")) {\n                    this.showInlineAmendment(amendmentId)\n                } else {\n                    this.hideInlineAmendment(amendmentId);\n                }\n            });\n        }\n    }\n}\n\nclass MotionShow {\n    constructor() {\n        new LineNumberHighlighting();\n\n        let $paragraphs = $('.motionTextHolder .paragraph');\n        $paragraphs.find('.comment .shower').on(\"click\", this.showComment.bind(this));\n        $paragraphs.find('.comment .hider').on(\"click\", this.hideComment.bind(this));\n\n        $paragraphs.filter('.commentsOpened').find('.comment .shower').trigger(\"click\");\n        $paragraphs.filter(':not(.commentsOpened)').find('.comment .hider').trigger(\"click\");\n\n        $paragraphs.each((i, el) => {\n            new MotionParagraph($(el));\n        });\n\n        let s = location.hash.split('#comm');\n        if (s.length == 2) {\n            $('#comment' + s[1]).scrollintoview({top_offset: -100});\n        }\n\n        this.markMovedParagraphs();\n        this.initPrivateComments();\n        this.initProtocolShower();\n\n        const common = new IMotionShow();\n        common.initContactShow();\n        common.initAmendmentTextMode();\n        common.initCmdEnterSubmit();\n        common.initDelSubmit();\n        common.initDataTableActions();\n        common.initExpandableList();\n    }\n\n    private markMovedParagraphs() {\n        // Remove double markup\n        $(\".motionTextHolder .moved .moved\").removeClass('moved');\n\n        $(\".motionTextHolder .moved\").each(function () {\n            let $node = $(this),\n                paragraphNew = $node.data('moving-partner-paragraph'),\n                sectionId = $node.parents('.paragraph').first().attr('id').split('_')[1],\n                paragraphNewFirstline = $('#section_' + sectionId + '_' + paragraphNew).find('.lineNumber').first().data('line-number'),\n                msg: string;\n\n            if ($node.hasClass('inserted')) {\n                msg = __t('std', 'moved_paragraph_from_line');\n            } else {\n                msg = __t('std', 'moved_paragraph_to_line');\n            }\n            msg = msg.replace(/##LINE##/, paragraphNewFirstline).replace(/##PARA##/, (paragraphNew + 1));\n\n            if ($node[0].nodeName === 'LI') {\n                $node = $node.parent();\n            }\n            let $msg = $('<div class=\"movedParagraphHint\"></div>');\n            $msg.text(msg);\n            $msg.insertBefore($node);\n        });\n    }\n\n    private initProtocolShower() {\n        $(\".motionProtocol .protocolOpener\").on(\"click\", function () {\n            $(\".protocolHolder\").removeClass('hidden');\n            $(\".protocolHolder\").scrollintoview({top_offset: -50});\n        });\n    }\n\n    private initPrivateComments() {\n        if ($('.privateParagraph, .privateNote').length > 0) {\n            $('.privateParagraphNoteOpener').removeClass('hidden');\n        }\n        $('.privateNoteOpener').on(\"click\", (ev) => {\n            ev.preventDefault();\n            $('.privateNoteOpener').remove();\n            $('.motionData .privateNotes').removeClass('hidden');\n            $('.motionData .privateNotes textarea').trigger(\"focus\");\n            $('.privateParagraphNoteOpener').removeClass('hidden');\n        });\n        $('.privateParagraphNoteOpener button').on(\"click\", (ev) => {\n            $(ev.currentTarget).parents(\".privateParagraphNoteOpener\").addClass('hidden');\n            const $form = $(ev.currentTarget).parents('.privateParagraphNoteHolder').find('form');\n            $form.removeClass('hidden');\n            $form.find('textarea').trigger(\"focus\");\n        });\n        $('.privateNotes blockquote').on(\"click\", () => {\n            $('.privateNotes blockquote').addClass('hidden');\n            $('.privateNotes form').removeClass('hidden');\n            $('.privateNotes textarea').trigger(\"focus\");\n        });\n        $('.privateParagraphNoteHolder blockquote').on(\"click\", (ev) => {\n            const $target = $(ev.currentTarget).parents('.privateParagraphNoteHolder');\n            $target.find('blockquote').addClass('hidden');\n            $target.find('form').removeClass('hidden');\n            $target.find('textarea').trigger(\"focus\");\n        });\n    }\n\n    private showComment(ev) {\n        ev.preventDefault();\n        const $node = $(ev.currentTarget),\n            $commentHolder = $node.parents('.paragraph').first().find('.commentHolder'),\n            $bookmark = $node.parent();\n        $node.addClass('hidden');\n        $bookmark.find('.hider').removeClass('hidden');\n        $commentHolder.removeClass('hidden');\n        if (!$commentHolder.isOnScreen(0.1, 0.1)) {\n            $commentHolder.scrollintoview({top_offset: -100});\n        }\n    }\n\n    private hideComment(ev) {\n        const $node = $(ev.currentTarget),\n            $bookmark = $node.parent();\n        $node.addClass('hidden');\n        $bookmark.find('.shower').removeClass('hidden');\n\n        $node.parents('.paragraph').first().find('.commentHolder').addClass('hidden');\n        ev.preventDefault();\n    }\n}\n\nnew MotionShow();\n"]}