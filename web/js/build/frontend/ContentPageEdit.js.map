{"version":3,"sources":["frontend/ContentPageEdit.js","frontend/ContentPageEdit.ts"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","define","require","exports","Object","defineProperty","ContentPageEdit","constructor","$form","on","preventDefault","$textSaver","$","data","$textHolder","$editCaller","$contentSettings","find","$downloadableFiles","editCalled","bind","addClass","save","length","initContentSettings","initDownloadableFiles","onSubmitDeleteForm","ev","attr","editor","CKEDITOR","inline","versionCheck","scayt_sLang","removePlugins","extraPlugins","uploadUrl","filebrowserBrowseUrl","toolbarGroups","name","groups","evt","val","trigger","removeClass","showDownloadableFiles","$input","currentTarget","replace","$uploadLabel","path","split","filename","text","id","parents","first","delConfirm","bootbox","confirm","deleteDownloadableFile","deleteUrl","params","_csrf","post","ret","remove","children","alert","addUploadedFileCb","$el","append","hideDownloadableFiles","readUploadableFile","input","reader","FileReader","onload","x","files","readAsDataURL","getData","prop","uploadedFile","window","setTimeout","destroy","document","title","last","location","href","confirmed","__t"],"mappings":"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","file":"ContentPageEdit.js","sourcesContent":[null,"import editor = CKEDITOR.editor;\nimport config = CKEDITOR.config;\n\nexport class ContentPageEdit {\n    private $editCaller: JQuery;\n    private $textHolder: JQuery;\n    private $textSaver: JQuery;\n    private $contentSettings: JQuery;\n    private $downloadableFiles: JQuery;\n    private editor: editor;\n\n    constructor(private $form: JQuery) {\n        $form.on(\"submit\", e => e.preventDefault()); // necessary for IE11\n        this.$textSaver = $(this.$form.data('save-selector'));\n        this.$textHolder = $(this.$form.data('text-selector'));\n        this.$editCaller = $(this.$form.data('edit-selector'));\n        this.$contentSettings = $form.find('.contentSettingsToolbar');\n        this.$downloadableFiles = $form.find('.downloadableFiles');\n\n        this.$editCaller.on(\"click\", this.editCalled.bind(this));\n        this.$textSaver.addClass('hidden');\n        this.$textSaver.find('button').on(\"click\", this.save.bind(this));\n\n        if (this.$contentSettings.length > 0) {\n            this.initContentSettings();\n        }\n        if (this.$downloadableFiles.length > 0) {\n            this.initDownloadableFiles();\n        }\n\n        $(\".deletePageForm\").on(\"submit\", this.onSubmitDeleteForm.bind(this));\n    }\n\n    private editCalled(ev) {\n        ev.preventDefault();\n        this.$editCaller.addClass('hidden');\n        this.$textHolder.attr('contenteditable', \"true\");\n\n        this.editor = CKEDITOR.inline(this.$textHolder.attr('id'), {\n            versionCheck: false,\n            scayt_sLang: 'de_DE',\n            removePlugins: 'lite,showbloks,about,selectall,forms',\n            extraPlugins: 'uploadimage',\n            uploadUrl: this.$form.data('upload-url'),\n            filebrowserBrowseUrl: this.$form.data('image-browse-url'),\n            //filebrowserUploadUrl: '/uploader/upload.php?type=Files',\n            toolbarGroups: [\n                {name: 'basicstyles', groups: ['basicstyles', 'cleanup']},\n                {name: 'colors'},\n                {name: 'links'},\n                {name: 'insert'},\n                {name: 'others'},\n                {name: 'tools'},\n                '/',\n                {name: 'styles'},\n                {name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi']}\n            ]\n        } as config);\n        this.editor.on('fileUploadRequest', (evt) => {\n            evt.data['requestData']['_csrf'] = this.$form.find('> input[name=_csrf]').val();\n        });\n\n        this.$textHolder.trigger(\"focus\");\n        this.$textSaver.removeClass('hidden');\n        this.$contentSettings.removeClass('hidden');\n        this.showDownloadableFiles();\n    }\n\n    private initContentSettings() {\n        this.$contentSettings.find('input[name=url]').on('keyup change keypress', (ev) => {\n            let $input = $(ev.currentTarget);\n            $input.val(($input.val() as string).replace(/[^\\w_\\-,\\.äöüß]/, ''));\n        });\n    }\n\n    private initDownloadableFiles() {\n        const $uploadLabel = this.$downloadableFiles.find(\".uploadCol .text\");\n        this.$downloadableFiles.find(\"input[type=file]\").on(\"change\", () => {\n            const path = (this.$downloadableFiles.find(\"input[type=file]\").val() as string).split('\\\\');\n            const filename = path[path.length - 1];\n            $uploadLabel.text(filename);\n        });\n\n        this.$downloadableFiles.find(\".fileList\").on(\"click\", \".deleteFile\", (ev) => {\n            const id = $(ev.currentTarget).parents(\"li\").first().data(\"id\");\n            const delConfirm = this.$form.data(\"del-confirmation\");\n\n            bootbox.confirm(delConfirm, result => {\n                if (result) {\n                    this.deleteDownloadableFile(id);\n                }\n            });\n        });\n    }\n\n    private deleteDownloadableFile(id: string) {\n        const deleteUrl = this.$form.data(\"file-delete-url\");\n        const params = {\n\n            \"id\": id,\n            \"_csrf\": this.$form.find('> input[name=_csrf]').val(),\n        };\n\n        $.post(deleteUrl, params, (ret) => {\n            if (ret['success']) {\n                this.$downloadableFiles.find(\".fileList li[data-id=\" + id + \"]\").remove();\n\n                if (this.$downloadableFiles.find(\".fileList\").children().length === 0) {\n                    this.$downloadableFiles.find(\".none\").removeClass(\"hidden\");\n                }\n            } else {\n                alert(ret['message']);\n            }\n        });\n    }\n\n    private addUploadedFileCb(data) {\n        const $el = $('<li><a><span class=\"glyphicon glyphicon-download-alt\"></span> <span class=\"title\"></span></a>' +\n            '<button type=\"button\" class=\"btn btn-link deleteFile\"><span class=\"glyphicon glyphicon-trash\"></span></button></li>');\n        $el.find(\"a\").attr(\"href\", data['url']);\n        $el.find(\"a .title\").text(data['title']);\n        $el.attr(\"data-id\", data['id']);\n\n        this.$downloadableFiles.find(\"ul\").append($el);\n        this.$downloadableFiles.find(\".none\").addClass('hidden');\n    }\n\n    private hideDownloadableFiles() {\n        const hasFiles = (this.$downloadableFiles.find('ul li').length > 0);\n        if (!hasFiles) {\n            this.$downloadableFiles.addClass('hidden');\n        }\n        this.$downloadableFiles.find('.downloadableFilesUpload').addClass('hidden');\n        this.$downloadableFiles.find('#downloadableFileNew').val(\"\");\n        this.$downloadableFiles.find('#downloadableFileTitle').val(\"\");\n        this.$downloadableFiles.find(\".uploadCol .text\").text(this.$downloadableFiles.find(\".uploadCol .text\").data(\"title\"));\n    }\n\n    private showDownloadableFiles() {\n        this.$downloadableFiles.removeClass('hidden');\n        this.$downloadableFiles.find('.downloadableFilesUpload').removeClass('hidden');\n    }\n\n    private async readUploadableFile(input: HTMLInputElement): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = function () {\n                const data = reader.result as string;\n                const x = data.split(\";base64,\");\n                if (x.length === 2) {\n                    resolve(x[1]);\n                } else {\n                    alert(\"Could not read the given file\");\n                    resolve(null);\n                }\n            };\n            if (input.files.length > 0) {\n                reader.readAsDataURL(input.files[0]);\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    private async save(ev) {\n        ev.preventDefault();\n        let data = {\n            'data': this.editor.getData(),\n            '_csrf': this.$form.find('> input[name=_csrf]').val()\n        };\n        if (this.$contentSettings.length > 0) {\n            data['url'] = this.$contentSettings.find('input[name=url]').val();\n            data['title'] = this.$contentSettings.find('input[name=title]').val();\n            data['allConsultations'] = (this.$contentSettings.find('input[name=allConsultations]').prop('checked') ? 1 : 0);\n            data['inMenu'] = (this.$contentSettings.find('input[name=inMenu]').prop('checked') ? 1 : 0);\n        }\n        if (this.$downloadableFiles.length > 0) {\n            const input = this.$downloadableFiles.find(\"input[type=file]\")[0] as HTMLInputElement;\n            const uploadedFile = await this.readUploadableFile(input);\n\n            if (uploadedFile) {\n                const path = (this.$downloadableFiles.find(\"input[type=file]\").val() as string).split('\\\\');\n                const filename = path[path.length - 1];\n                data['uploadDownloadableFile'] = uploadedFile;\n                data['uploadDownloadableTitle'] = this.$downloadableFiles.find(\"#downloadableFileTitle\").val();\n                data['uploadDownloadableFilename'] = filename;\n            }\n        }\n\n        $.post(this.$form.attr('action'), data, (ret) => {\n            if (ret['success']) {\n                window.setTimeout(() => {\n                    this.editor.destroy();\n                }, 100);\n                this.$textSaver.addClass('hidden');\n                this.$textHolder.attr('contenteditable', 'false');\n                this.$editCaller.removeClass('hidden');\n                this.$contentSettings.addClass('hidden');\n\n                if (ret['title'] !== null) {\n                    $(\".pageTitle\").text(ret['title']);\n                    document.title = ret['title'];\n                    $(\"#mainmenu .page\" + ret['id']).text(ret['title']);\n                    $(\".breadcrumb\").children().last().text(ret['title']);\n                }\n\n                if (ret['uploadedFile']) {\n                    this.addUploadedFileCb(ret['uploadedFile']);\n                }\n                this.hideDownloadableFiles();\n\n                if (ret['message']) {\n                    alert(ret['message']);\n                }\n\n                if (ret['redirectTo']) {\n                    window.location.href = ret['redirectTo'];\n                }\n            } else {\n                alert('Something went wrong...');\n            }\n        })\n    }\n\n    private onSubmitDeleteForm(ev, data) {\n        if (data && typeof (data.confirmed) && data.confirmed === true) {\n            return;\n        }\n        ev.preventDefault();\n        bootbox.confirm(__t(\"admin\", \"delPageConfirm\"), function (result) {\n            if (result) {\n                $(\".deletePageForm\").trigger(\"submit\", {'confirmed': true});\n            }\n        });\n    }\n}\n"]}