{"version":3,"sources":["frontend/VotingBlock.js","frontend/VotingBlock.ts"],"names":["define","require","exports","Object","defineProperty","value","VotingBlock","constructor","$element","element","vueEl","querySelector","votingInitJson","getAttribute","pollUrl","voteUrl","this","widget","Vue","createApp","template","data","votings","JSON","parse","pollingId","methods","vote","votingBlockId","itemGroupSameVote","itemType","itemId","votePublic","postData","_csrf","document","votes","public","url","replace","$","post","undefined","success","alert","message","catch","err","responseText","reloadData","get","console","error","startPolling","window","setInterval","beforeUnmount","clearInterval","created","config","compilerOptions","whitespace","mount"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,iBAAc,ECD1BJ,EAAAI,YAAA,MAGIC,YAAYC,GACR,MAAMC,EAAUD,EAAS,GACrBE,EAAQD,EAAQE,cAAc,kBAC9BC,EAAiBH,EAAQI,aAAa,eACtCC,EAAUL,EAAQI,aAAa,iBAC/BE,EAAUN,EAAQI,aAAa,iBAEnCG,KAAKC,OAASC,IAAIC,UAAU,CACxBC,SAAU,8LAIVC,KAAI,KACO,CACHC,QAASC,KAAKC,MAAMZ,GACpBa,UAAW,OAGnBC,QAAS,CACLC,KAAM,SAAUC,EAAeC,EAAmBC,EAAUC,EAAQJ,EAAMK,GACtE,MAAMC,EAAW,CACbC,MAAOC,SAASxB,cAAc,8BAA8BE,aAAa,WACzEuB,MAAO,CAAC,CACJP,oBACAC,WACAC,SACAJ,OACAU,OAAUL,KAGZf,EAASD,KACTsB,EAAMvB,EAAQwB,QAAQ,gBAAiBX,GAC7CY,EAAEC,KAAKH,EAAKL,GAAU,SAAUZ,QACPqB,IAAjBrB,EAAKsB,SAA0BtB,EAAKsB,QAIxC1B,EAAOK,QAAUD,EAHbuB,MAAMvB,EAAKwB,YAIhBC,OAAM,SAAUC,GACfH,MAAMG,EAAIC,kBAGlBC,WAAY,WACR,GAAgB,OAAZnC,EACA,OAEJ,MAAMG,EAASD,KACfwB,EAAEU,IAAIpC,GAAS,SAAUO,GACrBJ,EAAOK,QAAUD,KAClByB,OAAM,SAAUC,GACfI,QAAQC,MAAM,0CAA2CL,OAGjEM,aAAc,WACV,MAAMpC,EAASD,KACfA,KAAKS,UAAY6B,OAAOC,aAAY,WAChCtC,EAAOgC,eACR,OAGXO,gBACIF,OAAOG,cAAczC,KAAKS,YAE9BiC,UACI1C,KAAKqC,kBAIbrC,KAAKC,OAAO0C,OAAOC,gBAAgBC,WAAa,WAChDP,OAA4B,oBAAEtC,KAAKC,OAAQ,UAE3CD,KAAKC,OAAO6C,MAAMpD","file":"VotingBlock.js","sourcesContent":[null,"declare var Vue: any;\n\nexport class VotingBlock {\n    private widget;\n\n    constructor($element: JQuery) {\n        const element = $element[0],\n            vueEl = element.querySelector(\".currentVoting\"),\n            votingInitJson = element.getAttribute('data-voting'),\n            pollUrl = element.getAttribute('data-url-poll'),\n            voteUrl = element.getAttribute('data-url-vote');\n\n        this.widget = Vue.createApp({\n            template: `\n                <div class=\"currentVotings\">\n                <voting-block-widget v-for=\"voting in votings\" :voting=\"voting\" @vote=\"vote\"></voting-block-widget>\n                </div>`,\n            data() {\n                return {\n                    votings: JSON.parse(votingInitJson),\n                    pollingId: null\n                };\n            },\n            methods: {\n                vote: function (votingBlockId, itemGroupSameVote, itemType, itemId, vote, votePublic) {\n                    const postData = {\n                        _csrf: document.querySelector('head meta[name=csrf-token]').getAttribute('content'),\n                        votes: [{\n                            itemGroupSameVote,\n                            itemType,\n                            itemId,\n                            vote,\n                            \"public\": votePublic\n                        }]\n                    };\n                    const widget = this;\n                    const url = voteUrl.replace(/VOTINGBLOCKID/, votingBlockId);\n                    $.post(url, postData, function (data) {\n                        if (data.success !== undefined && !data.success) {\n                            alert(data.message);\n                            return;\n                        }\n                        widget.votings = data;\n                    }).catch(function (err) {\n                        alert(err.responseText);\n                    });\n                },\n                reloadData: function () {\n                    if (pollUrl === null) {\n                        return;\n                    }\n                    const widget = this;\n                    $.get(pollUrl, function (data) {\n                        widget.votings = data;\n                    }).catch(function (err) {\n                        console.error(\"Could not load voting data from backend\", err);\n                    });\n                },\n                startPolling: function () {\n                    const widget = this;\n                    this.pollingId = window.setInterval(function () {\n                        widget.reloadData();\n                    }, 3000);\n                }\n            },\n            beforeUnmount() {\n                window.clearInterval(this.pollingId)\n            },\n            created() {\n                this.startPolling()\n            }\n        });\n\n        this.widget.config.compilerOptions.whitespace = 'condense';\n        window['__initVueComponents'](this.widget, 'voting');\n\n        this.widget.mount(vueEl);\n    }\n}\n"]}