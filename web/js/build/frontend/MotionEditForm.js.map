{"version":3,"sources":["frontend/MotionEditForm.js","frontend/MotionEditForm.ts"],"names":["define","require","exports","DraftSavingEngine_1","AntragsgruenEditor_1","Object","defineProperty","value","MotionEditForm","constructor","$form","this","hasChanged","$","datetimepicker","locale","attr","format","each","initWysiwyg","bind","initPlainTextFormGroup","$draftHint","draftMotionType","data","draftMotionId","DraftSavingEngine","on","ev","error","checkMultipleTagsError","preventDefault","window","off","onLeavePage","$group","find","length","removeClass","addClass","scrollintoview","top_offset","__t","i","el","$textarea","editor","AntragsgruenEditor","parents","parent","val","getEditor","getData","hasClass","$fieldset","$input","maxLen","maxLenSoft","$warning","$submit","first","$currCounter","currLen","text","prop","trigger"],"mappings":"AAAAA,OAAO,CAAC,UAAW,UAAW,8BAA+B,iCAAiC,SAAUC,EAASC,EAASC,EAAqBC,GAC3I,aACAC,OAAOC,eAAeJ,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQM,oBAAiB,ECA7B,MAAaA,EAGT,WAAAC,CAAoBC,GAAAC,KAAAD,MAAAA,EAFZC,KAAAC,YAAsB,EAG1BC,EAAE,qBAAqBC,eAAe,CAClCC,OAAQF,EAAE,QAAQG,KAAK,QACvBC,OAAQ,MAGZJ,EAAE,qBAAqBK,KAAKP,KAAKQ,YAAYC,KAAKT,OAClDE,EAAE,0BAA0BK,KAAKP,KAAKU,uBAAuBD,KAAKT,OAElE,IAAIW,EAAaT,EAAE,cACfU,EAAkBD,EAAWE,KAAK,eAClCC,EAAgBH,EAAWE,KAAK,aAEpC,IAAIrB,EAAAuB,kBAAkBhB,EAAOY,EAAY,UAAYC,EAAkB,IAAME,GAE7Ef,EAAMiB,GAAG,UAAWC,IAChB,IAAIC,GAAiB,EACjBlB,KAAKmB,2BACLD,GAAQ,GAGRA,EACAD,EAAGG,iBAEHlB,EAAEmB,QAAQC,IAAI,eAAgBzB,EAAe0B,YDJ7C,GCOZ,CAEQ,sBAAAJ,GACJ,IAAIK,EAAiBxB,KAAKD,MAAM0B,KAAK,sBACrC,OAAsB,IAAlBD,EAAOE,SAIP1B,KAAKD,MAAM0B,KAAK,2CAA2CC,QAO3DF,EAAOC,KAAK,iBAAiBC,OAAS,GALtCF,EAAOG,YAAY,cACZ,IAQPH,EAAOI,SAAS,aAChBJ,EAAOK,eAAe,CAACC,YAAa,MAC7B,GAEf,CAEO,kBAAOP,GACV,OAAOQ,IAAI,MAAO,qBACtB,CAEQ,WAAAvB,CAAYwB,EAAGC,GACnB,IACIC,EADUhC,EAAE+B,GACQR,KAAK,eACzBU,EAAS,IAAI1C,EAAA2C,mBAAmBF,EAAU7B,KAAK,OAEnD6B,EAAUG,QAAQ,QAAQrB,GAAG,UAAU,KACnCkB,EAAUI,SAASb,KAAK,YAAYc,IAAIJ,EAAOK,YAAYC,UAAU,IAEzEN,EAAOK,YAAYxB,GAAG,UAAU,KACvBhB,KAAKC,aACND,KAAKC,YAAa,EACbC,EAAE,QAAQwC,SAAS,YACpBxC,EAAEmB,QAAQL,GAAG,eAAgBnB,EAAe0B,aDVhD,GCcZ,CAEQ,sBAAAb,CAAuBsB,EAAGC,GAC9B,IAAIU,EAAYzC,EAAE+B,GACdW,EAASD,EAAUlB,KAAK,sBAC5B,GAAiC,GAA7BkB,EAAU9B,KAAK,WAAiB,CAChC,IAAIgC,EAASF,EAAU9B,KAAK,WACxBiC,GAAa,EACbC,EAAWJ,EAAUlB,KAAK,kBAC1BuB,EAAUL,EAAUN,QAAQ,QAAQY,QAAQxB,KAAK,uBACjDyB,EAAeP,EAAUlB,KAAK,wBAC9BoB,EAAS,IACTC,GAAa,EACbD,IAAU,GAGdD,EAAO5B,GAAG,gBAAgB,KACtB,IAAImC,EAAWP,EAAOL,MAAiBb,OACvCwB,EAAaE,KAAKD,GACdA,EAAUN,GACVE,EAASpB,YAAY,UAChBmB,GACDE,EAAQK,KAAK,YAAY,KAG7BN,EAASnB,SAAS,UACbkB,GACDE,EAAQK,KAAK,YAAY,GDhB7B,ICmBLC,QAAQ,SDjBX,CCmBR,EA3GJ/D,EAAAM,eAAAA,CD4FA","file":"MotionEditForm.js","sourcesContent":[null,"import {DraftSavingEngine} from \"../shared/DraftSavingEngine\";\nimport {AntragsgruenEditor} from \"../shared/AntragsgruenEditor\";\n\nexport class MotionEditForm {\n    private hasChanged: boolean = false;\n\n    constructor(private $form: JQuery) {\n        $(\".input-group.date\").datetimepicker({\n            locale: $(\"html\").attr('lang'),\n            format: 'L'\n        });\n\n        $(\".wysiwyg-textarea\").each(this.initWysiwyg.bind(this));\n        $(\".form-group.plain-text\").each(this.initPlainTextFormGroup.bind(this));\n\n        let $draftHint = $(\"#draftHint\"),\n            draftMotionType = $draftHint.data(\"motion-type\"),\n            draftMotionId = $draftHint.data(\"motion-id\");\n\n        new DraftSavingEngine($form, $draftHint, \"motion_\" + draftMotionType + \"_\" + draftMotionId);\n\n        $form.on(\"submit\", (ev) => {\n            let error: boolean = false;\n            if (this.checkMultipleTagsError()) {\n                error = true;\n            }\n\n            if (error) {\n                ev.preventDefault();\n            } else {\n                $(window).off(\"beforeunload\", MotionEditForm.onLeavePage);\n            }\n        });\n    }\n\n    private checkMultipleTagsError(): boolean {\n        let $group: JQuery = this.$form.find('.multipleTagsGroup');\n        if ($group.length === 0) {\n            return false;\n        }\n\n        if (this.$form.find('.multipleTagsGroup input[type=checkbox]').length) {\n            // Checkboxes: multiple tags are allowed, but also none\n            $group.removeClass('has-error');\n            return false;\n        }\n\n        // From here on: radios\n        if ($group.find('input:checked').length > 0) {\n            $group.removeClass('has-error');\n            return false;\n        } else {\n            $group.addClass('has-error');\n            $group.scrollintoview({top_offset: -50});\n            return true;\n        }\n    }\n\n    public static onLeavePage(): string {\n        return __t(\"std\", \"leave_changed_page\");\n    }\n\n    private initWysiwyg(i, el) {\n        let $holder = $(el),\n            $textarea = $holder.find(\".texteditor\"),\n            editor = new AntragsgruenEditor($textarea.attr(\"id\"));\n\n        $textarea.parents(\"form\").on(\"submit\", () => {\n            $textarea.parent().find(\"textarea\").val(editor.getEditor().getData());\n        });\n        editor.getEditor().on('change', () => {\n            if (!this.hasChanged) {\n                this.hasChanged = true;\n                if (!$(\"body\").hasClass('testing')) {\n                    $(window).on(\"beforeunload\", MotionEditForm.onLeavePage);\n                }\n            }\n        });\n    }\n\n    private initPlainTextFormGroup(i, el) {\n        let $fieldset = $(el),\n            $input = $fieldset.find(\"input.form-control\");\n        if ($fieldset.data(\"max-len\") != 0) {\n            let maxLen = $fieldset.data(\"max-len\"),\n                maxLenSoft = false,\n                $warning = $fieldset.find('.maxLenTooLong'),\n                $submit = $fieldset.parents(\"form\").first().find(\"button[type=submit]\"),\n                $currCounter = $fieldset.find(\".maxLenHint .counter\");\n            if (maxLen < 0) {\n                maxLenSoft = true;\n                maxLen = -1 * maxLen;\n            }\n\n            $input.on('keyup change', () => {\n                let currLen = ($input.val() as string).length;\n                $currCounter.text(currLen);\n                if (currLen > maxLen) {\n                    $warning.removeClass('hidden');\n                    if (!maxLenSoft) {\n                        $submit.prop(\"disabled\", true);\n                    }\n                } else {\n                    $warning.addClass('hidden');\n                    if (!maxLenSoft) {\n                        $submit.prop(\"disabled\", false);\n                    }\n                }\n            }).trigger('change');\n        }\n    }\n}\n"]}